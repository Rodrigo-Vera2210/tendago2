    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using ER.BE; 



namespace ER.DA
{
    public partial class DetalleEntradaDataAccess
    {
    
   
   //     #region << Default Methods >>

   //     /// <summary>
   //     /// Create a new entity type of DetalleEntrada
   //     /// </summary>
   //     public static DetalleEntradaEntity Insert(DetalleEntradaEntity detalleEntrada, SqlConnection connection, SqlTransaction transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;
   //             mCommand.CommandText =  "DetalleEntrada_Insert";

   //             #region << Add the params >>
                 
			//	mCommand.Parameters.AddWithValue("@IdEmpresa", detalleEntrada.IdEmpresa);
			//	mCommand.Parameters.AddWithValue("@Periodo", detalleEntrada.Periodo.ToUpper());
			//	mCommand.Parameters.AddWithValue("@Fecha", detalleEntrada.Fecha);
			//	mCommand.Parameters.AddWithValue("@TipoTransaccion", detalleEntrada.TipoTransaccion.ToUpper());
			//	mCommand.Parameters.AddWithValue("@IdEntrada", detalleEntrada.IdEntrada.ToUpper());
			//	mCommand.Parameters.AddWithValue("@IdProducto", detalleEntrada.IdProducto);
			//	mCommand.Parameters.AddWithValue("@IdProveedor", detalleEntrada.IdProveedor);
			//	mCommand.Parameters.AddWithValue("@IdLocal", detalleEntrada.IdLocal);
			//	if(detalleEntrada.ValorFOB != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorFOB", detalleEntrada.ValorFOB);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorFOB",DBNull.Value);
			//	}

			//	if(detalleEntrada.FactorDistribucion != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@FactorDistribucion", detalleEntrada.FactorDistribucion);
			//	}
			//	else

			//	{
			//		mCommand.Parameters.AddWithValue("@FactorDistribucion",DBNull.Value);
			//	}

			//	if(detalleEntrada.CostoUnitarioImportacion != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@CostoUnitarioImportacion", detalleEntrada.CostoUnitarioImportacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@CostoUnitarioImportacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@Cantidad", detalleEntrada.Cantidad);
			//	mCommand.Parameters.AddWithValue("@IdTipoUnidad", detalleEntrada.IdTipoUnidad);
			//	mCommand.Parameters.AddWithValue("@CostoVenta", detalleEntrada.CostoVenta);
			//	if(detalleEntrada.Descuento != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@Descuento", detalleEntrada.Descuento);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@Descuento",DBNull.Value);
			//	}

			//	if (detalleEntrada.ValorAdicional != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorAdicional", detalleEntrada.ValorAdicional);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorAdicional", DBNull.Value);
			//	}

			//	//if(detalleEntrada.Subtotal != 0)
			//	//{
			//	//	mCommand.Parameters.AddWithValue("@Subtotal", detalleEntrada.Subtotal);
			//	//}
			//	//else
			//	//{
			//	//	mCommand.Parameters.AddWithValue("@Subtotal",DBNull.Value);
			//	//}

			//	if (detalleEntrada.FechaFabricacion != null && detalleEntrada.FechaFabricacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaFabricacion", detalleEntrada.FechaFabricacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaFabricacion",DBNull.Value);
			//	}

			//	if(detalleEntrada.FechaExpiracion != null && detalleEntrada.FechaExpiracion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaExpiracion", detalleEntrada.FechaExpiracion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaExpiracion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(detalleEntrada.Lote))
			//	{
			//		mCommand.Parameters.AddWithValue("@Lote", detalleEntrada.Lote.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@Lote",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IpIngreso", detalleEntrada.IpIngreso.ToUpper());
			//	mCommand.Parameters.AddWithValue("@UsuarioIngreso", detalleEntrada.UsuarioIngreso.ToUpper());
			//	mCommand.Parameters.AddWithValue("@FechaIngreso", detalleEntrada.FechaIngreso);
			//	if(!String.IsNullOrEmpty(detalleEntrada.IpModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion", detalleEntrada.IpModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(detalleEntrada.UsuarioModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion", detalleEntrada.UsuarioModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
			//	}

			//	if(detalleEntrada.FechaModificacion != null && detalleEntrada.FechaModificacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion", detalleEntrada.FechaModificacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEstado", detalleEntrada.IdEstado);


   //             if (detalleEntrada.Estado != 0)
   //             {
   //                 mCommand.Parameters.AddWithValue("@Estado", detalleEntrada.Estado);
   //             }
   //             else
   //             {
   //                 mCommand.Parameters.AddWithValue("@Estado", DBNull.Value);
   //             }

   //             // Add the primary keys columns
   //             mCommand.Parameters.Add("@Id", SqlDbType.VarChar, 50);
			//	mCommand.Parameters["@Id"].Direction = ParameterDirection.Output;


   //             #endregion
                
   //             // Insert DetalleEntrada
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();

			//	detalleEntrada.Id = Convert.ToString(mCommand.Parameters["@Id"].Value);


   //             return detalleEntrada;
   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }

   //     /// <summary>
   //     /// Update a entity
   //     /// </summary>
   //     public static void Update(DetalleEntradaEntity detalleEntrada, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;;
   //             mCommand.CommandText = "DetalleEntrada_Update";

   //              #region << Add the params >>

			//	mCommand.Parameters.AddWithValue("@Id", detalleEntrada.Id);
			//	mCommand.Parameters.AddWithValue("@IdEmpresa", detalleEntrada.IdEmpresa);
			//	mCommand.Parameters.AddWithValue("@Periodo", detalleEntrada.Periodo);
			//	mCommand.Parameters.AddWithValue("@Fecha", detalleEntrada.Fecha);
			//	mCommand.Parameters.AddWithValue("@TipoTransaccion", detalleEntrada.TipoTransaccion);
			//	mCommand.Parameters.AddWithValue("@IdEntrada", detalleEntrada.IdEntrada);
			//	mCommand.Parameters.AddWithValue("@IdProducto", detalleEntrada.IdProducto);
			//	mCommand.Parameters.AddWithValue("@IdProveedor", detalleEntrada.IdProveedor);
			//	mCommand.Parameters.AddWithValue("@IdLocal", detalleEntrada.IdLocal);
			//	if(detalleEntrada.ValorFOB != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorFOB", detalleEntrada.ValorFOB);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorFOB",DBNull.Value);
			//	}

			//	if(detalleEntrada.FactorDistribucion != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@FactorDistribucion", detalleEntrada.FactorDistribucion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@FactorDistribucion",DBNull.Value);
			//	}

			//	if(detalleEntrada.CostoUnitarioImportacion != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@CostoUnitarioImportacion", detalleEntrada.CostoUnitarioImportacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@CostoUnitarioImportacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@Cantidad", detalleEntrada.Cantidad);
			//	mCommand.Parameters.AddWithValue("@IdTipoUnidad", detalleEntrada.IdTipoUnidad);
			//	mCommand.Parameters.AddWithValue("@CostoVenta", detalleEntrada.CostoVenta);
			//	if(detalleEntrada.Descuento != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@Descuento", detalleEntrada.Descuento);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@Descuento",DBNull.Value);
			//	}

			//	if (detalleEntrada.ValorAdicional != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorAdicional", detalleEntrada.Descuento);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ValorAdicional", DBNull.Value);
			//	}

			//	if (detalleEntrada.Subtotal != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@Subtotal", detalleEntrada.Subtotal);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@Subtotal",DBNull.Value);
			//	}

			//	if(detalleEntrada.FechaFabricacion != null && detalleEntrada.FechaFabricacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaFabricacion", detalleEntrada.FechaFabricacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("FechaFabricacion",DBNull.Value);
			//	}

			//	if(detalleEntrada.FechaExpiracion != null && detalleEntrada.FechaExpiracion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaExpiracion", detalleEntrada.FechaExpiracion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("FechaExpiracion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(detalleEntrada.Lote))
			//	{
			//		mCommand.Parameters.AddWithValue("@Lote", detalleEntrada.Lote.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@Lote",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IpIngreso", detalleEntrada.IpIngreso);
			//	mCommand.Parameters.AddWithValue("@UsuarioIngreso", detalleEntrada.UsuarioIngreso);
			//	mCommand.Parameters.AddWithValue("@FechaIngreso", detalleEntrada.FechaIngreso);
			//	if(!String.IsNullOrEmpty(detalleEntrada.IpModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion", detalleEntrada.IpModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(detalleEntrada.UsuarioModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion", detalleEntrada.UsuarioModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
			//	}

			//	if(detalleEntrada.FechaModificacion != null && detalleEntrada.FechaModificacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion", detalleEntrada.FechaModificacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("FechaModificacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEstado", detalleEntrada.IdEstado);
                
   
   //             #endregion
                
   //             // Update detalleEntrada
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();


   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }

   //      /// <summary>
   //     /// Delete a entity
   //     /// </summary>
   //     public static void Delete(DetalleEntradaEntity detalleEntrada, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;;
   //             mCommand.CommandText = "DetalleEntrada_Delete";
			//	mCommand.Parameters.AddWithValue("@Id", detalleEntrada.Id.ToUpper());
			//	mCommand.Parameters.AddWithValue("@FechaModificacion", detalleEntrada.FechaModificacion);
			//	mCommand.Parameters.AddWithValue("@UsuarioModificacion", detalleEntrada.UsuarioModificacion.ToUpper());
			//	mCommand.Parameters.AddWithValue("@IpModificacion", detalleEntrada.IpModificacion.ToUpper());

                
   //             // Update detalleEntrada
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();


   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }
        
        
         
         
   //      /// <summary>
   //     /// Load a entity by your Primary Key
   //     /// </summary>
   //     public static DetalleEntradaEntity LoadByPK(string Id, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //     	return LoadByPK(Id,connection,transaction,1);
   //     }
        
   //     /// <summary>
   //     /// Load a entity by your Primary Key
   //     /// </summary>
   //     public static DetalleEntradaEntity LoadByPK(string Id, SqlConnection connection, SqlTransaction  transaction, int deepLoadLevel)
   //     {
   //         DetalleEntradaEntity detalleEntrada = new DetalleEntradaEntity();
            
			//detalleEntrada.Id = Id.ToUpper();
            
            
   //         SqlCommand mCommand = new SqlCommand();
   //         SqlDataReader reader = null;
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;
   //             mCommand.CommandText = "DetalleEntrada_LoadByPK";

   //             #region << Add the params >>

			//	mCommand.Parameters.AddWithValue("@Id", detalleEntrada.Id.ToUpper());
                
 
   //             #endregion 
                
   //             if (connection.State != ConnectionState.Open) connection.Open();

   //             reader = mCommand.ExecuteReader();

   //             if(!reader.HasRows) return null;
                
	  //          while (reader.Read())
	  //          {
			//		#region << Deep Load >>
   //                 if (deepLoadLevel == 1)
		 //    		{
			//			detalleEntrada.IdEntradaAsEntrada = EntradaDataAccess.ConvertToEntradaEntity(reader, "IdEntrada");
			//			detalleEntrada.IdProductoAsProducto = ProductoDataAccess.ConvertToProductoEntity(reader, "IdProducto");
			//			detalleEntrada.IdProveedorAsEntidad = EntidadDataAccess.ConvertToEntidadEntity(reader, "IdProveedor");
			//			detalleEntrada.IdLocalAsLocalBodega = LocalBodegaDataAccess.ConvertToLocalBodegaEntity(reader, "IdLocal");

   //                 }
	  //              #endregion
	                
	  //              #region << Load the BusinessEntity Object >>
					
			//		detalleEntrada.Id = Convert.ToString(reader["Id"]);
			//		detalleEntrada.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
			//		detalleEntrada.Periodo = Convert.ToString(reader["Periodo"]);
			//		detalleEntrada.Fecha = Convert.ToDateTime(reader["Fecha"]);
			//		detalleEntrada.TipoTransaccion = Convert.ToString(reader["TipoTransaccion"]);
			//		detalleEntrada.IdEntrada = Convert.ToString(reader["IdEntrada"]);
			//		detalleEntrada.IdProducto = Convert.ToInt32(reader["IdProducto"]);
			//		detalleEntrada.IdProveedor = Convert.ToInt32(reader["IdProveedor"]);
			//		detalleEntrada.IdLocal = Convert.ToInt32(reader["IdLocal"]);
			//		if (reader["ValorFOB"] != DBNull.Value)
			//		{
			//			detalleEntrada.ValorFOB = (decimal) reader["ValorFOB"];
			//		}
			//		if (reader["FactorDistribucion"] != DBNull.Value)
			//		{
			//			detalleEntrada.FactorDistribucion = (decimal) reader["FactorDistribucion"];
			//		}
			//		if (reader["CostoUnitarioImportacion"] != DBNull.Value)
			//		{
			//			detalleEntrada.CostoUnitarioImportacion = (decimal) reader["CostoUnitarioImportacion"];
			//		}
			//		detalleEntrada.Cantidad = (decimal) reader["Cantidad"];
			//		detalleEntrada.IdTipoUnidad = Convert.ToInt32(reader["IdTipoUnidad"]);
			//		detalleEntrada.CostoVenta = (decimal) reader["CostoVenta"];
			//		if (reader["Descuento"] != DBNull.Value)
			//		{
			//			detalleEntrada.Descuento = (decimal) reader["Descuento"];
			//		}
			//		if (reader["ValorAdicional"] != DBNull.Value)
			//		{
			//			detalleEntrada.ValorAdicional = (decimal)reader["ValorAdicional"];
			//		}
			//		if (reader["Subtotal"] != DBNull.Value)
			//		{
			//			detalleEntrada.Subtotal = (decimal) reader["Subtotal"];
			//		}
			//		if (reader["FechaFabricacion"] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaFabricacion = Convert.ToDateTime(reader["FechaFabricacion"]);
			//		}
			//		if (reader["FechaExpiracion"] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaExpiracion = Convert.ToDateTime(reader["FechaExpiracion"]);
			//		}
			//		if (reader["Lote"] != DBNull.Value)
			//		{
			//			detalleEntrada.Lote = Convert.ToString(reader["Lote"]).ToUpper();
			//		}
			//		detalleEntrada.IpIngreso = Convert.ToString(reader["IpIngreso"]);
			//		detalleEntrada.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
			//		detalleEntrada.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
			//		if (reader["IpModificacion"] != DBNull.Value)
			//		{
			//			detalleEntrada.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
			//		}
			//		if (reader["UsuarioModificacion"] != DBNull.Value)
			//		{
			//			detalleEntrada.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
			//		}
			//		if (reader["FechaModificacion"] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
			//		}
			//		detalleEntrada.IdEstado = Convert.ToInt16(reader["IdEstado"]);

	  //              #endregion
	  //          }

   //             detalleEntrada.SetLoadedState();
   //             return detalleEntrada;
   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             if (reader != null) reader.Close();
   //             mCommand.Dispose();
   //         }
   //     }
        
   //     #endregion
        
        
        
        
   //     #region << Mappers >>
        
   //     public static DetalleEntradaEntity ConvertToDetalleEntradaEntity (SqlDataReader reader,string fkColumnName)
   //     {
   //         DetalleEntradaEntity detalleEntrada = new DetalleEntradaEntity();
            
   //         try
   //         {
   //             bool hasData=false;
   //             string columName;
                
   //             #region << Load the BusinessEntity Object >>
                
			//	try
			//	{
			//		columName = String.Format("Id_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Id = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdEmpresa_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdEmpresa = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("Periodo_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Periodo = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("Fecha_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Fecha = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("TipoTransaccion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.TipoTransaccion = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdEntrada_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdEntrada = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdProducto_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdProducto = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdProveedor_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdProveedor = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdLocal_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdLocal = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("ValorFOB_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.ValorFOB = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FactorDistribucion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.FactorDistribucion = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("CostoUnitarioImportacion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.CostoUnitarioImportacion = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("Cantidad_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Cantidad = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdTipoUnidad_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdTipoUnidad = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("CostoVenta_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.CostoVenta = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("Descuento_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Descuento = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{ }
			//	try
			//	{
			//		columName = String.Format("ValorAdicional_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.ValorAdicional = (decimal)reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch { }
			//	try
			//	{
			//		columName = String.Format("Subtotal_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Subtotal = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaFabricacion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaFabricacion = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaExpiracion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaExpiracion = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("Lote_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.Lote = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IpIngreso_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IpIngreso = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("UsuarioIngreso_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.UsuarioIngreso = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaIngreso_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaIngreso = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IpModificacion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IpModificacion = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("UsuarioModificacion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.UsuarioModificacion = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaModificacion_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.FechaModificacion = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdEstado_DetalleEntradaFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			detalleEntrada.IdEstado = Convert.ToInt16(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}

                
   //             #endregion
                
   //             detalleEntrada.SetLoadedState();
   //             if(hasData)
   //             {
   //             	return detalleEntrada;
   //             }
   //             else return null;
   //         }
   //         catch (Exception exc)
   //         {
   //             return null;
   //         }
   //         finally
   //         {
                
   //         }
   //     }
        
   //     #endregion
        
   
    }
}


