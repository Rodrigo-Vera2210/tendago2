    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using ER.BE; 



namespace ER.DA
{
    public partial class RucDataAccess
    {
    
   
   //     #region << Default Methods >>

   //     /// <summary>
   //     /// Create a new entity type of Ruc
   //     /// </summary>
   //     public static RucEntity Insert(RucEntity ruc, SqlConnection connection, SqlTransaction transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;
   //             mCommand.CommandText =  "Ruc_Insert";

   //             #region << Add the params >>
                 
			//	if(!String.IsNullOrEmpty(ruc.RazonSocial))
			//	{
			//		mCommand.Parameters.AddWithValue("@RazonSocial", ruc.RazonSocial.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@RazonSocial",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(ruc.ActividadEconomica))
			//	{
			//		mCommand.Parameters.AddWithValue("@ActividadEconomica", ruc.ActividadEconomica.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ActividadEconomica",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@TokenFactElectonica", ruc.TokenFactElectonica.ToUpper());
			//	if(ruc.LocalPorDefecto != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@LocalPorDefecto", ruc.LocalPorDefecto);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@LocalPorDefecto",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEmpresa", ruc.IdEmpresa);
			//	mCommand.Parameters.AddWithValue("@LimiteFacturacion", ruc.LimiteFacturacion);
			//	if(ruc.TotalFacturado != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@TotalFacturado", ruc.TotalFacturado);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@TotalFacturado",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IpIngreso", ruc.IpIngreso.ToUpper());
			//	mCommand.Parameters.AddWithValue("@UsuarioIngreso", ruc.UsuarioIngreso.ToUpper());
			//	mCommand.Parameters.AddWithValue("@FechaIngreso", ruc.FechaIngreso);
			//	if(!String.IsNullOrEmpty(ruc.IpModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion", ruc.IpModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(ruc.UsuarioModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion", ruc.UsuarioModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
			//	}

			//	if(ruc.FechaModificacion != null && ruc.FechaModificacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion", ruc.FechaModificacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEstado", ruc.IdEstado);

			//	// Add the primary keys columns
			//	mCommand.Parameters.Add("@Ruc", SqlDbType.VarChar, 50);
			//	mCommand.Parameters["@Ruc"].Direction = ParameterDirection.Output;


   //             #endregion
                
   //             // Insert Ruc
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();

			//	ruc.Ruc = Convert.ToString(mCommand.Parameters["@Ruc"].Value);


   //             return ruc;
   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }

   //     /// <summary>
   //     /// Update a entity
   //     /// </summary>
   //     public static void Update(RucEntity ruc, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;;
   //             mCommand.CommandText = "Ruc_Update";

   //              #region << Add the params >>

			//	mCommand.Parameters.AddWithValue("@Ruc", ruc.Ruc);
			//	if(!String.IsNullOrEmpty(ruc.RazonSocial))
			//	{
			//		mCommand.Parameters.AddWithValue("@RazonSocial", ruc.RazonSocial.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@RazonSocial",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(ruc.ActividadEconomica))
			//	{
			//		mCommand.Parameters.AddWithValue("@ActividadEconomica", ruc.ActividadEconomica.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@ActividadEconomica",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@TokenFactElectonica", ruc.TokenFactElectonica);
			//	if(ruc.LocalPorDefecto != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@LocalPorDefecto", ruc.LocalPorDefecto);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@LocalPorDefecto",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEmpresa", ruc.IdEmpresa);
			//	mCommand.Parameters.AddWithValue("@LimiteFacturacion", ruc.LimiteFacturacion);
			//	if(ruc.TotalFacturado != 0)
			//	{
			//		mCommand.Parameters.AddWithValue("@TotalFacturado", ruc.TotalFacturado);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@TotalFacturado",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IpIngreso", ruc.IpIngreso);
			//	mCommand.Parameters.AddWithValue("@UsuarioIngreso", ruc.UsuarioIngreso);
			//	mCommand.Parameters.AddWithValue("@FechaIngreso", ruc.FechaIngreso);
			//	if(!String.IsNullOrEmpty(ruc.IpModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion", ruc.IpModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
			//	}

			//	if(!String.IsNullOrEmpty(ruc.UsuarioModificacion))
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion", ruc.UsuarioModificacion.ToUpper());
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
			//	}

			//	if(ruc.FechaModificacion != null && ruc.FechaModificacion != DateTime.MinValue)
			//	{
			//		mCommand.Parameters.AddWithValue("@FechaModificacion", ruc.FechaModificacion);
			//	}
			//	else
			//	{
			//		mCommand.Parameters.AddWithValue("FechaModificacion",DBNull.Value);
			//	}

			//	mCommand.Parameters.AddWithValue("@IdEstado", ruc.IdEstado);
                
   
   //             #endregion
                
   //             // Update ruc
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();


   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }

   //      /// <summary>
   //     /// Delete a entity
   //     /// </summary>
   //     public static void Delete(RucEntity ruc, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //         SqlCommand mCommand = new SqlCommand();
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;;
   //             mCommand.CommandText = "Ruc_Delete";
			//	mCommand.Parameters.AddWithValue("@Ruc", ruc.Ruc.ToUpper());
			//	mCommand.Parameters.AddWithValue("@Fecha_Modificacion", ruc.FechaModificacion);
			//	mCommand.Parameters.AddWithValue("@Usuario_Modificacion", ruc.UsuarioModificacion.ToUpper());
			//	mCommand.Parameters.AddWithValue("@Ip_Modificacion", ruc.IpModificacion.ToUpper());

                
   //             // Update ruc
   //             if (connection.State != ConnectionState.Open) connection.Open();
   //             mCommand.ExecuteNonQuery();


   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             mCommand.Dispose();
   //         }
   //     }
        
        
         
         
   //      /// <summary>
   //     /// Load a entity by your Primary Key
   //     /// </summary>
   //     public static RucEntity LoadByPK(string Ruc, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //     	return LoadByPK(Ruc,connection,transaction,1);
   //     }
        
   //     /// <summary>
   //     /// Load a entity by your Primary Key
   //     /// </summary>
   //     public static RucEntity LoadByPK(string Ruc, SqlConnection connection, SqlTransaction  transaction, int deepLoadLevel)
   //     {
   //         RucEntity ruc = new RucEntity();
            
			//ruc.Ruc = Ruc.ToUpper();
            
            
   //         SqlCommand mCommand = new SqlCommand();
   //         SqlDataReader reader = null;
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;
   //             mCommand.CommandText = "Ruc_LoadByPK";

   //             #region << Add the params >>

			//	mCommand.Parameters.AddWithValue("@Ruc", ruc.Ruc.ToUpper());
                
 
   //             #endregion 
                
   //             if (connection.State != ConnectionState.Open) connection.Open();

   //             reader = mCommand.ExecuteReader();

   //             if(!reader.HasRows) return null;
                
	  //          while (reader.Read())
	  //          {
			//		#region << Deep Load >>
   //                 if (deepLoadLevel == 1)
		 //    		{
			//			ruc.IdEmpresaAsEmpresa = EmpresaDataAccess.ConvertToEmpresaEntity(reader, "IdEmpresa");

   //                 }
	  //              #endregion
	                
	  //              #region << Load the BusinessEntity Object >>
					
			//		ruc.Ruc = Convert.ToString(reader["Ruc"]);
			//		if (reader["RazonSocial"] != DBNull.Value)
			//		{
			//			ruc.RazonSocial = Convert.ToString(reader["RazonSocial"]).ToUpper();
			//		}
			//		if (reader["ActividadEconomica"] != DBNull.Value)
			//		{
			//			ruc.ActividadEconomica = Convert.ToString(reader["ActividadEconomica"]).ToUpper();
			//		}
			//		ruc.TokenFactElectonica = Convert.ToString(reader["TokenFactElectonica"]);
			//		if (reader["LocalPorDefecto"] != DBNull.Value)
			//		{
			//			ruc.LocalPorDefecto = Convert.ToInt32(reader["LocalPorDefecto"]);
			//		}
			//		ruc.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
			//		ruc.LimiteFacturacion = (decimal) reader["LimiteFacturacion"];
			//		if (reader["TotalFacturado"] != DBNull.Value)
			//		{
			//			ruc.TotalFacturado = (decimal) reader["TotalFacturado"];
			//		}
			//		ruc.IpIngreso = Convert.ToString(reader["IpIngreso"]);
			//		ruc.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
			//		ruc.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
			//		if (reader["IpModificacion"] != DBNull.Value)
			//		{
			//			ruc.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
			//		}
			//		if (reader["UsuarioModificacion"] != DBNull.Value)
			//		{
			//			ruc.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
			//		}
			//		if (reader["FechaModificacion"] != DBNull.Value)
			//		{
			//			ruc.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
			//		}
			//		ruc.IdEstado = Convert.ToInt16(reader["IdEstado"]);
			//		ruc.Rise = Convert.ToBoolean(reader["Rise"]);

			//		#endregion
			//	}

			//	ruc.SetLoadedState();
   //             return ruc;
   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             if (reader != null) reader.Close();
   //             mCommand.Dispose();
   //         }
   //     }
        
   //     #endregion
        
        
        
        
   //     #region << Mappers >>
        
   //     public static RucEntity ConvertToRucEntity (SqlDataReader reader,string fkColumnName)
   //     {
   //         RucEntity ruc = new RucEntity();
            
   //         try
   //         {
   //             bool hasData=false;
   //             string columName;
                
   //             #region << Load the BusinessEntity Object >>
                
			//	try
			//	{
			//		columName = String.Format("Ruc_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.Ruc = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("RazonSocial_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.RazonSocial = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("ActividadEconomica_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.ActividadEconomica = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("TokenFactElectonica_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.TokenFactElectonica = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("LocalPorDefecto_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.LocalPorDefecto = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdEmpresa_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.IdEmpresa = Convert.ToInt32(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("LimiteFacturacion_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.LimiteFacturacion = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("TotalFacturado_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.TotalFacturado = (decimal) reader[columName];
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IpIngreso_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.IpIngreso = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("UsuarioIngreso_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.UsuarioIngreso = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaIngreso_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.FechaIngreso = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IpModificacion_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.IpModificacion = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("UsuarioModificacion_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.UsuarioModificacion = Convert.ToString(reader[columName]).ToUpper();
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("FechaModificacion_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.FechaModificacion = Convert.ToDateTime(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{}
			//	try
			//	{
			//		columName = String.Format("IdEstado_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.IdEstado = Convert.ToInt16(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch{ }
			//	try
			//	{
			//		columName = String.Format("Rise_RucFrom{0}", fkColumnName);
			//		if (reader[columName] != DBNull.Value)
			//		{
			//			ruc.Rise = Convert.ToBoolean(reader[columName]);
			//			hasData = true;
			//		}
			//	}
			//	catch { }



			//	#endregion

			//	ruc.SetLoadedState();
   //             if(hasData)
   //             {
   //             	return ruc;
   //             }
   //             else return null;
   //         }
   //         catch (Exception exc)
   //         {
   //             return null;
   //         }
   //         finally
   //         {
                
   //         }
   //     }
        
   //     #endregion
        
   
    }
}


