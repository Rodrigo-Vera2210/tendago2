    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using ER.BE; 


namespace ER.DA
{
    public partial class UsuarioDataAccessCollection
    {


		#region << Custom Stored Procedures >>
		public static UsuarioEntityCollection SearchAll(int idEmpresa, string searchTerm, SqlConnection conexion, SqlTransaction transaction)
		{
			SqlCommand mCommand = new SqlCommand();
			SqlDataReader reader = null;
			try
			{
				mCommand.Connection = conexion;
				mCommand.CommandType = CommandType.StoredProcedure;
				mCommand.Transaction = transaction;
				mCommand.CommandText = "Custom_Usuario_SearchAll";
				 
				if (!String.IsNullOrEmpty(searchTerm))
				{
					mCommand.Parameters.AddWithValue("@SearchTerm", searchTerm);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@SearchTerm", DBNull.Value);
				}

				if (idEmpresa != int.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa", idEmpresa);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa", DBNull.Value);
				} 
				 
				if (conexion.State != ConnectionState.Open) conexion.Open();
				reader = mCommand.ExecuteReader();

				UsuarioEntityCollection usuarioEntityCollection = new UsuarioEntityCollection();
				UsuarioEntity usuarioEntity;


				while (reader.Read())
				{
					usuarioEntity = new UsuarioEntity();
					usuarioEntity.InicioSesion = Convert.ToString(reader["InicioSesion"]);
					usuarioEntity.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
					usuarioEntity.IdPerifl = Convert.ToInt16(reader["IdPerifl"]);
					usuarioEntity.Nombres = Convert.ToString(reader["Nombres"]);
					usuarioEntity.Identificacion = Convert.ToString(reader["Identificacion"]);
					
					if (reader["Sexo"] != DBNull.Value)
					{
						usuarioEntity.Sexo = Convert.ToBoolean(reader["Sexo"]);
					}

					if (reader["Direccion"] != DBNull.Value)
					{
						usuarioEntity.Direccion = Convert.ToString(reader["Direccion"]).ToUpper();
					}

					usuarioEntity.Correo = Convert.ToString(reader["Correo"]);
					usuarioEntity.Contrase単a = "*******************";

					if (reader["Telefono"] != DBNull.Value)
					{
						usuarioEntity.Telefono = Convert.ToString(reader["Telefono"]).ToUpper();
					}
					if (reader["Foto"] != DBNull.Value)
					{
						usuarioEntity.Foto = (byte[])reader["Foto"];
					}
					usuarioEntity.IpIngreso = Convert.ToString(reader["IpIngreso"]);
					usuarioEntity.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
					usuarioEntity.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
					if (reader["IpModificacion"] != DBNull.Value)
					{
						usuarioEntity.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
					}
					if (reader["UsuarioModificacion"] != DBNull.Value)
					{
						usuarioEntity.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
					}
					if (reader["FechaModificacion"] != DBNull.Value)
					{
						usuarioEntity.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
					}
					usuarioEntity.IdEstado = Convert.ToInt16(reader["IdEstado"]);


					usuarioEntity.SetLoadedState();
					usuarioEntityCollection.Add(usuarioEntity);

				}

				return usuarioEntityCollection;
			}
			catch (Exception exc)
			{
				throw exc;
			}
			finally
			{
				if (reader != null) reader.Close();
				mCommand.Dispose();
			}

		}

		#endregion

		/*public static UsuarioEntityCollection LoadAll(SqlConnection conexion, SqlTransaction  transaction)
        {
            SqlCommand mCommand = new SqlCommand();
            SqlDataReader reader = null;
            try
            {
                mCommand.Connection = conexion;
                mCommand.CommandType = CommandType.StoredProcedure;
                mCommand.Transaction = transaction;
                
                mCommand.CommandText = "Usuario_LoadAll";


                if (conexion.State != ConnectionState.Open) conexion.Open();
                reader = mCommand.ExecuteReader();

                UsuarioEntityCollection usuarioEntityCollection = new UsuarioEntityCollection();
                UsuarioEntity usuarioEntity;
                
                while (reader.Read())
                {
                    usuarioEntity = new UsuarioEntity();
                    
					usuarioEntity.InicioSesion = Convert.ToString(reader["InicioSesion"]);
					usuarioEntity.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
					usuarioEntity.IdPerifl = Convert.ToInt16(reader["IdPerifl"]);
					usuarioEntity.Nombres = Convert.ToString(reader["Nombres"]);
					usuarioEntity.Identificacion = Convert.ToString(reader["Identificacion"]);
					if (reader["Sexo"] != DBNull.Value)
					{
						usuarioEntity.Sexo = Convert.ToBoolean(reader["Sexo"]);
					}
					if (reader["Direccion"] != DBNull.Value)
					{
						usuarioEntity.Direccion = Convert.ToString(reader["Direccion"]).ToUpper();
					}
					usuarioEntity.Correo = Convert.ToString(reader["Correo"]);
					if (reader["Contrase単a"] != DBNull.Value)
					{
						usuarioEntity.Contrase単a = Convert.ToString(reader["Contrase単a"]).ToUpper();
					}
					if (reader["Telefono"] != DBNull.Value)
					{
						usuarioEntity.Telefono = Convert.ToString(reader["Telefono"]).ToUpper();
					}
					if (reader["Foto"] != DBNull.Value)
					{
						usuarioEntity.Foto = (byte[]) reader["Foto"];
					}
					usuarioEntity.IpIngreso = Convert.ToString(reader["IpIngreso"]);
					usuarioEntity.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
					usuarioEntity.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
					if (reader["IpModificacion"] != DBNull.Value)
					{
						usuarioEntity.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
					}
					if (reader["UsuarioModificacion"] != DBNull.Value)
					{
						usuarioEntity.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
					}
					if (reader["FechaModificacion"] != DBNull.Value)
					{
						usuarioEntity.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
					}
					usuarioEntity.IdEstado = Convert.ToInt16(reader["IdEstado"]);

                    
                    usuarioEntity.SetLoadedState();
                    usuarioEntityCollection.Add(usuarioEntity);
                    
                }

                return usuarioEntityCollection;
            }
            catch (Exception exc)
            {
                throw exc;
            }
            finally
            {
                if (reader != null) reader.Close();
                mCommand.Dispose();
            }

        }
        */

		public static UsuarioEntityCollection FindByAll(UsuarioFindParameterEntity findParameter , SqlConnection conexion, SqlTransaction  transaction)
        {
        	return FindByAll(findParameter,conexion,transaction,1);
        }
        
        public static UsuarioEntityCollection FindByAll(UsuarioFindParameterEntity findParameter , SqlConnection conexion, SqlTransaction  transaction, int deepLoadLevel)
        {
            SqlCommand mCommand = new SqlCommand();
            SqlDataReader reader = null;
            try
            {
                mCommand.Connection = conexion;
                mCommand.CommandType = CommandType.StoredProcedure;
                mCommand.Transaction = transaction;
                if (deepLoadLevel >= 1)
		     	{
                	mCommand.CommandText = "Usuario_DeepFindByAll";
                }
                else mCommand.CommandText = "Usuario_FindByAll";

                
				if(!String.IsNullOrEmpty(findParameter.InicioSesion))
				{
					mCommand.Parameters.AddWithValue("@InicioSesion", findParameter.InicioSesion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@InicioSesion",DBNull.Value);
				}

				if(findParameter.IdEmpresa != int.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa", findParameter.IdEmpresa);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa",DBNull.Value);
				}

				if(findParameter.IdPerifl != short.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdPerifl", findParameter.IdPerifl);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdPerifl",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Nombres))
				{
					mCommand.Parameters.AddWithValue("@Nombres", findParameter.Nombres );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Nombres",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Identificacion))
				{
					mCommand.Parameters.AddWithValue("@Identificacion", findParameter.Identificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Identificacion",DBNull.Value);
				}

				if(findParameter.Sexo != -1)
				{
					if (findParameter.Sexo == 1)
					{
						mCommand.Parameters.AddWithValue("@Sexo", true);
					}
					else
					{
						mCommand.Parameters.AddWithValue("@Sexo", false);
					}
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Sexo",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Direccion))
				{
					mCommand.Parameters.AddWithValue("@Direccion", findParameter.Direccion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Direccion",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Correo))
				{
					mCommand.Parameters.AddWithValue("@Correo", findParameter.Correo );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Correo",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Contrase単a))
				{
					mCommand.Parameters.AddWithValue("@Contrase単a", findParameter.Contrase単a );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Contrase単a",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Telefono))
				{
					mCommand.Parameters.AddWithValue("@Telefono", findParameter.Telefono );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Telefono",DBNull.Value);
				}

				mCommand.Parameters.AddWithValue("@Foto", findParameter.Foto);
				if(!String.IsNullOrEmpty(findParameter.IpIngreso))
				{
					mCommand.Parameters.AddWithValue("@IpIngreso", findParameter.IpIngreso );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IpIngreso",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.UsuarioIngreso))
				{
					mCommand.Parameters.AddWithValue("@UsuarioIngreso", findParameter.UsuarioIngreso );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@UsuarioIngreso",DBNull.Value);
				}

				if(findParameter.FechaIngreso != null && findParameter.FechaIngreso != DateTime.MinValue)
				{
					mCommand.Parameters.AddWithValue("@FechaIngreso", findParameter.FechaIngreso);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@FechaIngreso",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.IpModificacion))
				{
					mCommand.Parameters.AddWithValue("@IpModificacion", findParameter.IpModificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.UsuarioModificacion))
				{
					mCommand.Parameters.AddWithValue("@UsuarioModificacion", findParameter.UsuarioModificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
				}

				if(findParameter.FechaModificacion != null && findParameter.FechaModificacion != DateTime.MinValue)
				{
					mCommand.Parameters.AddWithValue("@FechaModificacion", findParameter.FechaModificacion);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@FechaModificacion",DBNull.Value);
				}

				if(findParameter.IdEstado != short.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdEstado", findParameter.IdEstado);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdEstado",DBNull.Value);
				}

    
               	
                if (conexion.State != ConnectionState.Open) conexion.Open();
                reader = mCommand.ExecuteReader();

                UsuarioEntityCollection usuarioEntityCollection = new UsuarioEntityCollection();
                UsuarioEntity usuarioEntity;
                

                while (reader.Read())
                {
                    usuarioEntity = new UsuarioEntity();
					#region << Deep Load >>
                    if (deepLoadLevel == 1)
		     		{
						usuarioEntity.IdEmpresaAsEmpresa = EmpresaDataAccess.ConvertToEmpresaEntity(reader, "IdEmpresa");
						usuarioEntity.IdPeriflAsPerfil = PerfilDataAccess.ConvertToPerfilEntity(reader, "IdPerifl");

                    }
	                #endregion                    
					usuarioEntity.InicioSesion = Convert.ToString(reader["InicioSesion"]);
					usuarioEntity.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
					usuarioEntity.IdPerifl = Convert.ToInt16(reader["IdPerifl"]);
					usuarioEntity.Nombres = Convert.ToString(reader["Nombres"]);
					usuarioEntity.Identificacion = Convert.ToString(reader["Identificacion"]);
					if (reader["Sexo"] != DBNull.Value)
					{
						usuarioEntity.Sexo = Convert.ToBoolean(reader["Sexo"]);
					}
					if (reader["Direccion"] != DBNull.Value)
					{
						usuarioEntity.Direccion = Convert.ToString(reader["Direccion"]).ToUpper();
					}
					usuarioEntity.Correo = Convert.ToString(reader["Correo"]);
					if (reader["Contrase単a"] != DBNull.Value)
					{
						usuarioEntity.Contrase単a = Convert.ToString(reader["Contrase単a"]).ToUpper();
					}
					if (reader["Telefono"] != DBNull.Value)
					{
						usuarioEntity.Telefono = Convert.ToString(reader["Telefono"]).ToUpper();
					}
					if (reader["Foto"] != DBNull.Value)
					{
						usuarioEntity.Foto = (byte[]) reader["Foto"];
					}
					usuarioEntity.IpIngreso = Convert.ToString(reader["IpIngreso"]);
					usuarioEntity.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
					usuarioEntity.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
					if (reader["IpModificacion"] != DBNull.Value)
					{
						usuarioEntity.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
					}
					if (reader["UsuarioModificacion"] != DBNull.Value)
					{
						usuarioEntity.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
					}
					if (reader["FechaModificacion"] != DBNull.Value)
					{
						usuarioEntity.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
					}
					usuarioEntity.IdEstado = Convert.ToInt16(reader["IdEstado"]);

                    
                    usuarioEntity.SetLoadedState();
                    usuarioEntityCollection.Add(usuarioEntity);
                    
                }

                return usuarioEntityCollection;
            }
            catch (Exception exc)
            {
                throw exc;
            }
            finally
            {
                if (reader != null) reader.Close();
                mCommand.Dispose();
            }

        }
        
        public static UsuarioEntityCollection FindByAllPaged(UsuarioFindParameterEntity findParameter , int pageNumber, int pageSize ,string orderBy, SqlConnection conexion, SqlTransaction  transaction )
        {
        	return FindByAllPaged(findParameter,pageNumber, pageSize,orderBy, conexion,transaction,1);
        }
        
        public static UsuarioEntityCollection FindByAllPaged(UsuarioFindParameterEntity findParameter , int pageNumber, int pageSize ,string orderBy, SqlConnection conexion ,SqlTransaction  transaction, int deepLoadLevel)
        {
            SqlCommand mCommand = new SqlCommand();
            SqlDataReader reader = null;
            try
            {
                mCommand.Connection = conexion;
                mCommand.CommandType = CommandType.StoredProcedure;
                mCommand.Transaction = transaction;
                if (deepLoadLevel >= 1)
		     	{
                	mCommand.CommandText = "Usuario_DeepFindByAllPaged";
                	
                }
                else mCommand.CommandText = "Usuario_FindByAllPaged";

                
				if(!String.IsNullOrEmpty(findParameter.InicioSesion))
				{
					mCommand.Parameters.AddWithValue("@InicioSesion", findParameter.InicioSesion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@InicioSesion",DBNull.Value);
				}

				if(findParameter.IdEmpresa != int.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa", findParameter.IdEmpresa);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdEmpresa",DBNull.Value);
				}

				if(findParameter.IdPerifl != short.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdPerifl", findParameter.IdPerifl);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdPerifl",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Nombres))
				{
					mCommand.Parameters.AddWithValue("@Nombres", findParameter.Nombres );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Nombres",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Identificacion))
				{
					mCommand.Parameters.AddWithValue("@Identificacion", findParameter.Identificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Identificacion",DBNull.Value);
				}

				if(findParameter.Sexo != -1)
				{
					if (findParameter.Sexo == 1)
					{
						mCommand.Parameters.AddWithValue("@Sexo", true);
					}
					else
					{
						mCommand.Parameters.AddWithValue("@Sexo", false);
					}
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Sexo",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Direccion))
				{
					mCommand.Parameters.AddWithValue("@Direccion", findParameter.Direccion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Direccion",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Correo))
				{
					mCommand.Parameters.AddWithValue("@Correo", findParameter.Correo );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Correo",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Contrase単a))
				{
					mCommand.Parameters.AddWithValue("@Contrase単a", findParameter.Contrase単a );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Contrase単a",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.Telefono))
				{
					mCommand.Parameters.AddWithValue("@Telefono", findParameter.Telefono );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@Telefono",DBNull.Value);
				}

				mCommand.Parameters.AddWithValue("@Foto", findParameter.Foto);
				if(!String.IsNullOrEmpty(findParameter.IpIngreso))
				{
					mCommand.Parameters.AddWithValue("@IpIngreso", findParameter.IpIngreso );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IpIngreso",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.UsuarioIngreso))
				{
					mCommand.Parameters.AddWithValue("@UsuarioIngreso", findParameter.UsuarioIngreso );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@UsuarioIngreso",DBNull.Value);
				}

				if(findParameter.FechaIngreso != null && findParameter.FechaIngreso != DateTime.MinValue)
				{
					mCommand.Parameters.AddWithValue("@FechaIngreso", findParameter.FechaIngreso);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@FechaIngreso",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.IpModificacion))
				{
					mCommand.Parameters.AddWithValue("@IpModificacion", findParameter.IpModificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IpModificacion",DBNull.Value);
				}

				if(!String.IsNullOrEmpty(findParameter.UsuarioModificacion))
				{
					mCommand.Parameters.AddWithValue("@UsuarioModificacion", findParameter.UsuarioModificacion );
				}
				else
				{
					mCommand.Parameters.AddWithValue("@UsuarioModificacion",DBNull.Value);
				}

				if(findParameter.FechaModificacion != null && findParameter.FechaModificacion != DateTime.MinValue)
				{
					mCommand.Parameters.AddWithValue("@FechaModificacion", findParameter.FechaModificacion);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@FechaModificacion",DBNull.Value);
				}

				if(findParameter.IdEstado != short.MinValue)
				{
					mCommand.Parameters.AddWithValue("@IdEstado", findParameter.IdEstado);
				}
				else
				{
					mCommand.Parameters.AddWithValue("@IdEstado",DBNull.Value);
				}


				mCommand.Parameters.AddWithValue("@PageNumber",pageNumber);
				mCommand.Parameters.AddWithValue("@PageSize",pageSize);
				if (deepLoadLevel > 1)
		     	{
					mCommand.Parameters.AddWithValue("@OrderBy",orderBy);
			    }
               	
                if (conexion.State != ConnectionState.Open) conexion.Open();
                reader = mCommand.ExecuteReader();

                UsuarioEntityCollection usuarioEntityCollection = new UsuarioEntityCollection();
                UsuarioEntity usuarioEntity;
                

                while (reader.Read())
                {
                    usuarioEntity = new UsuarioEntity();
					#region << Deep Load >>
                    if (deepLoadLevel > 1)
		     		{
						usuarioEntity.IdEmpresaAsEmpresa = EmpresaDataAccess.ConvertToEmpresaEntity(reader, "IdEmpresa");
						usuarioEntity.IdPeriflAsPerfil = PerfilDataAccess.ConvertToPerfilEntity(reader, "IdPerifl");

                    }
	                #endregion                    
					usuarioEntity.InicioSesion = Convert.ToString(reader["InicioSesion"]);
					usuarioEntity.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
					usuarioEntity.IdPerifl = Convert.ToInt16(reader["IdPerifl"]);
					usuarioEntity.Nombres = Convert.ToString(reader["Nombres"]);
					usuarioEntity.Identificacion = Convert.ToString(reader["Identificacion"]);
					if (reader["Sexo"] != DBNull.Value)
					{
						usuarioEntity.Sexo = Convert.ToBoolean(reader["Sexo"]);
					}
					if (reader["Direccion"] != DBNull.Value)
					{
						usuarioEntity.Direccion = Convert.ToString(reader["Direccion"]).ToUpper();
					}
					usuarioEntity.Correo = Convert.ToString(reader["Correo"]);
					if (reader["Contrase単a"] != DBNull.Value)
					{
						usuarioEntity.Contrase単a = Convert.ToString(reader["Contrase単a"]).ToUpper();
					}
					if (reader["Telefono"] != DBNull.Value)
					{
						usuarioEntity.Telefono = Convert.ToString(reader["Telefono"]).ToUpper();
					}
					if (reader["Foto"] != DBNull.Value)
					{
						usuarioEntity.Foto = (byte[]) reader["Foto"];
					}
					usuarioEntity.IpIngreso = Convert.ToString(reader["IpIngreso"]);
					usuarioEntity.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
					usuarioEntity.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
					if (reader["IpModificacion"] != DBNull.Value)
					{
						usuarioEntity.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
					}
					if (reader["UsuarioModificacion"] != DBNull.Value)
					{
						usuarioEntity.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
					}
					if (reader["FechaModificacion"] != DBNull.Value)
					{
						usuarioEntity.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
					}
					usuarioEntity.IdEstado = Convert.ToInt16(reader["IdEstado"]);

                    
                    usuarioEntity.SetLoadedState();
                    usuarioEntityCollection.Add(usuarioEntity);
                    
                }

                return usuarioEntityCollection;
            }
            catch (Exception exc)
            {
                throw exc;
            }
            finally
            {
                if (reader != null) reader.Close();
                mCommand.Dispose();
            }

        }
        
          
    }
}

