// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ER.DA.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace ER.DA.Repositories
{
    public partial interface ITendaGOContextProcedures
    {
        Task<List<Categoria_DeepFindByAllResult>> Categoria_DeepFindByAllAsync(int? Id, int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Categoria_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Categoria_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Categoria_FindByAllResult>> Categoria_FindByAllAsync(int? Id, int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Categoria_FindByAllPagedResult>> Categoria_FindByAllPagedAsync(int? Id, int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Categoria_InsertAsync(int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Categoria_LoadAllResult>> Categoria_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Categoria_LoadByPKResult>> Categoria_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Categoria_UpdateAsync(int? Id, int? IdEmpresa, int? IdLinea, string Categoria, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CierreCaja_DeepFindByAllResult>> CierreCaja_DeepFindByAllAsync(string Id, DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CierreCaja_DeepFindByAllPagedAsync(string Id, DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CierreCaja_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CierreCaja_FindByAllResult>> CierreCaja_FindByAllAsync(string Id, DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CierreCaja_FindByAllPagedResult>> CierreCaja_FindByAllPagedAsync(string Id, DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CierreCaja_InsertAsync(DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CierreCaja_LoadAllResult>> CierreCaja_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CierreCaja_LoadByPKResult>> CierreCaja_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CierreCaja_UpdateAsync(string Id, DateTime? FechaApertura, DateTime? FechaCierre, int? IdEmpresa, int? IdLocal, string IdCajero, string Observaciones, decimal? SaldoInicial, decimal? TotalIngresos, decimal? TotalEgresos, decimal? SaldoFinal, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ciudad_DeepFindByAllResult>> Ciudad_DeepFindByAllAsync(int? Id, int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ciudad_DeepFindByAllPagedAsync(int? Id, int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ciudad_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ciudad_FindByAllResult>> Ciudad_FindByAllAsync(int? Id, int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ciudad_FindByAllPagedResult>> Ciudad_FindByAllPagedAsync(int? Id, int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ciudad_InsertAsync(int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ciudad_LoadAllResult>> Ciudad_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ciudad_LoadByPKResult>> Ciudad_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ciudad_UpdateAsync(int? Id, int? IdProvincia, string Ciudad, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CobroDebito_DeepFindByAllResult>> CobroDebito_DeepFindByAllAsync(string Id, int? IdEmpresa, int? IdCliente, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, string IdCierreCaja, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CobroDebito_DeepFindByAllPagedAsync(string Id, int? IdEmpresa, int? IdCliente, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string IdCierreCaja, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CobroDebito_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CobroDebito_FindByAllResult>> CobroDebito_FindByAllAsync(string Id, int? IdEmpresa, int? IdCliente, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string IdCierreCaja, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CobroDebito_FindByAllPagedResult>> CobroDebito_FindByAllPagedAsync(string Id, int? IdEmpresa, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string IdCierreCaja, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CobroDebito_InsertAsync(int? IdEmpresa, int? IdCliente, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string IdCierreCaja, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CobroDebito_LoadAllResult>> CobroDebito_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CobroDebito_LoadByPKResult>> CobroDebito_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CobroDebito_ReverseAsync(string IdCobroDebito, int? IdEmpresa, DateTime? Fecha, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CobroDebito_UpdateAsync(string Id, int? IdEmpresa, int? IdCliente, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string IdCierreCaja, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorCobrar_DeepFindByAllResult>> CuentaPorCobrar_DeepFindByAllAsync(int? Id, string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorCobrar_DeepFindByAllPagedAsync(int? Id, string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorCobrar_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorCobrar_FindByAllResult>> CuentaPorCobrar_FindByAllAsync(int? Id, string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorCobrar_FindByAllPagedResult>> CuentaPorCobrar_FindByAllPagedAsync(int? Id, string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorCobrar_InsertAsync(string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorCobrar_LoadAllResult>> CuentaPorCobrar_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorCobrar_LoadByPKResult>> CuentaPorCobrar_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorCobrar_UpdateAsync(int? Id, string IdSalida, int? Numero, DateTime? FechaVencimiento, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorPagar_DeepFindByAllResult>> CuentaPorPagar_DeepFindByAllAsync(int? Id, string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorPagar_DeepFindByAllPagedAsync(int? Id, string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorPagar_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorPagar_FindByAllResult>> CuentaPorPagar_FindByAllAsync(int? Id, string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorPagar_FindByAllPagedResult>> CuentaPorPagar_FindByAllPagedAsync(int? Id, string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorPagar_InsertAsync(string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorPagar_LoadAllResult>> CuentaPorPagar_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CuentaPorPagar_LoadByPKResult>> CuentaPorPagar_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CuentaPorPagar_UpdateAsync(int? Id, string IdEntrada, int? Numero, DateTime? Periodo, DateTime? Fecha, decimal? Valor, decimal? Saldo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_ConsultaResult>> Custom_CierreCaja_ConsultaAsync(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_Consulta2Result>> Custom_CierreCaja_Consulta2Async(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_Consulta3Result>> Custom_CierreCaja_Consulta3Async(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_Consulta4Result>> Custom_CierreCaja_Consulta4Async(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_Consulta5Result>> Custom_CierreCaja_Consulta5Async(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_ConsultaoldResult>> Custom_CierreCaja_ConsultaoldAsync(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, string idVendedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CierreCaja_DetalleResult>> Custom_CierreCaja_DetalleAsync(int? idEmpresa, int? idLocal, DateTime? fechaDesde, DateTime? fechaHasta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_ClientesDeep_ConsultaResult>> Custom_ClientesDeep_ConsultaAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Cobro_SearchCobroResult>> Custom_Cobro_SearchCobroAsync(string Term, int? IdEmpresa, int? IdLocal, int? IdCliente, DateTime? FechaInicio, DateTime? FechaFin, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CodigoBarraResult>> Custom_CodigoBarraAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_CuentaPorCobrar_ReporteSalidaResult>> Custom_CuentaPorCobrar_ReporteSalidaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Empaquetado_ReporteEntradaResult>> Custom_Empaquetado_ReporteEntradaAsync(string IdEntrada, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Empaquetado_ReporteSalidaResult>> Custom_Empaquetado_ReporteSalidaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Entrada_ReporteEntradaResult>> Custom_Entrada_ReporteEntradaAsync(string IdEntrada, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Entrada_SearchEntradaResult>> Custom_Entrada_SearchEntradaAsync(int? IdEmpresa, int? IdLocal, string TipoTransaccion, string SearchTerm, string IdVendedor, int? IdProveedor, DateTime? FechaInicio, DateTime? FechaFin, string Estado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Entrada_ValidarCompraResult>> Custom_Entrada_ValidarCompraAsync(string CodigoProducto, string CodigoUnidad, string Local, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_CobrosResult>> Custom_Estadisticas_CobrosAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_CobrosByUserResult>> Custom_Estadisticas_CobrosByUserAsync(DateTime? FechaIni, DateTime? FechaFin, int? IdEmpresa, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_ResumidasResult>> Custom_Estadisticas_ResumidasAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_ResumidasByUserResult>> Custom_Estadisticas_ResumidasByUserAsync(DateTime? FechaIni, DateTime? FechaFin, int? IdEmpresa, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_Ventas_MensualResult>> Custom_Estadisticas_Ventas_MensualAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_VentasMensualByUserResult>> Custom_Estadisticas_VentasMensualByUserAsync(string InicioSesion, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estadisticas_VentasXMesResult>> Custom_Estadisticas_VentasXMesAsync(DateTime? FechaIni, DateTime? FechaFin, int? IdEmpresa, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estado_CuentaResult>> Custom_Estado_CuentaAsync(int? IdEmpresa, int? IdCliente, int? Status, bool? Full, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estado_ReporteEntradaResult>> Custom_Estado_ReporteEntradaAsync(string IdEntrada, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Estado_ReporteSalidaResult>> Custom_Estado_ReporteSalidaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Custom_ExportacionAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_FacturasEmitidasResult>> Custom_FacturasEmitidasAsync(string Ruc, DateTime? FechaInicio, DateTime? FechaCorte, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_FormaPago_BySalidaResult>> Custom_FormaPago_BySalidaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Inventario_ReporteAjusteResult>> Custom_Inventario_ReporteAjusteAsync(int? IdEmpresa, DateTime? FechaDesde, DateTime? FechaHasta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Inventario_ReporteAjuste2Result>> Custom_Inventario_ReporteAjuste2Async(int? IdEmpresa, DateTime? FechaDesde, DateTime? FechaHasta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Inventario_ValorizadoResult>> Custom_Inventario_ValorizadoAsync(int? IdEmpresa, int? IdMarca, int? IdDivision, int? IdLinea, int? IdCategoria, int? UnidadMedida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Inventario_Valorizado2Result>> Custom_Inventario_Valorizado2Async(int? IdEmpresa, int? IdMarca, int? IdDivision, int? IdLinea, int? IdCategoria, int? UnidadMedida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Load_DivisionResult>> Custom_Load_DivisionAsync(int? IdEmpresa, string Term, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Load_LineaByDivisionResult>> Custom_Load_LineaByDivisionAsync(int? IdEmpresa, int? IdDivision, string Term, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Load_MarcaResult>> Custom_Load_MarcaAsync(int? IdEmpresa, string Term, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_MovimientoInventario_ReportResult>> Custom_MovimientoInventario_ReportAsync(int? IdEmpresa, DateTime? FechaInicio, DateTime? FechaFin, int? IdProducto, string TipoTransaccion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_NotaCreditoValor_ByClienteResult>> Custom_NotaCreditoValor_ByClienteAsync(int? IdCliente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Obtener_SecuencialResult>> Custom_Obtener_SecuencialAsync(string RUC, string IdTipoDocumento, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Pantalla_ObtenerPantallasPerfilResult>> Custom_Pantalla_ObtenerPantallasPerfilAsync(string usuario, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_PlantillaSalidaResult>> Custom_PlantillaSalidaAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Productos_SearchProductsByLocalResult>> Custom_Productos_SearchProductsByLocalAsync(short? IdEmpresa, int? IdLocal, string SearchTerm, string TipoProducto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Productos_SearchProductsByLocalLiteResult>> Custom_Productos_SearchProductsByLocalLiteAsync(short? IdEmpresa, int? IdLocal, string SearchTerm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Productos_SearchProductsByLocalLitePruebaResult>> Custom_Productos_SearchProductsByLocalLitePruebaAsync(short? IdEmpresa, int? IdLocal, string SearchTerm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Productos_SearchProductsByLocalLitePrueba2Result>> Custom_Productos_SearchProductsByLocalLitePrueba2Async(short? IdEmpresa, int? IdLocal, string SearchTerm, int? pageNumber, int? pageSize, OutputParameter<int?> totalRecords, OutputParameter<int?> totalPages, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Productos_SearchProductsByLocalPagedResult>> Custom_Productos_SearchProductsByLocalPagedAsync(short? IdEmpresa, int? IdLocal, string SearchTerm, int? PageNumber, int? PageSize, string TipoProducto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_ProductosDeep_ConsultaResult>> Custom_ProductosDeep_ConsultaAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Ruc_Factura_ComprasResult>> Custom_Ruc_Factura_ComprasAsync(DateTime? FechaInicio, DateTime? FechaCorte, int? IdEmpresa, string Ruc, string IdProveedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Ruc_Factura_VentasResult>> Custom_Ruc_Factura_VentasAsync(DateTime? FechaInicio, DateTime? FechaCorte, int? IdEmpresa, string Ruc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Ruc_VentasResult>> Custom_Ruc_VentasAsync(DateTime? FechaInicio, DateTime? FechaCorte, int? IdEmpresa, string Ruc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_ChangeResult>> Custom_Salida_ChangeAsync(string IdSalidaOld, int? IdEmpresa, int? IdLocal, string TipoTransaccion, string Usuario, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_ReporteSalidaResult>> Custom_Salida_ReporteSalidaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_ReporteSalidaBodegaResult>> Custom_Salida_ReporteSalidaBodegaAsync(string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_ReporteSalidasResult>> Custom_Salida_ReporteSalidasAsync(int? IdEmpresa, DateTime? Desde, DateTime? Hasta, int? IdLocal, string IdVendedor, string TipoTransaccion, int? IdProducto, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdCliente, string Ruc, string EstadoActual, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_SearchSalidaResult>> Custom_Salida_SearchSalidaAsync(int? IdEmpresa, int? IdLocal, string TipoTransaccion, string SearchTerm, string IdVendedor, int? IdCliente, DateTime? FechaInicio, DateTime? FechaFin, string Estado, string TransaccionPadre, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Salida_SearchSalida2Result>> Custom_Salida_SearchSalida2Async(int? IdEmpresa, int? IdLocal, string TipoTransaccion, string SearchTerm, string IdVendedor, int? IdCliente, DateTime? FechaInicio, DateTime? FechaFin, string Estado, string TransaccionPadre, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_CostoPromedioPonderadoResult>> Custom_Stock_CostoPromedioPonderadoAsync(string Tipo, int? IdEmpresa, int? IdProducto, int? IdLocal, string IdSalidaEntrada, string IdDetalle, decimal? Cantidad, decimal? ValorUnitario, int? IdTipoUnidad, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_CostoPromedioPonderadoBUResult>> Custom_Stock_CostoPromedioPonderadoBUAsync(string Tipo, int? IdEmpresa, int? IdProducto, int? IdLocal, string IdSalidaEntrada, string IdDetalle, decimal? Cantidad, decimal? ValorUnitario, int? IdTipoUnidad, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_CostoPromedioPonderadoPruebaResult>> Custom_Stock_CostoPromedioPonderadoPruebaAsync(string Tipo, int? IdEmpresa, int? IdProducto, int? IdLocal, string IdSalidaEntrada, string IdDetalle, decimal? Cantidad, decimal? ValorUnitario, int? IdTipoUnidad, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_CostoPromedioPonderadoXXResult>> Custom_Stock_CostoPromedioPonderadoXXAsync(string Tipo, int? IdEmpresa, int? IdProducto, int? IdLocal, string IdSalidaEntrada, string IdDetalle, decimal? Cantidad, decimal? ValorUnitario, int? IdTipoUnidad, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_KardexReportResult>> Custom_Stock_KardexReportAsync(int? IdEmpresa, int? IdProducto, int? IdLocal, DateTime? FechaDesde, DateTime? FechaHasta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_RecrearCarritoResult>> Custom_Stock_RecrearCarritoAsync(int? IdEmpresa, string IdProducto, string IdSalida, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_RecrearCarrito2Result>> Custom_Stock_RecrearCarrito2Async(int? IdEmpresa, string IdProducto, string IdSalida, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioResult>> Custom_Stock_SaldoInventarioAsync(int? IdEmpresa, string IdProducto, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventario2Result>> Custom_Stock_SaldoInventario2Async(int? IdEmpresa, string IdProducto, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportResult>> Custom_Stock_SaldoInventarioReportAsync(int? IdEmpresa, int? IdProducto, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReport2Result>> Custom_Stock_SaldoInventarioReport2Async(int? IdEmpresa, int? IdProducto, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportBodGOResult>> Custom_Stock_SaldoInventarioReportBodGOAsync(int? IdEmpresa, string InicioSesion, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportCliGOResult>> Custom_Stock_SaldoInventarioReportCliGOAsync(int? IdProducto, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportGOResult>> Custom_Stock_SaldoInventarioReportGOAsync(int? IdEmpresa, string InicioSesion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportProdGOResult>> Custom_Stock_SaldoInventarioReportProdGOAsync(int? IdEmpresa, string InicioSesion, int? IdProducto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Stock_SaldoInventarioReportRespaldoRResult>> Custom_Stock_SaldoInventarioReportRespaldoRAsync(int? IdEmpresa, int? IdProducto, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_TopSellersResult>> Custom_TopSellersAsync(int? IdEmpresa, int? Meses, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Transfer_SearchResult>> Custom_Transfer_SearchAsync(string ID, string TipoTransaccion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Usuario_LoadByTokenResult>> Custom_Usuario_LoadByTokenAsync(string Token, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_Usuario_SearchAllResult>> Custom_Usuario_SearchAllAsync(int? IdEmpresa, string SearchTerm, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_VentasByProductoResult>> Custom_VentasByProductoAsync(int? IdEmpresa, int? IdLocal, DateTime? Desde, DateTime? Hasta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Custom_VentasGenerales_ReportResult>> Custom_VentasGenerales_ReportAsync(DateTime? FechaInicio, DateTime? FechaCorte, int? IdEmpresa, string Ruc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_DeepFindByAllResult>> DetalleCobro_DeepFindByAllAsync(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleCobro_DeepFindByAll2Async(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_DeepFindByAll3Result>> DetalleCobro_DeepFindByAll3Async(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleCobro_DeepFindByAllPagedAsync(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleCobro_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_FindByAllResult>> DetalleCobro_FindByAllAsync(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_FindByAllPagedResult>> DetalleCobro_FindByAllPagedAsync(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleCobro_InsertAsync(string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string descripcion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdLocal, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_LoadAllResult>> DetalleCobro_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleCobro_LoadByPKResult>> DetalleCobro_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleCobro_UpdateAsync(int? Id, string IdCobroDebito, int? IdCuentaPorCobrar, int? IdMedioPago, decimal? Valor, string descripcion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleDocumento_DeepFindByAllResult>> DetalleDocumento_DeepFindByAllAsync(long? Id, string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, decimal? SubtotalSinImpuesto, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleDocumento_DeepFindByAllPagedAsync(long? Id, string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, decimal? SubtotalSinImpuesto, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleDocumento_DeleteAsync(long? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleDocumento_FindByAllResult>> DetalleDocumento_FindByAllAsync(long? Id, string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, decimal? SubtotalSinImpuesto, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleDocumento_FindByAllPagedResult>> DetalleDocumento_FindByAllPagedAsync(long? Id, string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, decimal? SubtotalSinImpuesto, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleDocumento_InsertAsync(string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<long?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleDocumento_LoadAllResult>> DetalleDocumento_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleDocumento_LoadByPKResult>> DetalleDocumento_LoadByPKAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleDocumento_UpdateAsync(long? Id, string IdDocumento, int? IdProducto, decimal? Precio, decimal? Cantidad, decimal? Descuento, decimal? SubtotalSinImpuesto, string TipoIva, string TipoIce, decimal? Iva, decimal? Ice, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleEntrada_DeepFindByAllResult>> DetalleEntrada_DeepFindByAllAsync(string Id, int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleEntrada_DeepFindByAllPagedAsync(string Id, int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleEntrada_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleEntrada_FindByAllResult>> DetalleEntrada_FindByAllAsync(string Id, int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleEntrada_FindByAllPagedResult>> DetalleEntrada_FindByAllPagedAsync(string Id, int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleEntrada_InsertAsync(int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, short? Estado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleEntrada_LoadAllResult>> DetalleEntrada_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleEntrada_LoadByPKResult>> DetalleEntrada_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleEntrada_UpdateAsync(string Id, int? IdEmpresa, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdEntrada, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? ValorFOB, decimal? FactorDistribucion, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Descuento, decimal? ValorAdicional, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleMedioCobro_DeepFindByAllResult>> DetalleMedioCobro_DeepFindByAllAsync(int? Id, string IdCobroDebito, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleMedioCobro_DeepFindByAllPagedAsync(int? Id, string IdCobroDebito, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleMedioCobro_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleMedioCobro_FindByAllResult>> DetalleMedioCobro_FindByAllAsync(int? Id, string IdCobroDebito, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleMedioCobro_FindByAllPagedResult>> DetalleMedioCobro_FindByAllPagedAsync(int? Id, string IdCobroDebito, int? IdMedioPago, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleMedioCobro_InsertAsync(string IdCobroDebito, int? IdMedioPago, string Descripcion, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdDetalleCobro, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleMedioCobro_LoadAllResult>> DetalleMedioCobro_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleMedioCobro_LoadByPKResult>> DetalleMedioCobro_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleMedioCobro_UpdateAsync(int? Id, string IdCobroDebito, int? IdMedioPago, string Descripcion, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetallePago_DeepFindByAllResult>> DetallePago_DeepFindByAllAsync(int? Id, int? IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetallePago_DeepFindByAllPagedAsync(int? Id, int? IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetallePago_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetallePago_FindByAllResult>> DetallePago_FindByAllAsync(int? Id, int? IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetallePago_FindByAllPagedResult>> DetallePago_FindByAllPagedAsync(int? Id, int? IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetallePago_InsertAsync(string IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetallePago_LoadAllResult>> DetallePago_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetallePago_LoadByPKResult>> DetallePago_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetallePago_UpdateAsync(int? Id, int? IdPagoCredito, int? IdCuentaPorPagar, decimal? Valor, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleSalida_CheckAsync(string Id, bool? Revisado, bool? Empaquetado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_DeepFindByAllResult>> DetalleSalida_DeepFindByAllAsync(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleSalida_DeepFindByAllPagedAsync(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, bool? Empaquetado, bool? Revisado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleSalida_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_FindByAllResult>> DetalleSalida_FindByAllAsync(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_FindByAll2Result>> DetalleSalida_FindByAll2Async(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_FindByAllPagedResult>> DetalleSalida_FindByAllPagedAsync(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleSalida_InsertAsync(string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, short? Estado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_LoadAllResult>> DetalleSalida_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DetalleSalida_LoadByPKResult>> DetalleSalida_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DetalleSalida_UpdateAsync(string Id, string Periodo, DateTime? Fecha, string TipoTransaccion, string IdSalida, int? IdProducto, int? IdProveedor, int? IdLocal, decimal? CostoUnitarioImportacion, decimal? Cantidad, int? IdTipoUnidad, decimal? CostoVenta, decimal? Precio, decimal? Descuento, decimal? Subtotal, DateTime? FechaFabricacion, DateTime? FechaExpiracion, string Lote, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Empaquetado, bool? Revisado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Division_DeepFindByAllResult>> Division_DeepFindByAllAsync(int? Id, int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Division_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Division_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Division_FindByAllResult>> Division_FindByAllAsync(int? Id, int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Division_FindByAllPagedResult>> Division_FindByAllPagedAsync(int? Id, int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Division_InsertAsync(int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Division_LoadAllResult>> Division_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Division_LoadByPKResult>> Division_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Division_UpdateAsync(int? Id, int? IdEmpresa, string Division, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Documento_DeepFindByAllResult>> Documento_DeepFindByAllAsync(string Id, string IdTipoDocumento, int? IdEmpresa, string IdSalida, int? IdEntidad, short? IdMoneda, string Notas, string GuiaRemision, string NumeroDocumento, decimal? Base0, decimal? BaseIva, decimal? TotalDescuento, decimal? TotalSinImpuesto, decimal? TotalIce, decimal? TotalIva, decimal? Total, string FormaPago, int? Plazo, string UnidadTiempo, string IpIngreso, string UsuarioIngreso, DateTime? Fecha, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? ConsumidorFinal, string Establecimiento, string PuntoEmision, string RUC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Documento_DeepFindByAllPagedAsync(string Id, string IdTipoDocumento, int? IdEmpresa, string IdSalida, int? IdEntidad, short? IdMoneda, string Notas, string GuiaRemision, string NumeroDocumento, DateTime? Fecha, decimal? Base0, decimal? BaseIva, decimal? TotalDescuento, decimal? TotalSinImpuesto, decimal? TotalIce, decimal? TotalIva, decimal? Total, string FormaPago, int? Plazo, string UnidadTiempo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? ConsumidorFinal, string Establecimiento, string PuntoEmision, string RUC, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Documento_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Documento_FindByAllResult>> Documento_FindByAllAsync(string Id, string IdTipoDocumento, int? IdEmpresa, string IdSalida, int? IdEntidad, short? IdMoneda, string Notas, string GuiaRemision, string NumeroDocumento, DateTime? Fecha, decimal? Base0, decimal? BaseIva, decimal? TotalDescuento, decimal? TotalSinImpuesto, decimal? TotalIce, decimal? TotalIva, decimal? Total, string FormaPago, int? Plazo, string UnidadTiempo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? ConsumidorFinal, string Establecimiento, string PuntoEmision, string RUC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Documento_InsertAsync(string IdTipoDocumento, int? IdEmpresa, string IdSalida, int? IdEntidad, short? IdMoneda, string Notas, string GuiaRemision, string NumeroDocumento, DateTime? Fecha, decimal? Base0, decimal? BaseIva, decimal? TotalDescuento, decimal? TotalIce, decimal? TotalIva, string FormaPago, int? Plazo, string UnidadTiempo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string RUC, string Establecimiento, string PuntoEmision, bool? ConsumidorFinal, long? IdFacturaGo, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Documento_LoadAllResult>> Documento_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Documento_UpdateAsync(string Id, string IdTipoDocumento, int? IdEmpresa, string IdSalida, int? IdEntidad, short? IdMoneda, string Notas, string GuiaRemision, string NumeroDocumento, DateTime? Fecha, decimal? Base0, decimal? BaseIva, decimal? TotalDescuento, decimal? TotalSinImpuesto, decimal? TotalIce, decimal? TotalIva, decimal? Total, string FormaPago, int? Plazo, string UnidadTiempo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string Establecimiento, string PuntoEmision, string RUC, bool? ConsumidorFinal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empaquetado_DeepFindByAllResult>> Empaquetado_DeepFindByAllAsync(string Id, short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empaquetado_DeepFindByAllPagedAsync(string Id, short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empaquetado_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empaquetado_FindByAllResult>> Empaquetado_FindByAllAsync(string Id, short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empaquetado_FindByAllPagedResult>> Empaquetado_FindByAllPagedAsync(string Id, short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empaquetado_InsertAsync(short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empaquetado_LoadAllResult>> Empaquetado_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empaquetado_LoadByPKResult>> Empaquetado_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empaquetado_UpdateAsync(string Id, short? IdEmpresa, string IdSalida, int? Cantidad, int? IdTipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empresa_DeepFindByAllResult>> Empresa_DeepFindByAllAsync(int? Id, string NombreEmpresa, string Direccion, string Telefono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? IncluyeIVA, bool? Importacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empresa_DeepFindByAllPagedAsync(int? Id, string NombreEmpresa, string Direccion, string Telefono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? Importacion, bool? IncluyeIVA, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empresa_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empresa_FindByAllResult>> Empresa_FindByAllAsync(int? Id, string NombreEmpresa, string Direccion, string Telefono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? Importacion, bool? IncluyeIVA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empresa_FindByAllPagedResult>> Empresa_FindByAllPagedAsync(int? Id, string NombreEmpresa, string Direccion, string Telefono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? Importacion, bool? IncluyeIVA, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empresa_InsertAsync(string NombreEmpresa, string Direccion, string Telefono, string Logo, string RaizArchivo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? Importacion, bool? IncluyeIVA, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empresa_LoadAllResult>> Empresa_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Empresa_LoadByPKResult>> Empresa_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Empresa_UpdateAsync(int? Id, string NombreEmpresa, string Direccion, string Telefono, string Logo, string RaizArchivo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? FlujoInventario, bool? FacturaPOS, bool? Importacion, bool? IncluyeIVA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_DeepFindByAllResult>> Entidad_DeepFindByAllAsync(int? Id, int? IdEmpresa, string TipoEntidad, string TipoIdentificacion, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entidad_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string TipoIdentificacion, string TipoEntidad, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entidad_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_FindByAllResult>> Entidad_FindByAllAsync(int? Id, int? IdEmpresa, string TipoEntidad, string TipoIdentificacion, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entidad_FindByAllPagedAsync(int? Id, int? IdEmpresa, string TipoIdentificacion, string TipoEntidad, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entidad_InsertAsync(int? IdEmpresa, string TipoIdentificacion, string TipoEntidad, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, string Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, string Latitud, string Longitud, DateTime? FechaNacimiento, string Genero, string EstadoCivil, string Nacionalidad, string NivelEstudio, string Profesion, bool? CrearBodega, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_LoadAllResult>> Entidad_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_LoadByCellPhoneResult>> Entidad_LoadByCellPhoneAsync(int? IdEmpresa, string Celular, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_LoadByPKResult>> Entidad_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_LoadByTermDriverPagedResult>> Entidad_LoadByTermDriverPagedAsync(int? IdEmpresa, string Term, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entidad_LoadByTermPagedResult>> Entidad_LoadByTermPagedAsync(int? IdEmpresa, string Term, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entidad_UpdateAsync(int? Id, int? IdEmpresa, string TipoIdentificacion, string TipoEntidad, string RazonSocial, string Identificacion, short? IdPais, int? IdProvincia, int? IdCiudad, string Direccion, int? IdSector, string Telefono, string Celular, string Correo, string Observaciones, string Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? EsCliente, bool? EsProveedor, string Latitud, string Longitud, DateTime? FechaNacimiento, string Genero, string EstadoCivil, string Nacionalidad, string NivelEstudio, string Profesion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entrada_DeepFindByAllResult>> Entrada_DeepFindByAllAsync(string Id, int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, int? IdFormaPago, decimal? Tasa, short? IdMonedaOrigen, string Ruc, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entrada_DeepFindByAllPagedAsync(string Id, int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, int? IdFormaPago, decimal? Tasa, short? IdMonedaOrigen, string Ruc, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entrada_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entrada_FindByAllResult>> Entrada_FindByAllAsync(string Id, int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, int? IdFormaPago, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, decimal? Tasa, short? IdMonedaOrigen, string Ruc, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entrada_FindByAllPagedResult>> Entrada_FindByAllPagedAsync(string Id, int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entrada_InsertAsync(int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, int? IdFormaPago, decimal? Tasa, short? IdMonedaOrigen, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string Ruc, string Observaciones, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entrada_LoadAllResult>> Entrada_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Entrada_LoadByPKResult>> Entrada_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Entrada_UpdateAsync(string Id, int? IdEmpresa, int? IdLocal, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdProveedor, decimal? Subtotal0, decimal? Subtotal12, decimal? Total, decimal? Saldo, string NumeroFacturaPedido, int? IdFormaPago, decimal? Tasa, short? IdMonedaOrigen, string TransaccionPadre, string TipoTransaccionPadre, string EstadoActual, decimal? ValorAdicional, DateTime? FechaHoraEntrega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string Ruc, string Observaciones, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Guia_InsertAsync(string IdSalida, int? IdEntidadChofer, int? IdVehiculo, DateTime? FechaInicio, DateTime? FechaFin, string DireccionEntrega, string Latitud, string Longitud, string Estado, string FotoUrl, int? IdEmpresa, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InformacionAdicional_FindByAllResult>> InformacionAdicional_FindByAllAsync(int? Id, string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InformacionAdicional_InsertAsync(string IdSalida, string TituloInfoAdicional, string InfoAdicional, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertOrUpdateCuentaPorCobrarAsXmlAsync(string XmlData, OutputParameter<int?> idEgreso, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Linea_DeepFindByAllResult>> Linea_DeepFindByAllAsync(int? Id, int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Linea_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Linea_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Linea_FindByAllResult>> Linea_FindByAllAsync(int? Id, int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Linea_FindByAllPagedResult>> Linea_FindByAllPagedAsync(int? Id, int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Linea_InsertAsync(int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Linea_LoadAllResult>> Linea_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Linea_LoadByPKResult>> Linea_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Linea_UpdateAsync(int? Id, int? IdEmpresa, int? IdDivision, string Linea, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocalBodega_DeepFindByAllResult>> LocalBodega_DeepFindByAllAsync(int? Id, int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocalBodega_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocalBodega_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocalBodega_FindByAllResult>> LocalBodega_FindByAllAsync(int? Id, int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocalBodega_FindByAllPagedResult>> LocalBodega_FindByAllPagedAsync(int? Id, int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocalBodega_InsertAsync(int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, int? IdEntidad, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocalBodega_LoadAllResult>> LocalBodega_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LocalBodega_LoadByPKResult>> LocalBodega_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LocalBodega_UpdateAsync(int? Id, int? IdEmpresa, string Tipo, string Local, string Direccion, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string DefaultRUC, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Marca_DeepFindByAllResult>> Marca_DeepFindByAllAsync(int? Id, int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Marca_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Marca_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Marca_FindByAllResult>> Marca_FindByAllAsync(int? Id, int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Marca_FindByAllPagedResult>> Marca_FindByAllPagedAsync(int? Id, int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Marca_InsertAsync(int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Marca_LoadAllResult>> Marca_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Marca_LoadByPKResult>> Marca_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Marca_UpdateAsync(int? Id, int? IdEmpresa, string Marca, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MedioPago_DeepFindByAllResult>> MedioPago_DeepFindByAllAsync(int? Id, int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> MedioPago_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> MedioPago_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MedioPago_FindByAllResult>> MedioPago_FindByAllAsync(int? Id, int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MedioPago_FindByAllPagedResult>> MedioPago_FindByAllPagedAsync(int? Id, int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> MedioPago_InsertAsync(int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MedioPago_LoadAllResult>> MedioPago_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MedioPago_LoadByPKResult>> MedioPago_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> MedioPago_UpdateAsync(int? Id, int? IdEmpresa, string MedioPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Modulo_DeepFindByAllResult>> Modulo_DeepFindByAllAsync(short? Id, string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Modulo_DeepFindByAllPagedAsync(short? Id, string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Modulo_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Modulo_FindByAllResult>> Modulo_FindByAllAsync(short? Id, string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Modulo_FindByAllPagedResult>> Modulo_FindByAllPagedAsync(short? Id, string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Modulo_InsertAsync(string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Modulo_LoadAllResult>> Modulo_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Modulo_LoadByPKResult>> Modulo_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Modulo_UpdateAsync(short? Id, string Modulo, string Icono, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Moneda_DeepFindByAllResult>> Moneda_DeepFindByAllAsync(short? Id, string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Moneda_DeepFindByAllPagedAsync(short? Id, string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Moneda_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Moneda_FindByAllResult>> Moneda_FindByAllAsync(short? Id, string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Moneda_FindByAllPagedResult>> Moneda_FindByAllPagedAsync(short? Id, string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Moneda_InsertAsync(string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Moneda_LoadAllResult>> Moneda_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Moneda_LoadByPKResult>> Moneda_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Moneda_UpdateAsync(short? Id, string CodigoISO, short? Pais, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PagoCredito_DeepFindByAllResult>> PagoCredito_DeepFindByAllAsync(int? Id, int? IdEmpresa, int? IdProveedor, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PagoCredito_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, int? IdPorveedor, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PagoCredito_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PagoCredito_FindByAllResult>> PagoCredito_FindByAllAsync(int? Id, int? IdEmpresa, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PagoCredito_FindByAllPagedResult>> PagoCredito_FindByAllPagedAsync(int? Id, int? IdEmpresa, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PagoCredito_InsertAsync(int? IdEmpresa, int? IdProveedor, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PagoCredito_LoadAllResult>> PagoCredito_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PagoCredito_LoadByPKResult>> PagoCredito_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PagoCredito_UpdateAsync(int? Id, int? IdEmpresa, int? IdProveedor, DateTime? Fecha, string Detalle, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pais_DeepFindByAllResult>> Pais_DeepFindByAllAsync(short? Id, string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pais_DeepFindByAllPagedAsync(short? Id, string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pais_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pais_FindByAllResult>> Pais_FindByAllAsync(short? Id, string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pais_FindByAllPagedResult>> Pais_FindByAllPagedAsync(short? Id, string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pais_InsertAsync(string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pais_LoadAllResult>> Pais_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pais_LoadByPKResult>> Pais_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pais_UpdateAsync(short? Id, string Codigo, string Pais, string Nacionalidad, string CodigoNacionalidad, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pantalla_DeepFindByAllResult>> Pantalla_DeepFindByAllAsync(short? Id, short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pantalla_DeepFindByAllPagedAsync(short? Id, short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pantalla_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pantalla_FindByAllResult>> Pantalla_FindByAllAsync(short? Id, short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pantalla_FindByAllPagedResult>> Pantalla_FindByAllPagedAsync(short? Id, short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pantalla_InsertAsync(short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pantalla_LoadAllResult>> Pantalla_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Pantalla_LoadByPKResult>> Pantalla_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Pantalla_UpdateAsync(short? Id, short? IdModulo, short? IdGrupo, string Nombre, string Descripcion, string NombreAssembly, string Icono, string Ayuda, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Orden, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PantallaXPerfil_DeepFindByAllResult>> PantallaXPerfil_DeepFindByAllAsync(short? Id, short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PantallaXPerfil_DeepFindByAllPagedAsync(short? Id, short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PantallaXPerfil_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PantallaXPerfil_FindByAllResult>> PantallaXPerfil_FindByAllAsync(short? Id, short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PantallaXPerfil_FindByAllPagedResult>> PantallaXPerfil_FindByAllPagedAsync(short? Id, short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PantallaXPerfil_InsertAsync(short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PantallaXPerfil_LoadAllResult>> PantallaXPerfil_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PantallaXPerfil_LoadByPKResult>> PantallaXPerfil_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PantallaXPerfil_UpdateAsync(short? Id, short? IdPerfil, short? IdPantalla, bool? Guardar, bool? Modificar, bool? Eliminar, bool? Consultar, bool? VistaPreliminar, bool? Imprimir, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Perfil_DeepFindByAllResult>> Perfil_DeepFindByAllAsync(short? Id, string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Perfil_DeepFindByAllPagedAsync(short? Id, string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Perfil_DeleteAsync(short? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Perfil_FindByAllResult>> Perfil_FindByAllAsync(short? Id, string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Perfil_FindByAllPagedResult>> Perfil_FindByAllPagedAsync(short? Id, string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Perfil_InsertAsync(string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<short?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Perfil_LoadAllResult>> Perfil_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Perfil_LoadByPKResult>> Perfil_LoadByPKAsync(short? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Perfil_UpdateAsync(short? Id, string Perfil, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PR_CuentaPorCobrar_ByIdClienteResult>> PR_CuentaPorCobrar_ByIdClienteAsync(int? idEmpresa, int? idCliente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Precio_DeepFindByAllResult>> Precio_DeepFindByAllAsync(int? Id, int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Precio_DeepFindByAllPagedAsync(int? Id, int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Precio_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Precio_FindByAllResult>> Precio_FindByAllAsync(int? Id, int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Precio_FindByAllPagedResult>> Precio_FindByAllPagedAsync(int? Id, int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Precio_InsertAsync(int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Precio_LoadAllResult>> Precio_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Precio_LoadByPKResult>> Precio_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Precio_UpdateAsync(int? Id, int? IdProducto, int? IdTipoUnidad, decimal? Precio, int? Moneda, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PresupuestoFacturacion_DeepFindByAllResult>> PresupuestoFacturacion_DeepFindByAllAsync(int? Id, int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PresupuestoFacturacion_DeepFindByAllPagedAsync(int? Id, int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PresupuestoFacturacion_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PresupuestoFacturacion_FindByAllResult>> PresupuestoFacturacion_FindByAllAsync(int? Id, int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PresupuestoFacturacion_FindByAllPagedResult>> PresupuestoFacturacion_FindByAllPagedAsync(int? Id, int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PresupuestoFacturacion_InsertAsync(int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PresupuestoFacturacion_LoadAllResult>> PresupuestoFacturacion_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PresupuestoFacturacion_LoadByPKResult>> PresupuestoFacturacion_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PresupuestoFacturacion_UpdateAsync(int? Id, int? IdEmpresa, string Ruc, string Mes, string Fecha, decimal? Presupuesto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_DeepFindByAllResult>> Producto_DeepFindByAllAsync(int? Id, short? IdEmpresa, string CodigoProveedor, string CodigoInterno, string CodigoBarra, string TipoProducto, string Producto, string Descripcion, string DescipcionBusqueda, int? Stock, int? StockMinimo, decimal? Costo, int? UnidadMedida, decimal? Descuento, bool? CobraIva, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdMarca, decimal? Peso, decimal? Volumen, string RegistroSanitario, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? ProductoPadre, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Producto_DeepFindByAllPagedAsync(int? Id, short? IdEmpresa, string CodigoProveedor, string CodigoInterno, string CodigoBarra, string TipoProducto, string Producto, string Descripcion, string DescipcionBusqueda, int? Stock, int? StockMinimo, decimal? Costo, int? UnidadMedida, decimal? Descuento, bool? CobraIva, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdMarca, decimal? Peso, decimal? Volumen, string RegistroSanitario, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Producto_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_FindByAllResult>> Producto_FindByAllAsync(int? Id, short? IdEmpresa, string CodigoProveedor, string CodigoInterno, string CodigoBarra, string TipoProducto, string Producto, string Descripcion, string DescipcionBusqueda, int? Stock, int? StockMinimo, decimal? Costo, int? UnidadMedida, decimal? Descuento, bool? CobraIva, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdMarca, decimal? Peso, decimal? Volumen, string RegistroSanitario, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? ProductoPadre, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_FindByCodigoInternoResult>> Producto_FindByCodigoInternoAsync(string CodigoInterno, int? IdEmpresa, int? IdLocal, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Producto_InsertAsync(short? IdEmpresa, string CodigoProveedor, string CodigoInterno, string CodigoBarra, string TipoProducto, string Producto, string Descripcion, string DescipcionBusqueda, int? Stock, int? StockMinimo, decimal? Costo, int? UnidadMedida, decimal? Descuento, bool? CobraIva, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdMarca, decimal? Peso, decimal? Volumen, string RegistroSanitario, string PathArchivo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? ProductoPadre, int? IdTarifaImpuesto, int? PorcentajeTarifaImpuesto, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_LoadAllResult>> Producto_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_LoadByPKResult>> Producto_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_SearchProductsResult>> Producto_SearchProductsAsync(short? IdEmpresa, string SearchTerm, bool? ParentsOnly, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Producto_SearchProductsPagedResult>> Producto_SearchProductsPagedAsync(short? IdEmpresa, string SearchTerm, bool? ParentsOnly, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Producto_UpdateAsync(int? Id, short? IdEmpresa, string CodigoProveedor, string CodigoInterno, string CodigoBarra, string TipoProducto, string Producto, string Descripcion, string DescipcionBusqueda, int? Stock, int? StockMinimo, decimal? Costo, int? UnidadMedida, decimal? Descuento, bool? CobraIva, int? IdDivision, int? IdLinea, int? IdCategoria, int? IdMarca, decimal? Peso, decimal? Volumen, string RegistroSanitario, string PathArchivo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? ProductoPadre, int? IdTarifaImpuesto, int? PorcentajeTarifaImpuesto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Provincia_DeepFindByAllResult>> Provincia_DeepFindByAllAsync(int? Id, short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Provincia_DeepFindByAllPagedAsync(int? Id, short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Provincia_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Provincia_FindByAllResult>> Provincia_FindByAllAsync(int? Id, short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Provincia_FindByAllPagedResult>> Provincia_FindByAllPagedAsync(int? Id, short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Provincia_InsertAsync(short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Provincia_LoadAllResult>> Provincia_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Provincia_LoadByPKResult>> Provincia_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Provincia_UpdateAsync(int? Id, short? IdPais, string Provincia, string Codigo, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruc_DeepFindByAllResult>> Ruc_DeepFindByAllAsync(string Ruc, string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Rise, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ruc_DeepFindByAllPagedAsync(string Ruc, string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Rise, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ruc_DeleteAsync(string Ruc, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruc_FindByAllResult>> Ruc_FindByAllAsync(string Ruc, string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Rise, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruc_FindByAllPagedResult>> Ruc_FindByAllPagedAsync(string Ruc, string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, short? Rise, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ruc_InsertAsync(string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, short? Rise, OutputParameter<string> Ruc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruc_LoadAllResult>> Ruc_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruc_LoadByPKResult>> Ruc_LoadByPKAsync(string Ruc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Ruc_UpdateAsync(string Ruc, string RazonSocial, string ActividadEconomica, string TokenFactElectonica, int? LocalPorDefecto, int? IdEmpresa, decimal? LimiteFacturacion, decimal? TotalFacturado, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, bool? Rise, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruta_FaltanteResult>> Ruta_FaltanteAsync(int? IdRuta, int? IdBodegaCliente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruta_FaltanteAllResult>> Ruta_FaltanteAllAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruta_GetLogisticoDisponibleResult>> Ruta_GetLogisticoDisponibleAsync(int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Ruta_LoadByTermPagedResult>> Ruta_LoadByTermPagedAsync(int? IdEmpresa, string Term, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RutaDetalle_LoadByIdRutaPagedResult>> RutaDetalle_LoadByIdRutaPagedAsync(int? IdEmpresa, int? IdRuta, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_DeepFindByAllResult>> Salida_DeepFindByAllAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, string TipoTransaccionPadre, string TransaccionPadre, int? Plazo, int? Cuotas, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_DeepFindByAllNewResult>> Salida_DeepFindByAllNewAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, string TipoTransaccionPadre, string TransaccionPadre, int? Plazo, int? Cuotas, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Salida_DeepFindByAllPagedAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string TipoTransaccionPadre, string TransaccionPadre, int? Plazo, int? Cuotas, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Salida_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, string Observaciones, string EstadoActual, bool? NoBorrarCobros, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_FindByAllResult>> Salida_FindByAllAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, string TipoTransaccionPadre, string TransaccionPadre, short? IdEstado, int? Plazo, int? Cuotas, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_FindByAllPagedResult>> Salida_FindByAllPagedAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, string TipoTransaccionPadre, string TransaccionPadre, int? Plazo, int? Cuotas, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Salida_InsertAsync(int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, decimal? ValorAdicional, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Plazo, int? Cuotas, string TransaccionPadre, string TipoTransaccionPadre, string Entrega, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_LoadAllResult>> Salida_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Salida_LoadByPKResult>> Salida_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Salida_UpdateAsync(string Id, int? IdEmpresa, int? IdLocal, string IdVendedor, string Periodo, DateTime? Fecha, string TipoTransaccion, int? IdCliente, bool? Facturar, string Ruc, decimal? Subtotal0, decimal? SubtotalIva, decimal? Descuento, decimal? Total, decimal? Saldo, decimal? ValorAdicional, DateTime? FechaHoraEntregaPropuesta, DateTime? FechaHoraEntregaReal, string EstadoActual, string Observaciones, int? IdFormaPago, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? Plazo, int? Cuotas, string TransaccionPadre, string TipoTransaccionPadre, string Entrega, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SalidaAllFanIdResult>> SalidaAllFanIdAsync(int? IdEmpresa, string InicioSesion, string TipoTransaccion, string Observaciones, string Identificacion, OutputParameter<string> IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SalidaFormaPagoSri_InsertAsync(int? IdFormaPagoSri, string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SalidaFormaPagoSri_UpdateAsync(int? IdFormaPagoSri, string IdSalida, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Sector_DeepFindByAllResult>> Sector_DeepFindByAllAsync(int? Id, string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Sector_DeepFindByAllPagedAsync(int? Id, string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Sector_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Sector_FindByAllResult>> Sector_FindByAllAsync(int? Id, string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Sector_FindByAllPagedResult>> Sector_FindByAllPagedAsync(int? Id, string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Sector_InsertAsync(string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Sector_LoadAllResult>> Sector_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Sector_LoadByPKResult>> Sector_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Sector_UpdateAsync(int? Id, string Sector, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieEntrada_DeepFindByAllResult>> SerieEntrada_DeepFindByAllAsync(int? Id, string IdDetalleEntrada, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieEntrada_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieEntrada_FindByAllResult>> SerieEntrada_FindByAllAsync(int? Id, string IdDetalleEntrada, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieEntrada_InsertAsync(string IdDetalleEntrada, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieEntrada_LoadByPKResult>> SerieEntrada_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieEntrada_UpdateAsync(string Id, string IdDetalleEntrada, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieSalida_DeepFindByAllResult>> SerieSalida_DeepFindByAllAsync(int? Id, string IdDetalleSalida, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieSalida_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieSalida_FindByAllResult>> SerieSalida_FindByAllAsync(int? Id, string IdDetalleSalida, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieSalida_InsertAsync(string IdDetalleSalida, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SerieSalida_LoadByPKResult>> SerieSalida_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SerieSalida_UpdateAsync(string Id, string IdDetalleSalida, int? IdProducto, string Serie, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Stock_DeepFindByAllResult>> Stock_DeepFindByAllAsync(string Id, int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, decimal? ValorTotal, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, decimal? SaldoInventario, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Stock_DeepFindByAllPagedAsync(string Id, int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, decimal? ValorTotal, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, decimal? SaldoInventario, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Stock_FindByAllResult>> Stock_FindByAllAsync(string Id, int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, decimal? ValorTotal, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, decimal? SaldoInventario, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Stock_FindByAllPagedResult>> Stock_FindByAllPagedAsync(string Id, int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, decimal? ValorTotal, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, decimal? SaldoInventario, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Stock_InsertAsync(int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Stock_LoadAllResult>> Stock_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Stock_LoadByPKResult>> Stock_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Stock_UpdateAsync(string Id, int? IdEmpresa, string Tipo, string IdSalidaEntrada, string IdDetalle, int? IdProducto, int? IdLocal, DateTime? Fecha, decimal? Cantidad, decimal? ValorUnitario, decimal? ValorTotal, int? IdTipoUnidad, decimal? CantidadTipoUnidad, decimal? StockInventario, decimal? CostoPromedioPonderado, decimal? SaldoInventario, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoDocumento_DeepFindByAllResult>> TipoDocumento_DeepFindByAllAsync(string Id, string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoDocumento_DeepFindByAllPagedAsync(string Id, string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoDocumento_DeleteAsync(string Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoDocumento_FindByAllResult>> TipoDocumento_FindByAllAsync(string Id, string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoDocumento_FindByAllPagedResult>> TipoDocumento_FindByAllPagedAsync(string Id, string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoDocumento_InsertAsync(string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<string> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoDocumento_LoadAllResult>> TipoDocumento_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoDocumento_LoadByPKResult>> TipoDocumento_LoadByPKAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoDocumento_UpdateAsync(string Id, string TipoDocumento, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoPaquete_DeepFindByAllResult>> TipoPaquete_DeepFindByAllAsync(int? Id, string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoPaquete_DeepFindByAllPagedAsync(int? Id, string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoPaquete_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoPaquete_FindByAllResult>> TipoPaquete_FindByAllAsync(int? Id, string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoPaquete_FindByAllPagedResult>> TipoPaquete_FindByAllPagedAsync(int? Id, string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoPaquete_InsertAsync(string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoPaquete_LoadAllResult>> TipoPaquete_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoPaquete_LoadByPKResult>> TipoPaquete_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoPaquete_UpdateAsync(int? Id, string TipoPaquete, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_DeepFindByAllResult>> TipoUnidad_DeepFindByAllAsync(int? Id, short? IdEmpresa, string IdProducto, string TipoUnidad, decimal? Cantidad, decimal? CantidadMinima, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoUnidad_DeepFindByAllPagedAsync(int? Id, short? IdEmpresa, int? IdProducto, string TipoUnidad, decimal? Cantidad, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoUnidad_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_FindByAllResult>> TipoUnidad_FindByAllAsync(int? Id, short? IdEmpresa, string IdProducto, string TipoUnidad, decimal? Cantidad, decimal? CantidadMinima, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_FindByAllPagedResult>> TipoUnidad_FindByAllPagedAsync(int? Id, short? IdEmpresa, int? IdProducto, string TipoUnidad, decimal? Cantidad, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoUnidad_InsertAsync(short? IdEmpresa, int? IdProducto, string TipoUnidad, decimal? Cantidad, decimal? CantidadMinima, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, decimal? Costo, bool? Plantilla, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_LoadAllResult>> TipoUnidad_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_LoadByIdProductoResult>> TipoUnidad_LoadByIdProductoAsync(int? IdEmpresa, int? IdProducto, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TipoUnidad_LoadByPKResult>> TipoUnidad_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TipoUnidad_UpdateAsync(int? Id, short? IdEmpresa, int? IdProducto, string TipoUnidad, decimal? Cantidad, decimal? CantidadMinima, int? UnidadMedidad, decimal? Precio, bool? IncluyeIva, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, decimal? Costo, bool? Plantilla, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UnidadMedida_DeepFindByAllResult>> UnidadMedida_DeepFindByAllAsync(int? Id, string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UnidadMedida_DeepFindByAllPagedAsync(int? Id, string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UnidadMedida_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UnidadMedida_FindByAllResult>> UnidadMedida_FindByAllAsync(int? Id, string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UnidadMedida_FindByAllPagedResult>> UnidadMedida_FindByAllPagedAsync(int? Id, string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UnidadMedida_InsertAsync(string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UnidadMedida_LoadAllResult>> UnidadMedida_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UnidadMedida_LoadByPKResult>> UnidadMedida_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UnidadMedida_UpdateAsync(int? Id, string UnidadMedida, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? IdEmpresa, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Usuario_DeepFindByAllResult>> Usuario_DeepFindByAllAsync(string InicioSesion, int? IdEmpresa, short? IdPerifl, string Nombres, string Identificacion, bool? Sexo, string Direccion, string Correo, string Contraseña, string Telefono, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Usuario_DeepFindByAllPagedAsync(string InicioSesion, int? IdEmpresa, short? IdPerifl, string Nombres, string Identificacion, bool? Sexo, string Direccion, string Correo, string Contraseña, string Telefono, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Usuario_DeleteAsync(string InicioSesion, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Usuario_InsertAsync(int? IdEmpresa, short? IdPerifl, string Nombres, string Identificacion, bool? Sexo, string Direccion, string Correo, string Contraseña, string Telefono, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<string> InicioSesion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Usuario_LoadAllResult>> Usuario_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Usuario_LoadByPKResult>> Usuario_LoadByPKAsync(string InicioSesion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Usuario_UpdateAsync(string InicioSesion, int? IdEmpresa, short? IdPerifl, string Nombres, string Identificacion, bool? Sexo, string Direccion, string Correo, string Contraseña, string Telefono, byte[] Foto, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UsuarioLocalBodega_DeepFindByAllResult>> UsuarioLocalBodega_DeepFindByAllAsync(int? Id, string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UsuarioLocalBodega_DeepFindByAllPagedAsync(int? Id, string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, string OrderBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UsuarioLocalBodega_DeleteAsync(int? Id, DateTime? FechaModificacion, string UsuarioModificacion, string IpModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UsuarioLocalBodega_FindByAllResult>> UsuarioLocalBodega_FindByAllAsync(int? Id, string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UsuarioLocalBodega_FindByAllPagedResult>> UsuarioLocalBodega_FindByAllPagedAsync(int? Id, string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, int? PageNumber, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UsuarioLocalBodega_InsertAsync(string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int?> Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UsuarioLocalBodega_LoadAllResult>> UsuarioLocalBodega_LoadAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UsuarioLocalBodega_LoadByPKResult>> UsuarioLocalBodega_LoadByPKAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UsuarioLocalBodega_UpdateAsync(int? Id, string InicioSesion, int? IdLocalBodega, string IpIngreso, string UsuarioIngreso, DateTime? FechaIngreso, string IpModificacion, string UsuarioModificacion, DateTime? FechaModificacion, short? IdEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
