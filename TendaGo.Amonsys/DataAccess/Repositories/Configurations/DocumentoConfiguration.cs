// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ER.DA.Models;
using ER.DA.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace ER.DA.Repositories.Configurations
{
    public partial class DocumentoConfiguration : IEntityTypeConfiguration<Documento>
    {
        public void Configure(EntityTypeBuilder<Documento> entity)
        {
            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Base0).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.BaseIva).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Establecimiento)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Fecha).HasColumnType("date");
            entity.Property(e => e.FechaAutorizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.FormaPago)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.GuiaRemision)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdSalida)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IdTipoDocumento)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.IpIngreso)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.IpModificacion)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Mensaje)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Notas)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.NumeroAutorizacion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NumeroDocumento)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PuntoEmision)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Ruc)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("RUC");
            entity.Property(e => e.Total)
                .HasComputedColumnSql("(((([Base0]+[BaseIva])-[TotalDescuento])+[TotalIva])+[TotalIce])", false)
                .HasColumnType("decimal(22, 2)");
            entity.Property(e => e.TotalDescuento).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalIce).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalIva).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalSinImpuesto)
                .HasComputedColumnSql("(([Base0]+[BaseIva])-[TotalDescuento])", false)
                .HasColumnType("decimal(20, 2)");
            entity.Property(e => e.UnidadTiempo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UsuarioIngreso)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UsuarioModificacion)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.IdEntidadNavigation).WithMany(p => p.Documento)
                .HasForeignKey(d => d.IdEntidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documento_Entidad");

            entity.HasOne(d => d.IdMonedaNavigation).WithMany(p => p.Documento)
                .HasForeignKey(d => d.IdMoneda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documento_Moneda");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.Documento)
                .HasForeignKey(d => d.IdTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documento_TipoDocumento");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Documento> entity);
    }
}
