// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ER.DA.Models;
using ER.DA.Repositories.Configurations;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
#nullable disable

namespace ER.DA.Repositories;

public partial class TendaGOContext : DbContext
{
    public TendaGOContext(DbContextOptions<TendaGOContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Categoria> Categoria { get; set; }

    public virtual DbSet<Chofer> Chofer { get; set; }

    public virtual DbSet<CierreCaja> CierreCaja { get; set; }

    public virtual DbSet<Ciudad> Ciudad { get; set; }

    public virtual DbSet<Ciudad2temp> Ciudad2temp { get; set; }

    public virtual DbSet<CobroDebito> CobroDebito { get; set; }

    public virtual DbSet<CostoPromedio> CostoPromedio { get; set; }

    public virtual DbSet<CuentaPorCobrar> CuentaPorCobrar { get; set; }

    public virtual DbSet<CuentaPorPagar> CuentaPorPagar { get; set; }

    public virtual DbSet<Descuento> Descuento { get; set; }

    public virtual DbSet<DetalleCobro> DetalleCobro { get; set; }

    public virtual DbSet<DetalleDocumento> DetalleDocumento { get; set; }

    public virtual DbSet<DetalleEntrada> DetalleEntrada { get; set; }

    public virtual DbSet<DetalleMedioCobro> DetalleMedioCobro { get; set; }

    public virtual DbSet<DetallePago> DetallePago { get; set; }

    public virtual DbSet<DetalleSalida> DetalleSalida { get; set; }

    public virtual DbSet<Division> Division { get; set; }

    public virtual DbSet<Documento> Documento { get; set; }

    public virtual DbSet<Empaquetado> Empaquetado { get; set; }

    public virtual DbSet<Empresa> Empresa { get; set; }

    public virtual DbSet<Entidad> Entidad { get; set; }

    public virtual DbSet<Entrada> Entrada { get; set; }

    public virtual DbSet<EstadoEntrada> EstadoEntrada { get; set; }

    public virtual DbSet<EstadoSalida> EstadoSalida { get; set; }

    public virtual DbSet<Fan> Fan { get; set; }

    public virtual DbSet<FanId> FanId { get; set; }

    public virtual DbSet<FanIdOld> FanIdOld { get; set; }

    public virtual DbSet<FormaPagoSri> FormaPagoSri { get; set; }

    public virtual DbSet<GuiaRemision> GuiaRemision { get; set; }

    public virtual DbSet<InformacionAdicional> InformacionAdicional { get; set; }

    public virtual DbSet<Linea> Linea { get; set; }

    public virtual DbSet<LocalBodega> LocalBodega { get; set; }

    public virtual DbSet<Marca> Marca { get; set; }

    public virtual DbSet<MedioPago> MedioPago { get; set; }

    public virtual DbSet<Modulo> Modulo { get; set; }

    public virtual DbSet<Moneda> Moneda { get; set; }

    public virtual DbSet<PagoCredito> PagoCredito { get; set; }

    public virtual DbSet<Pais> Pais { get; set; }

    public virtual DbSet<Pantalla> Pantalla { get; set; }

    public virtual DbSet<PantallaXperfil> PantallaXperfil { get; set; }

    public virtual DbSet<Perfil> Perfil { get; set; }

    public virtual DbSet<Precio> Precio { get; set; }

    public virtual DbSet<PresupuestoFacturacion> PresupuestoFacturacion { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<Provincia> Provincia { get; set; }

    public virtual DbSet<Ruc> Ruc { get; set; }

    public virtual DbSet<Ruta> Ruta { get; set; }

    public virtual DbSet<RutaDetalle> RutaDetalle { get; set; }

    public virtual DbSet<RutaImagenes> RutaImagenes { get; set; }

    public virtual DbSet<Salida> Salida { get; set; }

    public virtual DbSet<SalidaFormaPagoSri> SalidaFormaPagoSri { get; set; }

    public virtual DbSet<Sector> Sector { get; set; }

    public virtual DbSet<Secuencial> Secuencial { get; set; }

    public virtual DbSet<SerieEntrada> SerieEntrada { get; set; }

    public virtual DbSet<SerieSalida> SerieSalida { get; set; }

    public virtual DbSet<Stock> Stock { get; set; }

    public virtual DbSet<TarifaImpuesto> TarifaImpuesto { get; set; }

    public virtual DbSet<TipoDescuento> TipoDescuento { get; set; }

    public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }

    public virtual DbSet<TipoPaquete> TipoPaquete { get; set; }

    public virtual DbSet<TipoUnidad> TipoUnidad { get; set; }

    public virtual DbSet<TransferenciaLocal> TransferenciaLocal { get; set; }

    public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual DbSet<UsuarioLocalBodega> UsuarioLocalBodega { get; set; }

    public virtual DbSet<Vehiculo> Vehiculo { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.CategoriaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ChoferConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CierreCajaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CiudadConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.Ciudad2tempConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CobroDebitoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CostoPromedioConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CuentaPorCobrarConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CuentaPorPagarConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DescuentoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetalleCobroConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetalleDocumentoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetalleEntradaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetalleMedioCobroConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetallePagoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DetalleSalidaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DivisionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.DocumentoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EmpaquetadoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EmpresaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EntidadConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EntradaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EstadoEntradaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EstadoSalidaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.FanConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.FanIdConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.FanIdOldConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.FormaPagoSriConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.GuiaRemisionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.InformacionAdicionalConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.LineaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.LocalBodegaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.MarcaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.MedioPagoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ModuloConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.MonedaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PagoCreditoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PaisConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PantallaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PantallaXperfilConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PerfilConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PrecioConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PresupuestoFacturacionConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProductoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProvinciaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RucConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RutaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RutaDetalleConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.RutaImagenesConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SalidaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SalidaFormaPagoSriConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SectorConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SecuencialConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SerieEntradaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SerieSalidaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.StockConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TarifaImpuestoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoDescuentoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoDocumentoConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoPaqueteConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TipoUnidadConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TransferenciaLocalConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UnidadMedidaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UsuarioConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UsuarioLocalBodegaConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.VehiculoConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
