    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Threading.Tasks;
using ER.BE;
using ER.DA.Repositories;



namespace ER.DA
{
    public partial class CategoriaDataAccess
    {
		private readonly ITendaGOContextProcedures _prodecures;

        public CategoriaDataAccess(ITendaGOContextProcedures prodecures)
        {
            _prodecures = prodecures;
        }

        #region << Default Methods >>

        /// <summary>
        /// Create a new entity type of Categoria
        /// </summary>
        public async Task<CategoriaEntity> Insert(CategoriaEntity categoria)
        {
            try
            {
				OutputParameter<int?> idCategoria = new();

				await _prodecures.Categoria_InsertAsync(
					categoria.IdEmpresa, 
					categoria.IdLinea, 
					categoria.Categoria.ToUpper(), 
					categoria.IpIngreso, 
					categoria.UsuarioIngreso.ToUpper(),
                    categoria.FechaIngreso,
                    categoria.IpModificacion.ToUpper(),
                    categoria.UsuarioModificacion.ToUpper(),
                    categoria.FechaModificacion,
                    categoria.IdEstado,
					idCategoria);

				categoria.Id = (int)idCategoria.Value;

                return categoria;
            }
            catch (Exception exc)
            {
                throw exc;
            }
        }

        /// <summary>
        /// Update a entity
        /// </summary>
        public async Task Update(CategoriaEntity categoria)
        {
            try
            {
                await _prodecures.Categoria_UpdateAsync(
                    categoria.Id,
                    categoria.IdEmpresa,
                    categoria.IdLinea,
                    categoria.Categoria.ToUpper(),
                    categoria.IpIngreso,
                    categoria.UsuarioIngreso.ToUpper(),
                    categoria.FechaIngreso,
                    categoria.IpModificacion.ToUpper(),
                    categoria.UsuarioModificacion.ToUpper(),
                    categoria.FechaModificacion,
                    categoria.IdEstado
                    );
            }
            catch (Exception exc)
            {
                throw exc;
            }
        }

         /// <summary>
        /// Delete a entity
        /// </summary>
        public async void Delete(CategoriaEntity categoria)
        {
            try
            {

                await _prodecures.Categoria_DeleteAsync(
                    categoria.Id
                    ,categoria.FechaModificacion
                    ,categoria.UsuarioModificacion.ToUpper()
                    ,categoria.IpModificacion.ToUpper()
                    );
                
            }
            catch (Exception exc)
            {
                throw exc;
            }
        }
        
        
         
         
         /// <summary>
        /// Load a entity by your Primary Key
        /// </summary>
   //     public static CategoriaEntity LoadByPK(int Id, SqlConnection connection, SqlTransaction  transaction)
   //     {
   //     	return LoadByPK(Id,connection,transaction,1);
   //     }
        
   //     /// <summary>
   //     /// Load a entity by your Primary Key
   //     /// </summary>
   //     public static CategoriaEntity LoadByPK(int Id, SqlConnection connection, SqlTransaction  transaction, int deepLoadLevel)
   //     {
   //         CategoriaEntity categoria = new CategoriaEntity();
            
			//categoria.Id = Id;
            
            
   //         SqlCommand mCommand = new SqlCommand();
   //         SqlDataReader reader = null;
   //         try
   //         {
   //             mCommand.Connection = connection;
   //             mCommand.CommandType = CommandType.StoredProcedure;
   //             mCommand.Transaction = transaction;
   //             mCommand.CommandText = "Categoria_LoadByPK";

   //             #region << Add the params >>

			//	mCommand.Parameters.AddWithValue("@Id", categoria.Id);
                
 
   //             #endregion 
                
   //             if (connection.State != ConnectionState.Open) connection.Open();

   //             reader = mCommand.ExecuteReader();

   //             if(!reader.HasRows) return null;
                
	  //          while (reader.Read())
	  //          {
			//		#region << Deep Load >>
   //                 if (deepLoadLevel == 1)
		 //    		{
			//			categoria.IdLineaAsLinea = LineaDataAccess.ConvertToLineaEntity(reader, "IdLinea");

   //                 }
	  //              #endregion
	                
	  //              #region << Load the BusinessEntity Object >>
					
			//		categoria.Id = Convert.ToInt32(reader["Id"]);
			//		categoria.IdEmpresa = Convert.ToInt32(reader["IdEmpresa"]);
			//		categoria.IdLinea = Convert.ToInt32(reader["IdLinea"]);
			//		categoria.Categoria = Convert.ToString(reader["Categoria"]);
			//		categoria.IpIngreso = Convert.ToString(reader["IpIngreso"]);
			//		categoria.UsuarioIngreso = Convert.ToString(reader["UsuarioIngreso"]);
			//		categoria.FechaIngreso = Convert.ToDateTime(reader["FechaIngreso"]);
			//		if (reader["IpModificacion"] != DBNull.Value)
			//		{
			//			categoria.IpModificacion = Convert.ToString(reader["IpModificacion"]).ToUpper();
			//		}
			//		if (reader["UsuarioModificacion"] != DBNull.Value)
			//		{
			//			categoria.UsuarioModificacion = Convert.ToString(reader["UsuarioModificacion"]).ToUpper();
			//		}
			//		if (reader["FechaModificacion"] != DBNull.Value)
			//		{
			//			categoria.FechaModificacion = Convert.ToDateTime(reader["FechaModificacion"]);
			//		}
			//		categoria.IdEstado = Convert.ToInt16(reader["IdEstado"]);

	  //              #endregion
	  //          }

   //             categoria.SetLoadedState();
   //             return categoria;
   //         }
   //         catch (Exception exc)
   //         {
   //             throw exc;
   //         }
   //         finally
   //         {
   //             if (reader != null) reader.Close();
   //             mCommand.Dispose();
   //         }
   //     }
        
        #endregion
        
        
        
        
        #region << Mappers >>
        
    //    public static CategoriaEntity ConvertToCategoriaEntity (SqlDataReader reader,string fkColumnName)
    //    {
    //        CategoriaEntity categoria = new CategoriaEntity();
            
    //        try
    //        {
    //            bool hasData=false;
    //            string columName;
                
    //            #region << Load the BusinessEntity Object >>
                
				//try
				//{
				//	columName = String.Format("Id_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.Id = Convert.ToInt32(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("IdEmpresa_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.IdEmpresa = Convert.ToInt32(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("IdLinea_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.IdLinea = Convert.ToInt32(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("Categoria_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.Categoria = Convert.ToString(reader[columName]).ToUpper();
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("IpIngreso_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.IpIngreso = Convert.ToString(reader[columName]).ToUpper();
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("UsuarioIngreso_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.UsuarioIngreso = Convert.ToString(reader[columName]).ToUpper();
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("FechaIngreso_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.FechaIngreso = Convert.ToDateTime(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("IpModificacion_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.IpModificacion = Convert.ToString(reader[columName]).ToUpper();
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("UsuarioModificacion_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.UsuarioModificacion = Convert.ToString(reader[columName]).ToUpper();
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("FechaModificacion_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.FechaModificacion = Convert.ToDateTime(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}
				//try
				//{
				//	columName = String.Format("IdEstado_CategoriaFrom{0}", fkColumnName);
				//	if (reader[columName] != DBNull.Value)
				//	{
				//		categoria.IdEstado = Convert.ToInt16(reader[columName]);
				//		hasData = true;
				//	}
				//}
				//catch{}

                
    //            #endregion
                
    //            categoria.SetLoadedState();
    //            if(hasData)
    //            {
    //            	return categoria;
    //            }
    //            else return null;
    //        }
    //        catch (Exception exc)
    //        {
    //            return null;
    //        }
    //        finally
    //        {
                
    //        }
    //    }
        
        #endregion
        
   
    }
}


