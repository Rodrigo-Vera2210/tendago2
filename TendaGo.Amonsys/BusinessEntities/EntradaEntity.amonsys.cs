
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{

	[System.Serializable]
	public partial class EntradaEntityBase : EntityStatesManager

	{

		#region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdEmpresa_EntityColumn = "IdEmpresa";
		public const string IdLocal_EntityColumn = "IdLocal";
		public const string IdLocalAsLocalBodega_EntityColumn = "IdLocalAsLocalBodega";
		public const string IdLocal_DisplayMember_EntityColumn = "IdLocal_DisplayMember";
		public const string Periodo_EntityColumn = "Periodo";
		public const string Fecha_EntityColumn = "Fecha";
		public const string TipoTransaccion_EntityColumn = "TipoTransaccion";
		public const string IdProveedor_EntityColumn = "IdProveedor";
		public const string IdProveedorAsEntidad_EntityColumn = "IdProveedorAsEntidad";
		public const string IdProveedor_DisplayMember_EntityColumn = "IdProveedor_DisplayMember";
		public const string Subtotal0_EntityColumn = "Subtotal0";
		public const string Subtotal12_EntityColumn = "Subtotal12";
		public const string Total_EntityColumn = "Total";
		public const string Saldo_EntityColumn = "Saldo";
		public const string NumeroFacturaPedido_EntityColumn = "NumeroFacturaPedido";
		public const string IdFormaPago_EntityColumn = "IdFormaPago";
		public const string Tasa_EntityColumn = "Tasa";
		public const string IdMonedaOrigen_EntityColumn = "IdMonedaOrigen";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";
		public const string Observaciones_EntityColumn = "Observaciones";

		#endregion


		#region << Atributtes >>

		private string _id;
		private int _idEmpresa;
		private int _idLocal;
		private LocalBodegaEntity _IdLocalAsLocalBodega;
		private string _periodo;
		private string _ruc;
		private DateTime _fecha;
		private string _tipoTransaccion;
		private int _idProveedor;
		private EntidadEntity _IdProveedorAsEntidad;
		private decimal _subtotal0;
		private decimal _subtotal12;
		private decimal _valorAdicional;
		private decimal _total;
		private decimal _saldo;
		private string _numeroFacturaPedido;
		private string _transaccionPadre;
		private string _tipoTransaccionPadre;
		private string _estadoActual;
		private DateTime? _fechaHoraEntrega;
		private int _idFormaPago;
		private decimal _tasa;
		private short _idMonedaOrigen;
		private MonedaEntity _IdMonedaOrigenAsMoneda;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
		private string _observaciones;

		#endregion

		#region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of Id. 
		/// </summary>
		public virtual string Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEmpresa. 
		/// </summary>
		public virtual int IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdLocal. 
		/// </summary>
		public virtual int IdLocal
		{
			get
			{
				return _idLocal;
			}
			set
			{
				if (_idLocal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idLocal = value;
			}
		}

		public virtual LocalBodegaEntity IdLocalAsLocalBodega
		{
			get
			{
				return _IdLocalAsLocalBodega;
			}
			set
			{
				_IdLocalAsLocalBodega = value;
			}
		}

		public virtual string IdLocal_DisplayMember
		{
			get
			{
				if (IdLocalAsLocalBodega != null)
				{
					return IdLocalAsLocalBodega.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Periodo. 
		/// </summary>
		public virtual string Periodo
		{
			get
			{
				return _periodo;
			}
			set
			{
				if (_periodo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_periodo = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Ruc. 
		/// </summary>
		public virtual string Ruc
		{
			get
			{
				return _ruc;
			}
			set
			{
				if (_ruc != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ruc = value;
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of Fecha. 
		/// </summary>
		public virtual DateTime Fecha
		{
			get
			{
				return _fecha;
			}
			set
			{
				if (_fecha != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fecha = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TipoTransaccion. 
		/// </summary>
		public virtual string TipoTransaccion
		{
			get
			{
				return _tipoTransaccion;
			}
			set
			{
				if (_tipoTransaccion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tipoTransaccion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProveedor. 
		/// </summary>
		public virtual int IdProveedor
		{
			get
			{
				return _idProveedor;
			}
			set
			{
				if (_idProveedor != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProveedor = value;
			}
		}

		public virtual EntidadEntity IdProveedorAsEntidad
		{
			get
			{
				return _IdProveedorAsEntidad;
			}
			set
			{
				_IdProveedorAsEntidad = value;
			}
		}

		public virtual string IdProveedor_DisplayMember
		{
			get
			{
				if (IdProveedorAsEntidad != null)
				{
					return IdProveedorAsEntidad.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Subtotal0. 
		/// </summary>
		public virtual decimal Subtotal0
		{
			get
			{
				return _subtotal0;
			}
			set
			{
				if (_subtotal0 != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_subtotal0 = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Subtotal12. 
		/// </summary>
		public virtual decimal Subtotal12
		{
			get
			{
				return _subtotal12;
			}
			set
			{
				if (_subtotal12 != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_subtotal12 = value;
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of Total. 
		/// </summary>
		public virtual decimal ValorAdicional
		{
			get
			{
				return _valorAdicional;
			}
			set
			{
				if (_valorAdicional != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_valorAdicional = value;
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of Total. 
		/// </summary>
		public virtual decimal Total
		{
			get
			{
				return _total;
			}
			set
			{
				if (_total != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_total = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Saldo. 
		/// </summary>
		public virtual decimal Saldo
		{
			get
			{
				return _saldo;
			}
			set
			{
				if (_saldo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_saldo = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of NumeroFacturaPedido. 
		/// </summary>
		public virtual string NumeroFacturaPedido
		{
			get
			{
				return _numeroFacturaPedido;
			}
			set
			{
				if (_numeroFacturaPedido != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_numeroFacturaPedido = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of TransaccionPadre. 
		/// </summary>
		public virtual string TransaccionPadre
		{
			get
			{
				return _transaccionPadre;
			}
			set
			{
				if (_transaccionPadre != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_transaccionPadre = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of TipoTransaccionPadre. 
		/// </summary>
		public virtual string TipoTransaccionPadre
		{
			get
			{
				return _tipoTransaccionPadre;
			}
			set
			{
				if (_tipoTransaccionPadre != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tipoTransaccionPadre = value;
			}
		}
		/// <summary> 
		/// Get or sets a optional value of TipoTransaccionPadre. 
		/// </summary>
		public virtual string EstadoActual
		{
			get
			{
				return _estadoActual;
			}
			set
			{
				if (_estadoActual != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_estadoActual = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaHoraEntregaReal. 
		/// </summary>
		public virtual DateTime? FechaHoraEntrega
		{
			get
			{
				return _fechaHoraEntrega;
			}
			set
			{
				if (_fechaHoraEntrega != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaHoraEntrega = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdFormaPago. 
		/// </summary>
		public virtual int IdFormaPago
		{
			get
			{
				return _idFormaPago;
			}
			set
			{
				if (_idFormaPago != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idFormaPago = value;
			}
		}
		/// <summary> 
		/// Get or sets a optional value of tasa de conversion a moneda de origen. 
		/// </summary>
		public virtual decimal Tasa
		{
			get
			{
				return _tasa;
			}
			set
			{
				if (_tasa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tasa = value;
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of IdMonedaOrigen. 
		/// </summary>
		public virtual short IdMonedaOrigen
		{
			get
			{
				return _idMonedaOrigen;
			}
			set
			{
				if (_idMonedaOrigen != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idMonedaOrigen = value;
			}
		}

		public virtual MonedaEntity IdMonedaOrigenAsMoneda
		{
			get
			{
				return _IdMonedaOrigenAsMoneda;
			}
			set
			{
				_IdMonedaOrigenAsMoneda = value;
			}
		}

		public virtual string IdMonedaOrigen_DisplayMember
		{
			get
			{
				if (IdMonedaOrigenAsMoneda != null)
				{
					return IdMonedaOrigenAsMoneda.ToString();
				}
				return "";
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

		public virtual string Observaciones
		{
			get
			{
				return _observaciones;
			}
			set
			{
				if (_observaciones != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_observaciones = value;
			}
		}


		#endregion


		public EntradaEntityBase()
		{
			SetNewState();
		}


		internal EntradaEntity CopyBase()
		{
			EntradaEntity copy = new EntradaEntity();
			copy.Id = this.Id;
			copy.IdEmpresa = this.IdEmpresa;
			copy.IdLocal = this.IdLocal;
			copy.Periodo = this.Periodo;
			copy.Fecha = this.Fecha;
			copy.TipoTransaccion = this.TipoTransaccion;
			copy.IdProveedor = this.IdProveedor;
			copy.Subtotal0 = this.Subtotal0;
			copy.Subtotal12 = this.Subtotal12;
			copy.Total = this.Total;
			copy.Saldo = this.Saldo;
			copy.NumeroFacturaPedido = this.NumeroFacturaPedido;
			copy.TipoTransaccionPadre = this.TipoTransaccionPadre;
			copy.TransaccionPadre = this.TransaccionPadre;
			copy.EstadoActual = this.EstadoActual;
			copy.FechaHoraEntrega = this.FechaHoraEntrega;
			copy.ValorAdicional = this.ValorAdicional;
			copy.IdFormaPago = this.IdFormaPago;
			copy.IpIngreso = this.IpIngreso;
			copy.UsuarioIngreso = this.UsuarioIngreso;
			copy.FechaIngreso = this.FechaIngreso;
			copy.IpModificacion = this.IpModificacion;
			copy.UsuarioModificacion = this.UsuarioModificacion;
			copy.FechaModificacion = this.FechaModificacion;
			copy.IdEstado = this.IdEstado;
			copy.Observaciones = this.Observaciones;

			if (this.IdLocalAsLocalBodega != null)
			{
				copy.IdLocalAsLocalBodega = this.IdLocalAsLocalBodega.Copy();
			}
			if (this.IdProveedorAsEntidad != null)
			{
				copy.IdProveedorAsEntidad = this.IdProveedorAsEntidad.Copy();
			}

			return copy;

		}

		#region << Entity State Methods >>
		public void RollBackChildrensState()
		{
			if (_IdLocalAsLocalBodega != null)
			{
				if (_IdLocalAsLocalBodega.PreviousState != EntityStatesEnum.None) _IdLocalAsLocalBodega.RollBackState();
			}
			if (_IdProveedorAsEntidad != null)
			{
				if (_IdProveedorAsEntidad.PreviousState != EntityStatesEnum.None) _IdProveedorAsEntidad.RollBackState();
			}

		}

		internal void SetStateBase(EntityStatesEnum state)
		{
			this.CurrentState = state;
			if (_IdLocalAsLocalBodega != null)
			{
				if (_IdLocalAsLocalBodega.CurrentState != state) _IdLocalAsLocalBodega.SetState(state);
			}
			if (_IdProveedorAsEntidad != null)
			{
				if (_IdProveedorAsEntidad.CurrentState != state) _IdProveedorAsEntidad.SetState(state);
			}

		}
		#endregion

		private bool __selected;

		public bool __Selected
		{
			get { return __selected; }
			set { __selected = value; }
		}

		private PagoCreditoEntity reciboPago;
		public PagoCreditoEntity ReciboPago
		{
			get
			{
				return reciboPago;
			}
			set
			{
				reciboPago = value;
			}
		}


		#region << Children >>

		private CuentaPorPagarEntityCollection _CuentaPorPagarFromIdEntrada;

		public virtual CuentaPorPagarEntityCollection CuentaPorPagarFromIdEntrada
		{
			get
			{
				return _CuentaPorPagarFromIdEntrada;
			}
			set
			{
				_CuentaPorPagarFromIdEntrada = value;
			}
		}

		private DetalleEntradaEntityCollection _DetalleEntradaFromIdEntrada;

		public virtual DetalleEntradaEntityCollection DetalleEntradaFromIdEntrada
		{
			get
			{
				return _DetalleEntradaFromIdEntrada;
			}
			set
			{
				_DetalleEntradaFromIdEntrada = value;
			}
		}


		#endregion



	}
}

