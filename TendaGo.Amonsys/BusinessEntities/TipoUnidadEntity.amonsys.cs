    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class TipoUnidadEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdEmpresa_EntityColumn = "IdEmpresa";
		public const string IdProducto_EntityColumn = "IdProducto";
		public const string IdProductoAsProducto_EntityColumn = "IdProductoAsProducto";
		public const string IdProducto_DisplayMember_EntityColumn = "IdProducto_DisplayMember";
		public const string TipoUnidad_EntityColumn = "TipoUnidad";
		public const string Cantidad_EntityColumn = "Cantidad";
		public const string UnidadMedidad_EntityColumn = "UnidadMedidad";
		public const string UnidadMedidadAsUnidadMedida_EntityColumn = "UnidadMedidadAsUnidadMedida";
		public const string UnidadMedidad_DisplayMember_EntityColumn = "UnidadMedidad_DisplayMember";
		public const string Precio_EntityColumn = "Precio";
        public const string CantidadMinima_EntityColumn = "CantidadMinima";
        public const string IncluyeIva_EntityColumn = "IncluyeIva";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";
		public const string Descuento_EntityColumn = "Descuento";
		public const string Costo_EntityColumn = "Costo";
		public const string Plantilla_EntityColumn = "Plantilla";
		#endregion


		#region << Atributtes >>

		private int _id;
		private short _idEmpresa;
		private int _idProducto;
		private ProductoEntity _IdProductoAsProducto;
		private string _tipoUnidad;
		private decimal _cantidad;
        private decimal _cantidadMinima;
        private int _unidadMedidad;
		private UnidadMedidaEntity _UnidadMedidadAsUnidadMedida;
		private decimal _precio;
		private bool _incluyeIva;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
		private decimal _descuento;
		private decimal _costo;
        private bool _plantilla;


        #endregion

        #region << Properties >>

        /// <summary> 
        /// Get or sets a obligatory value of Id. 
        /// </summary>
        public virtual int Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEmpresa. 
		/// </summary>
		public virtual short IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProducto. 
		/// </summary>
		public virtual int IdProducto
		{
			get
			{
				return _idProducto;
			}
			set
			{
				if (_idProducto != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProducto = value;
			}
		}

		public virtual ProductoEntity IdProductoAsProducto
		{
			get
			{
				return _IdProductoAsProducto;
			}
			set
			{
				_IdProductoAsProducto = value;
			}
		}

		public virtual string IdProducto_DisplayMember
		{
			get
			{
				if(IdProductoAsProducto!= null ) 
				{
					return IdProductoAsProducto.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TipoUnidad. 
		/// </summary>
		public virtual string TipoUnidad
		{
			get
			{
				return _tipoUnidad;
			}
			set
			{
				if (_tipoUnidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tipoUnidad = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Cantidad. 
		/// </summary>
		public virtual decimal Cantidad
		{
			get
			{
				return _cantidad;
			}
			set
			{
				if (_cantidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_cantidad = value;
			}
		}

        /// <summary> 
		/// Get or sets a obligatory value of Cantidad Minima que deben comprar para aplicar este precio. 
		/// </summary>
		public virtual decimal CantidadMinima
        {
            get
            {
                return _cantidadMinima;
            }
            set
            {
                if (_cantidadMinima != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _cantidadMinima = value;
            }
        }

        /// <summary> 
        /// Get or sets a obligatory value of UnidadMedidad. 
        /// </summary>
        public virtual int UnidadMedidad
		{
			get
			{
				return _unidadMedidad;
			}
			set
			{
				if (_unidadMedidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_unidadMedidad = value;
			}
		}

		public virtual UnidadMedidaEntity UnidadMedidadAsUnidadMedida
		{
			get
			{
				return _UnidadMedidadAsUnidadMedida;
			}
			set
			{
				_UnidadMedidadAsUnidadMedida = value;
			}
		}

		public virtual string UnidadMedidad_DisplayMember
		{
			get
			{
				if(UnidadMedidadAsUnidadMedida!= null ) 
				{
					return UnidadMedidadAsUnidadMedida.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Precio. 
		/// </summary>
		public virtual decimal Precio
		{
			get
			{
				return _precio;
			}
			set
			{
				if (_precio != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_precio = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IncluyeIva. 
		/// </summary>
		public virtual bool IncluyeIva
		{
			get
			{
				return _incluyeIva;
			}
			set
			{
				if (_incluyeIva != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_incluyeIva = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

		//public virtual decimal Descuento
		//{
		//	get
		//	{
		//		return _descuento;
		//	}
		//	set
		//	{
		//		if (_descuento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
		//		{
		//			CurrentState = EntityStatesEnum.Updated;
		//		}
		//		_descuento = value;
		//	}
		//}

		public virtual decimal Costo
		{
			get
			{
				return _costo;
			}
			set
			{
				if (_costo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_costo = value;
			}
		}

        /// <summary> 
        /// Get or sets a obligatory value of Plantilla. 
        /// </summary>
        public virtual bool Plantilla
        {
            get
            {
                return _plantilla;
            }
            set
            {
                if (_plantilla != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _plantilla = value;
            }
        }
        #endregion


        public TipoUnidadEntityBase ()
        {
            SetNewState();
        }
        
        
        internal TipoUnidadEntity CopyBase()
        {
			TipoUnidadEntity copy = new TipoUnidadEntity();
			copy.Id = this.Id;
			copy.IdEmpresa = this.IdEmpresa;
			copy.IdProducto = this.IdProducto;
			copy.TipoUnidad = this.TipoUnidad;
			copy.Cantidad = this.Cantidad;
			copy.UnidadMedidad = this.UnidadMedidad;
			copy.Precio = this.Precio;
			copy.IncluyeIva = this.IncluyeIva;
			copy.IpIngreso = this.IpIngreso;
			copy.UsuarioIngreso = this.UsuarioIngreso;
			copy.FechaIngreso = this.FechaIngreso;
			copy.IpModificacion = this.IpModificacion;
			copy.UsuarioModificacion = this.UsuarioModificacion;
			copy.FechaModificacion = this.FechaModificacion;
			copy.IdEstado = this.IdEstado;
			//copy.Descuento = this.Descuento;
			copy.Costo = this.Costo;
			copy.Plantilla = this.Plantilla;

            if ( this.IdProductoAsProducto!=null)
			{
				copy.IdProductoAsProducto = this.IdProductoAsProducto.Copy(); 
			}
			if( this.UnidadMedidadAsUnidadMedida!=null)
			{
				copy.UnidadMedidadAsUnidadMedida = this.UnidadMedidadAsUnidadMedida.Copy(); 
			}

          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdProductoAsProducto != null )
			{
				if (_IdProductoAsProducto.PreviousState != EntityStatesEnum.None)_IdProductoAsProducto.RollBackState();
			}
			if( _UnidadMedidadAsUnidadMedida != null )
			{
				if (_UnidadMedidadAsUnidadMedida.PreviousState != EntityStatesEnum.None)_UnidadMedidadAsUnidadMedida.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdProductoAsProducto != null )
			{
				if (_IdProductoAsProducto.CurrentState != state)_IdProductoAsProducto.SetState(state);
			}
			if( _UnidadMedidadAsUnidadMedida != null )
			{
				if (_UnidadMedidadAsUnidadMedida.CurrentState != state)_UnidadMedidadAsUnidadMedida.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

		private DetalleSalidaEntityCollection _DetalleSalidaFromIdTipoUnidad;

		public virtual DetalleSalidaEntityCollection DetalleSalidaFromIdTipoUnidad
		{
			get
			{
				return _DetalleSalidaFromIdTipoUnidad;
			}
			set
			{
				_DetalleSalidaFromIdTipoUnidad = value;
			}
		}

		private PrecioEntityCollection _PrecioFromIdTipoUnidad;

		public virtual PrecioEntityCollection PrecioFromIdTipoUnidad
		{
			get
			{
				return _PrecioFromIdTipoUnidad;
			}
			set
			{
				_PrecioFromIdTipoUnidad = value;
			}
		}

        
#endregion
        
        
        
    }
}

