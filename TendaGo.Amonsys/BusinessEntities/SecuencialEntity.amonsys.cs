    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class SecuencialEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdTipoDocumento_EntityColumn = "IdTipoDocumento";
		public const string Ruc_EntityColumn = "Ruc";
		public const string RucAsLinea_EntityColumn = "RucAsLinea";
		public const string Ruc_DisplayMember_EntityColumn = "Ruc_DisplayMember";
		public const string Secuencial_EntityColumn = "Secuencial";
		public const string Autorizacion_EntityColumn = "Autorizacion";
		public const string Establecimiento_EntityColumn = "Establecimiento";
		public const string FechaVigencia_EntityColumn = "FechaVigencia";
		public const string PuntoVenta_EntityColumn = "PuntoVenta"; 

        #endregion

        
        #region << Atributtes >>

		private int _id;
		private string _IdTipoDocumento;
		private string _Ruc; 
		private int _Secuencial;
		private string _Autorizacion;
		private string _Establecimiento;
		private DateTime _FechaVigencia;
		private string _PuntoVenta; 
        #endregion

        #region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of Id. 
		/// </summary>
		public virtual int Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdTipoDocumento. 
		/// </summary>
		public virtual string IdTipoDocumento
		{
			get
			{
				return _IdTipoDocumento;
			}
			set
			{
				if (_IdTipoDocumento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_IdTipoDocumento = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Ruc. 
		/// </summary>
		public virtual string Ruc
		{
			get
			{
				return _Ruc;
			}
			set
			{
				if (_Ruc != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_Ruc = value;
			}
		} 
		 
		/// <summary> 
		/// Get or sets a obligatory value of Secuencial. 
		/// </summary>
		public virtual int Secuencial
		{
			get
			{
				return _Secuencial;
			}
			set
			{
				if (_Secuencial != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_Secuencial = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Autorizacion. 
		/// </summary>
		public virtual string Autorizacion
		{
			get
			{
				return _Autorizacion;
			}
			set
			{
				if (_Autorizacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_Autorizacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Establecimiento. 
		/// </summary>
		public virtual string Establecimiento
		{
			get
			{
				return _Establecimiento;
			}
			set
			{
				if (_Establecimiento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_Establecimiento = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaVigencia. 
		/// </summary>
		public virtual DateTime FechaVigencia
		{
			get
			{
				return _FechaVigencia;
			}
			set
			{
				if (_FechaVigencia != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_FechaVigencia = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of PuntoVenta. 
		/// </summary>
		public virtual string PuntoVenta
		{
			get
			{
				return _PuntoVenta;
			}
			set
			{
				if (_PuntoVenta != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_PuntoVenta = value;
			}
		} 
 
        #endregion
        
        
        public SecuencialEntityBase ()
        {
            SetNewState();
        }
        
        
        internal SecuencialEntity CopyBase()
        {
          SecuencialEntity copy = new SecuencialEntity();
          copy.Id = this.Id;
          copy.IdTipoDocumento = this.IdTipoDocumento;
          copy.Ruc = this.Ruc;
          copy.Secuencial = this.Secuencial;
          copy.Autorizacion = this.Autorizacion;
          copy.Establecimiento = this.Establecimiento;
          copy.FechaVigencia = this.FechaVigencia;
          copy.PuntoVenta = this.PuntoVenta;
          
          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			 
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;  
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

#endregion
        
        
        
    }
}

