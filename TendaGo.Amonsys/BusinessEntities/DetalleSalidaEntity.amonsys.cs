    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class DetalleSalidaEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string Periodo_EntityColumn = "Periodo";
		public const string Fecha_EntityColumn = "Fecha";
		public const string TipoTransaccion_EntityColumn = "TipoTransaccion";
		public const string IdSalida_EntityColumn = "IdSalida";
		public const string IdSalidaAsSalida_EntityColumn = "IdSalidaAsSalida";
		public const string IdSalida_DisplayMember_EntityColumn = "IdSalida_DisplayMember";
		public const string IdProducto_EntityColumn = "IdProducto";
		public const string IdProveedor_EntityColumn = "IdProveedor";
		public const string IdProveedorAsEntidad_EntityColumn = "IdProveedorAsEntidad";
		public const string IdProveedor_DisplayMember_EntityColumn = "IdProveedor_DisplayMember";
		public const string IdLocal_EntityColumn = "IdLocal";
		public const string IdLocalAsLocalBodega_EntityColumn = "IdLocalAsLocalBodega";
		public const string IdLocal_DisplayMember_EntityColumn = "IdLocal_DisplayMember";
		public const string CostoUnitarioImportacion_EntityColumn = "CostoUnitarioImportacion";
		public const string Cantidad_EntityColumn = "Cantidad";
		public const string IdTipoUnidad_EntityColumn = "IdTipoUnidad";
		public const string IdTipoUnidadAsTipoUnidad_EntityColumn = "IdTipoUnidadAsTipoUnidad";
		public const string IdTipoUnidad_DisplayMember_EntityColumn = "IdTipoUnidad_DisplayMember";
		public const string CostoVenta_EntityColumn = "CostoVenta";
		public const string Precio_EntityColumn = "Precio";
		public const string Descuento_EntityColumn = "Descuento";
		public const string Subtotal_EntityColumn = "Subtotal";
		public const string FechaFabricacion_EntityColumn = "FechaFabricacion";
		public const string FechaExpiracion_EntityColumn = "FechaExpiracion";
		public const string Lote_EntityColumn = "Lote";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
        public const string IdEstado_EntityColumn = "IdEstado";
        public const string Empaquetado_EntityColumn = "Empaquetado";
        public const string Revisado_EntityColumn = "Revisado";
        public const string IdEmpresa_EntityColumn = "IdEmpresa";
        public const string Estado_EntityColumn = "Estado";

        #endregion

        
        #region << Atributtes >>

		private string _id;
		private string _periodo;
		private DateTime _fecha;
		private string _tipoTransaccion;
		private string _idSalida;
		private SalidaEntity _IdSalidaAsSalida;
		private int _idProducto;
		private int _idProveedor;
		private EntidadEntity _IdProveedorAsEntidad;
		private int _idLocal;
		private LocalBodegaEntity _IdLocalAsLocalBodega;
		private decimal _costoUnitarioImportacion;
		private decimal _cantidad;
        private int _idTipoUnidad;
		private bool _incluyeIva;
		private TipoUnidadEntity _IdTipoUnidadAsTipoUnidad;
		private ProductoEntity _IdProductoAsProducto;
		private decimal _costoVenta;
		private decimal _precio;
		private decimal _descuento;
		private decimal _subtotal;
		private DateTime? _fechaFabricacion;
		private DateTime? _fechaExpiracion;
		private string _lote;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
        private bool _empaquetado;
        private bool _revisado;
        private int _idEmpresa;
        private short _estado;

        #endregion

        #region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of Id. 
		/// </summary>
		public virtual string Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Periodo. 
		/// </summary>
		public virtual string Periodo
		{
			get
			{
				return _periodo;
			}
			set
			{
				if (_periodo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_periodo = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Fecha. 
		/// </summary>
		public virtual DateTime Fecha
		{
			get
			{
				return _fecha;
			}
			set
			{
				if (_fecha != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fecha = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TipoTransaccion. 
		/// </summary>
		public virtual string TipoTransaccion
		{
			get
			{
				return _tipoTransaccion;
			}
			set
			{
				if (_tipoTransaccion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tipoTransaccion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdSalida. 
		/// </summary>
		public virtual string IdSalida
		{
			get
			{
				return _idSalida;
			}
			set
			{
				if (_idSalida != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idSalida = value;
			}
		}

		public virtual SalidaEntity IdSalidaAsSalida
		{
			get
			{
				return _IdSalidaAsSalida;
			}
			set
			{
				_IdSalidaAsSalida = value;
			}
		}

		public virtual string IdSalida_DisplayMember
		{
			get
			{
				if(IdSalidaAsSalida!= null ) 
				{
					return IdSalidaAsSalida.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProducto. 
		/// </summary>
		public virtual int IdProducto
		{
			get
			{
				return _idProducto;
			}
			set
			{
				if (_idProducto != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProducto = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProveedor. 
		/// </summary>
		public virtual int IdProveedor
		{
			get
			{
				return _idProveedor;
			}
			set
			{
				if (_idProveedor != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProveedor = value;
			}
		}

		public virtual EntidadEntity IdProveedorAsEntidad
		{
			get
			{
				return _IdProveedorAsEntidad;
			}
			set
			{
				_IdProveedorAsEntidad = value;
			}
		}

		public virtual string IdProveedor_DisplayMember
		{
			get
			{
				if(IdProveedorAsEntidad!= null ) 
				{
					return IdProveedorAsEntidad.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdLocal. 
		/// </summary>
		public virtual int IdLocal
		{
			get
			{
				return _idLocal;
			}
			set
			{
				if (_idLocal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idLocal = value;
			}
		}

		public virtual LocalBodegaEntity IdLocalAsLocalBodega
		{
			get
			{
				return _IdLocalAsLocalBodega;
			}
			set
			{
				_IdLocalAsLocalBodega = value;
			}
		}

		public virtual string IdLocal_DisplayMember
		{
			get
			{
				if(IdLocalAsLocalBodega!= null ) 
				{
					return IdLocalAsLocalBodega.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of CostoUnitarioImportacion. 
		/// </summary>
		public virtual decimal CostoUnitarioImportacion
		{
			get
			{
				return _costoUnitarioImportacion;
			}
			set
			{
				if (_costoUnitarioImportacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_costoUnitarioImportacion = value;
			}
        }

        /// <summary> 
        /// Get or sets a obligatory value of Cantidad. 
        /// </summary>
        public virtual bool Empaquetado
        {
            get
            {
                return _empaquetado;
            }
            set
            {
                if (_empaquetado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _empaquetado = value;
            }
        }

        /// <summary> 
        /// Get or sets a obligatory value of Cantidad. 
        /// </summary>
        public virtual bool Revisado
        {
            get
            {
                return _revisado;
            }
            set
            {
                if (_revisado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _revisado = value;
            }
        }

        /// <summary> 
        /// Get or sets a obligatory value of Cantidad. 
        /// </summary>
        public virtual decimal Cantidad
		{
			get
			{
				return _cantidad;
			}
			set
			{
				if (_cantidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_cantidad = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdTipoUnidad. 
		/// </summary>
		public virtual bool IncluyeIva
		{
			get
			{
				return _incluyeIva;
			}
			set
			{
				if (_incluyeIva != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_incluyeIva = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdTipoUnidad. 
		/// </summary>
		public virtual int IdTipoUnidad
		{
			get
			{
				return _idTipoUnidad;
			}
			set
			{
				if (_idTipoUnidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idTipoUnidad = value;
			}
		}

		public virtual ProductoEntity IdProductoAsProducto
		{
			get
			{
				return _IdProductoAsProducto;
			}
			set
			{
				_IdProductoAsProducto = value;
			}
		}
		public virtual TipoUnidadEntity IdTipoUnidadAsTipoUnidad
		{
			get
			{
				return _IdTipoUnidadAsTipoUnidad;
			}
			set
			{
				_IdTipoUnidadAsTipoUnidad = value;
			}
		}

		public virtual string IdTipoUnidad_DisplayMember
		{
			get
			{
				if(IdTipoUnidadAsTipoUnidad!= null ) 
				{
					return IdTipoUnidadAsTipoUnidad.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of CostoVenta. 
		/// </summary>
		public virtual decimal CostoVenta
		{
			get
			{
				return _costoVenta;
			}
			set
			{
				if (_costoVenta != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_costoVenta = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Precio. 
		/// </summary>
		public virtual decimal Precio
		{
			get
			{
				return _precio;
			}
			set
			{
				if (_precio != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_precio = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Descuento. 
		/// </summary>
		public virtual decimal Descuento
		{
			get
			{
				return _descuento;
			}
			set
			{
				if (_descuento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_descuento = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Subtotal. 
		/// </summary>
		public virtual decimal Subtotal
		{
			get
			{
				return _subtotal;
			}
			set
			{
				if (_subtotal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_subtotal = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaFabricacion. 
		/// </summary>
		public virtual DateTime? FechaFabricacion
		{
			get
			{
				return _fechaFabricacion;
			}
			set
			{
				if (_fechaFabricacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaFabricacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaExpiracion. 
		/// </summary>
		public virtual DateTime? FechaExpiracion
		{
			get
			{
				return _fechaExpiracion;
			}
			set
			{
				if (_fechaExpiracion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaExpiracion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Lote. 
		/// </summary>
		public virtual string Lote
		{
			get
			{
				return _lote;
			}
			set
			{
				if (_lote != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_lote = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IdEmpresa. 
		/// </summary>
		public virtual int IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

        /// <summary> 
        /// Get or sets a value of Estado. 
        /// </summary>
        public virtual short Estado
        {
            get
            {
                return _estado;
            }
            set
            {
                if (_estado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _estado = value;
            }
        }

        #endregion


        public DetalleSalidaEntityBase ()
        {
            SetNewState();
        }


		internal DetalleSalidaEntity CopyBase()
		{
			DetalleSalidaEntity copy = new DetalleSalidaEntity();
			copy.Id = this.Id;
			copy.Periodo = this.Periodo;
			copy.Fecha = this.Fecha;
			copy.TipoTransaccion = this.TipoTransaccion;
			copy.IdSalida = this.IdSalida;
			copy.IdProducto = this.IdProducto;
			copy.IdProveedor = this.IdProveedor;
			copy.IdLocal = this.IdLocal;
			copy.CostoUnitarioImportacion = this.CostoUnitarioImportacion;
			copy.Cantidad = this.Cantidad;
			copy.IdTipoUnidad = this.IdTipoUnidad;
			copy.IncluyeIva = this.IncluyeIva;
			copy.CostoVenta = this.CostoVenta;
			copy.Precio = this.Precio;
			copy.Descuento = this.Descuento;
			copy.Subtotal = this.Subtotal;
			copy.FechaFabricacion = this.FechaFabricacion;
			copy.FechaExpiracion = this.FechaExpiracion;
			copy.Lote = this.Lote;
			copy.IpIngreso = this.IpIngreso;
			copy.UsuarioIngreso = this.UsuarioIngreso;
			copy.FechaIngreso = this.FechaIngreso;
			copy.IpModificacion = this.IpModificacion;
			copy.UsuarioModificacion = this.UsuarioModificacion;
			copy.FechaModificacion = this.FechaModificacion;
			copy.IdEstado = this.IdEstado;
			copy.Empaquetado = this.Empaquetado;
			copy.Revisado = this.Revisado;
			copy.IdEmpresa = this.IdEmpresa;
			copy.Estado = this.Estado;

			if (this.IdSalidaAsSalida != null)
			{
				copy.IdSalidaAsSalida = this.IdSalidaAsSalida.Copy();
			}
			if (this.IdProveedorAsEntidad != null)
			{
				copy.IdProveedorAsEntidad = this.IdProveedorAsEntidad.Copy();
			}
			if (this.IdLocalAsLocalBodega != null)
			{
				copy.IdLocalAsLocalBodega = this.IdLocalAsLocalBodega.Copy();
			}
			if (this.IdTipoUnidadAsTipoUnidad != null)
			{
				copy.IdTipoUnidadAsTipoUnidad = this.IdTipoUnidadAsTipoUnidad.Copy();
			}

			return copy;

		}
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdSalidaAsSalida != null )
			{
				if (_IdSalidaAsSalida.PreviousState != EntityStatesEnum.None)_IdSalidaAsSalida.RollBackState();
			}
			if( _IdProveedorAsEntidad != null )
			{
				if (_IdProveedorAsEntidad.PreviousState != EntityStatesEnum.None)_IdProveedorAsEntidad.RollBackState();
			}
			if( _IdLocalAsLocalBodega != null )
			{
				if (_IdLocalAsLocalBodega.PreviousState != EntityStatesEnum.None)_IdLocalAsLocalBodega.RollBackState();
			}
			if( _IdTipoUnidadAsTipoUnidad != null )
			{
				if (_IdTipoUnidadAsTipoUnidad.PreviousState != EntityStatesEnum.None)_IdTipoUnidadAsTipoUnidad.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdSalidaAsSalida != null )
			{
				if (_IdSalidaAsSalida.CurrentState != state)_IdSalidaAsSalida.SetState(state);
			}
			if( _IdProveedorAsEntidad != null )
			{
				if (_IdProveedorAsEntidad.CurrentState != state)_IdProveedorAsEntidad.SetState(state);
			}
			if( _IdLocalAsLocalBodega != null )
			{
				if (_IdLocalAsLocalBodega.CurrentState != state)_IdLocalAsLocalBodega.SetState(state);
			}
			if( _IdTipoUnidadAsTipoUnidad != null )
			{
				if (_IdTipoUnidadAsTipoUnidad.CurrentState != state)_IdTipoUnidadAsTipoUnidad.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }


		#region << Children >>

		private SerieSalidaEntityCollection _SerieSalidaFromIdSalida;

		public virtual SerieSalidaEntityCollection SerieSalidaFromIdSalida
		{
			get
			{
				return _SerieSalidaFromIdSalida;
			}
			set
			{
				_SerieSalidaFromIdSalida = value;
			}
		}

		#endregion



	}
}

