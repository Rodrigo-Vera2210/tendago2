    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class UsuarioEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string InicioSesion_EntityColumn = "InicioSesion";
		public const string IdEmpresa_EntityColumn = "IdEmpresa";
		public const string IdEmpresaAsEmpresa_EntityColumn = "IdEmpresaAsEmpresa";
		public const string IdEmpresa_DisplayMember_EntityColumn = "IdEmpresa_DisplayMember";
		public const string IdPerifl_EntityColumn = "IdPerifl";
		public const string IdPeriflAsPerfil_EntityColumn = "IdPeriflAsPerfil";
		public const string IdPerifl_DisplayMember_EntityColumn = "IdPerifl_DisplayMember";
		public const string Nombres_EntityColumn = "Nombres";
		public const string Identificacion_EntityColumn = "Identificacion";
		public const string Sexo_EntityColumn = "Sexo";
		public const string Direccion_EntityColumn = "Direccion";
		public const string Correo_EntityColumn = "Correo";
		public const string Contraseña_EntityColumn = "Contraseña";
		public const string Telefono_EntityColumn = "Telefono";
		public const string Foto_EntityColumn = "Foto";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";

        #endregion

        
        #region << Atributtes >>

		private string _inicioSesion;
		private int _idEmpresa;
		private EmpresaEntity _IdEmpresaAsEmpresa;
		private short _idPerifl;
		private PerfilEntity _IdPeriflAsPerfil;
		private string _nombres;
		private string _identificacion;
		private bool _sexo;
		private string _direccion;
		private string _correo;
		private string _contraseña;
		private string _telefono;
		private byte[] _foto;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;

        #endregion

        #region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of InicioSesion. 
		/// </summary>
		public virtual string InicioSesion
		{
			get
			{
				return _inicioSesion;
			}
			set
			{
				if (_inicioSesion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_inicioSesion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEmpresa. 
		/// </summary>
		public virtual int IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

		public virtual EmpresaEntity IdEmpresaAsEmpresa
		{
			get
			{
				return _IdEmpresaAsEmpresa;
			}
			set
			{
				_IdEmpresaAsEmpresa = value;
			}
		}

		public virtual string IdEmpresa_DisplayMember
		{
			get
			{
				if(IdEmpresaAsEmpresa!= null ) 
				{
					return IdEmpresaAsEmpresa.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdPerifl. 
		/// </summary>
		public virtual short IdPerifl
		{
			get
			{
				return _idPerifl;
			}
			set
			{
				if (_idPerifl != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idPerifl = value;
			}
		}

		public virtual PerfilEntity IdPeriflAsPerfil
		{
			get
			{
				return _IdPeriflAsPerfil;
			}
			set
			{
				_IdPeriflAsPerfil = value;
			}
		}

		public virtual string IdPerifl_DisplayMember
		{
			get
			{
				if(IdPeriflAsPerfil!= null ) 
				{
					return IdPeriflAsPerfil.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Nombres. 
		/// </summary>
		public virtual string Nombres
		{
			get
			{
				return _nombres;
			}
			set
			{
				if (_nombres != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_nombres = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Identificacion. 
		/// </summary>
		public virtual string Identificacion
		{
			get
			{
				return _identificacion;
			}
			set
			{
				if (_identificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_identificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Sexo. 
		/// </summary>
		public virtual bool Sexo
		{
			get
			{
				return _sexo;
			}
			set
			{
				if (_sexo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_sexo = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Direccion. 
		/// </summary>
		public virtual string Direccion
		{
			get
			{
				return _direccion;
			}
			set
			{
				if (_direccion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_direccion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Correo. 
		/// </summary>
		public virtual string Correo
		{
			get
			{
				return _correo;
			}
			set
			{
				if (_correo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_correo = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Contraseña. 
		/// </summary>
		public virtual string Contraseña
		{
			get
			{
				return _contraseña;
			}
			set
			{
				if (_contraseña != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_contraseña = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Telefono. 
		/// </summary>
		public virtual string Telefono
		{
			get
			{
				return _telefono;
			}
			set
			{
				if (_telefono != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_telefono = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Foto. 
		/// </summary>
		public virtual byte[] Foto
		{
			get
			{
				return _foto;
			}
			set
			{
				if (_foto != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_foto = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

 
        #endregion
        
        
        public UsuarioEntityBase ()
        {
            SetNewState();
        }
        
        
        internal UsuarioEntity CopyBase()
        {
          UsuarioEntity copy = new UsuarioEntity();
          copy.InicioSesion = this.InicioSesion;
          copy.IdEmpresa = this.IdEmpresa;
          copy.IdPerifl = this.IdPerifl;
          copy.Nombres = this.Nombres;
          copy.Identificacion = this.Identificacion;
          copy.Sexo = this.Sexo;
          copy.Direccion = this.Direccion;
          copy.Correo = this.Correo;
          copy.Contraseña = this.Contraseña;
          copy.Telefono = this.Telefono;
          copy.Foto = this.Foto;
          copy.IpIngreso = this.IpIngreso;
          copy.UsuarioIngreso = this.UsuarioIngreso;
          copy.FechaIngreso = this.FechaIngreso;
          copy.IpModificacion = this.IpModificacion;
          copy.UsuarioModificacion = this.UsuarioModificacion;
          copy.FechaModificacion = this.FechaModificacion;
          copy.IdEstado = this.IdEstado;
			if( this.IdEmpresaAsEmpresa!=null)
			{
				copy.IdEmpresaAsEmpresa = this.IdEmpresaAsEmpresa.Copy(); 
			}
			if( this.IdPeriflAsPerfil!=null)
			{
				copy.IdPeriflAsPerfil = this.IdPeriflAsPerfil.Copy(); 
			}

          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdEmpresaAsEmpresa != null )
			{
				if (_IdEmpresaAsEmpresa.PreviousState != EntityStatesEnum.None)_IdEmpresaAsEmpresa.RollBackState();
			}
			if( _IdPeriflAsPerfil != null )
			{
				if (_IdPeriflAsPerfil.PreviousState != EntityStatesEnum.None)_IdPeriflAsPerfil.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdEmpresaAsEmpresa != null )
			{
				if (_IdEmpresaAsEmpresa.CurrentState != state)_IdEmpresaAsEmpresa.SetState(state);
			}
			if( _IdPeriflAsPerfil != null )
			{
				if (_IdPeriflAsPerfil.CurrentState != state)_IdPeriflAsPerfil.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

		private UsuarioLocalBodegaEntityCollection _UsuarioLocalBodegaFromInicioSesion;

		public virtual UsuarioLocalBodegaEntityCollection UsuarioLocalBodegaFromInicioSesion
		{
			get
			{
				return _UsuarioLocalBodegaFromInicioSesion;
			}
			set
			{
				_UsuarioLocalBodegaFromInicioSesion = value;
			}
		}

        
#endregion
        
        
        
    }
}

