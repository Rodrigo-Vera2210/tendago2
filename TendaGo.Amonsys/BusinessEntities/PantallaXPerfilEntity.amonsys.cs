    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class PantallaXPerfilEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdPerfil_EntityColumn = "IdPerfil";
		public const string IdPerfilAsPerfil_EntityColumn = "IdPerfilAsPerfil";
		public const string IdPerfil_DisplayMember_EntityColumn = "IdPerfil_DisplayMember";
		public const string IdPantalla_EntityColumn = "IdPantalla";
		public const string IdPantallaAsPantalla_EntityColumn = "IdPantallaAsPantalla";
		public const string IdPantalla_DisplayMember_EntityColumn = "IdPantalla_DisplayMember";
		public const string Guardar_EntityColumn = "Guardar";
		public const string Modificar_EntityColumn = "Modificar";
		public const string Eliminar_EntityColumn = "Eliminar";
		public const string Consultar_EntityColumn = "Consultar";
		public const string VistaPreliminar_EntityColumn = "VistaPreliminar";
		public const string Imprimir_EntityColumn = "Imprimir";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";

        #endregion

        
        #region << Atributtes >>

		private short _id;
		private short _idPerfil;
		private PerfilEntity _IdPerfilAsPerfil;
		private short _idPantalla;
		private PantallaEntity _IdPantallaAsPantalla;
		private bool _guardar;
		private bool _modificar;
		private bool _eliminar;
		private bool _consultar;
		private bool _vistaPreliminar;
		private bool _imprimir;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;

        #endregion

        #region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of Id. 
		/// </summary>
		public virtual short Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdPerfil. 
		/// </summary>
		public virtual short IdPerfil
		{
			get
			{
				return _idPerfil;
			}
			set
			{
				if (_idPerfil != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idPerfil = value;
			}
		}

		public virtual PerfilEntity IdPerfilAsPerfil
		{
			get
			{
				return _IdPerfilAsPerfil;
			}
			set
			{
				_IdPerfilAsPerfil = value;
			}
		}

		public virtual string IdPerfil_DisplayMember
		{
			get
			{
				if(IdPerfilAsPerfil!= null ) 
				{
					return IdPerfilAsPerfil.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdPantalla. 
		/// </summary>
		public virtual short IdPantalla
		{
			get
			{
				return _idPantalla;
			}
			set
			{
				if (_idPantalla != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idPantalla = value;
			}
		}

		public virtual PantallaEntity IdPantallaAsPantalla
		{
			get
			{
				return _IdPantallaAsPantalla;
			}
			set
			{
				_IdPantallaAsPantalla = value;
			}
		}

		public virtual string IdPantalla_DisplayMember
		{
			get
			{
				if(IdPantallaAsPantalla!= null ) 
				{
					return IdPantallaAsPantalla.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Guardar. 
		/// </summary>
		public virtual bool Guardar
		{
			get
			{
				return _guardar;
			}
			set
			{
				if (_guardar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_guardar = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Modificar. 
		/// </summary>
		public virtual bool Modificar
		{
			get
			{
				return _modificar;
			}
			set
			{
				if (_modificar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_modificar = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Eliminar. 
		/// </summary>
		public virtual bool Eliminar
		{
			get
			{
				return _eliminar;
			}
			set
			{
				if (_eliminar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_eliminar = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Consultar. 
		/// </summary>
		public virtual bool Consultar
		{
			get
			{
				return _consultar;
			}
			set
			{
				if (_consultar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_consultar = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of VistaPreliminar. 
		/// </summary>
		public virtual bool VistaPreliminar
		{
			get
			{
				return _vistaPreliminar;
			}
			set
			{
				if (_vistaPreliminar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_vistaPreliminar = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Imprimir. 
		/// </summary>
		public virtual bool Imprimir
		{
			get
			{
				return _imprimir;
			}
			set
			{
				if (_imprimir != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_imprimir = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

 
        #endregion
        
        
        public PantallaXPerfilEntityBase ()
        {
            SetNewState();
        }
        
        
        internal PantallaXPerfilEntity CopyBase()
        {
          PantallaXPerfilEntity copy = new PantallaXPerfilEntity();
          copy.Id = this.Id;
          copy.IdPerfil = this.IdPerfil;
          copy.IdPantalla = this.IdPantalla;
          copy.Guardar = this.Guardar;
          copy.Modificar = this.Modificar;
          copy.Eliminar = this.Eliminar;
          copy.Consultar = this.Consultar;
          copy.VistaPreliminar = this.VistaPreliminar;
          copy.Imprimir = this.Imprimir;
          copy.IpIngreso = this.IpIngreso;
          copy.UsuarioIngreso = this.UsuarioIngreso;
          copy.FechaIngreso = this.FechaIngreso;
          copy.IpModificacion = this.IpModificacion;
          copy.UsuarioModificacion = this.UsuarioModificacion;
          copy.FechaModificacion = this.FechaModificacion;
          copy.IdEstado = this.IdEstado;
			if( this.IdPerfilAsPerfil!=null)
			{
				copy.IdPerfilAsPerfil = this.IdPerfilAsPerfil.Copy(); 
			}
			if( this.IdPantallaAsPantalla!=null)
			{
				copy.IdPantallaAsPantalla = this.IdPantallaAsPantalla.Copy(); 
			}

          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdPerfilAsPerfil != null )
			{
				if (_IdPerfilAsPerfil.PreviousState != EntityStatesEnum.None)_IdPerfilAsPerfil.RollBackState();
			}
			if( _IdPantallaAsPantalla != null )
			{
				if (_IdPantallaAsPantalla.PreviousState != EntityStatesEnum.None)_IdPantallaAsPantalla.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdPerfilAsPerfil != null )
			{
				if (_IdPerfilAsPerfil.CurrentState != state)_IdPerfilAsPerfil.SetState(state);
			}
			if( _IdPantallaAsPantalla != null )
			{
				if (_IdPantallaAsPantalla.CurrentState != state)_IdPantallaAsPantalla.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

        
#endregion
        
        
        
    }
}

