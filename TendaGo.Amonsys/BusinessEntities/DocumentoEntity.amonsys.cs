    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class DocumentoEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdTipoDocumento_EntityColumn = "IdTipoDocumento";
		public const string IdTipoDocumentoAsTipoDocumento_EntityColumn = "IdTipoDocumentoAsTipoDocumento";
		public const string IdTipoDocumento_DisplayMember_EntityColumn = "IdTipoDocumento_DisplayMember";
		public const string IdEmpresa_EntityColumn = "IdEmpresa";
		public const string IdSalida_EntityColumn = "IdSalida";
		public const string IdEntidad_EntityColumn = "IdEntidad";
		public const string IdEntidadAsEntidad_EntityColumn = "IdEntidadAsEntidad";
		public const string IdEntidad_DisplayMember_EntityColumn = "IdEntidad_DisplayMember";
		public const string IdMoneda_EntityColumn = "IdMoneda";
		public const string IdMonedaAsMoneda_EntityColumn = "IdMonedaAsMoneda";
		public const string IdMoneda_DisplayMember_EntityColumn = "IdMoneda_DisplayMember";
		public const string Notas_EntityColumn = "Notas";
		public const string GuiaRemision_EntityColumn = "GuiaRemision";
		public const string NumeroDocumento_EntityColumn = "NumeroDocumento";
		public const string Base0_EntityColumn = "Base0";
		public const string BaseIva_EntityColumn = "BaseIva";
		public const string TotalDescuento_EntityColumn = "TotalDescuento";
		public const string TotalSinImpuesto_EntityColumn = "TotalSinImpuesto";
		public const string TotalIce_EntityColumn = "TotalIce";
		public const string TotalIva_EntityColumn = "TotalIva";
		public const string Total_EntityColumn = "Total";
		public const string FormaPago_EntityColumn = "FormaPago";
		public const string IdFormaPagoSri_EntityColumn = "IdFormaPagoSri";
        public const string Plazo_EntityColumn = "Plazo";
		public const string UnidadTiempo_EntityColumn = "UnidadTiempo";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";
		public const string RUC_EntityColumn = "RUC";
		public const string Establecimiento_EntityColumn = "Establecimiento";
		public const string PuntoEmision_EntityColumn = "PuntoEmision";
		public const string Fecha_EntityColumn = "Fecha";
		public const string ConsumidorFinal_EntityColumn = "ConsumidorFinal";
        public const string IdFacturaGo_EntityColumn = "IdFacturaGo";

        #endregion


        #region << Atributtes >>

        private string _id;
		private string _idTipoDocumento;
		private DateTime _fecha;
		private TipoDocumentoEntity _IdTipoDocumentoAsTipoDocumento;
		private int _idEmpresa;
		private string _idSalida;
		private int _idEntidad;
		private EntidadEntity _IdEntidadAsEntidad;
		private short _idMoneda;
		private MonedaEntity _IdMonedaAsMoneda;
		private string _notas;
		private string _guiaRemision;
		private string _numeroDocumento;
		private decimal _base0;
		private decimal _baseIva;
		private decimal _totalDescuento;
		private decimal _totalSinImpuesto;
		private decimal _totalIce;
		private decimal _totalIva;
		private decimal _total;
		private string _formaPago;
		private int _idFormaPagoSri;
        private int _plazo;
		private string _unidadTiempo;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
		private string _ruc;
		private string _establecimiento;
		private string _puntoEmision;
		private bool _consumidorFinal;
        private long _idFacturaGo;
        #endregion

        #region << Properties >>

        /// <summary> 
        /// Get or sets a obligatory value of Id. 
        /// </summary>
        public virtual string Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdTipoDocumento. 
		/// </summary>
		public virtual DateTime Fecha
		{
			get
			{
				return _fecha;
			}
			set
			{
				if (_fecha != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fecha = value;
			}
		}
		/// <summary> 
		/// Get or sets a obligatory value of IdTipoDocumento. 
		/// </summary>
		public virtual string IdTipoDocumento
		{
			get
			{
				return _idTipoDocumento;
			}
			set
			{
				if (_idTipoDocumento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idTipoDocumento = value;
			}
		}

		public virtual TipoDocumentoEntity IdTipoDocumentoAsTipoDocumento
		{
			get
			{
				return _IdTipoDocumentoAsTipoDocumento;
			}
			set
			{
				_IdTipoDocumentoAsTipoDocumento = value;
			}
		}

		public virtual string IdTipoDocumento_DisplayMember
		{
			get
			{
				if(IdTipoDocumentoAsTipoDocumento!= null ) 
				{
					return IdTipoDocumentoAsTipoDocumento.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEmpresa. 
		/// </summary>
		public virtual int IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IdSalida. 
		/// </summary>
		public virtual string IdSalida
		{
			get
			{
				return _idSalida;
			}
			set
			{
				if (_idSalida != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idSalida = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEntidad. 
		/// </summary>
		public virtual int IdEntidad
		{
			get
			{
				return _idEntidad;
			}
			set
			{
				if (_idEntidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEntidad = value;
			}
		}

		public virtual EntidadEntity IdEntidadAsEntidad
		{
			get
			{
				return _IdEntidadAsEntidad;
			}
			set
			{
				_IdEntidadAsEntidad = value;
			}
		}

		public virtual string IdEntidad_DisplayMember
		{
			get
			{
				if(IdEntidadAsEntidad!= null ) 
				{
					return IdEntidadAsEntidad.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdMoneda. 
		/// </summary>
		public virtual short IdMoneda
		{
			get
			{
				return _idMoneda;
			}
			set
			{
				if (_idMoneda != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idMoneda = value;
			}
		}

		public virtual MonedaEntity IdMonedaAsMoneda
		{
			get
			{
				return _IdMonedaAsMoneda;
			}
			set
			{
				_IdMonedaAsMoneda = value;
			}
		}

		public virtual string IdMoneda_DisplayMember
		{
			get
			{
				if(IdMonedaAsMoneda!= null ) 
				{
					return IdMonedaAsMoneda.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Notas. 
		/// </summary>
		public virtual string Notas
		{
			get
			{
				return _notas;
			}
			set
			{
				if (_notas != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_notas = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of GuiaRemision. 
		/// </summary>
		public virtual string GuiaRemision
		{
			get
			{
				return _guiaRemision;
			}
			set
			{
				if (_guiaRemision != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_guiaRemision = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of NumeroDocumento. 
		/// </summary>
		public virtual string NumeroDocumento
		{
			get
			{
				return _numeroDocumento;
			}
			set
			{
				if (_numeroDocumento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_numeroDocumento = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Base0. 
		/// </summary>
		public virtual decimal Base0
		{
			get
			{
				return _base0;
			}
			set
			{
				if (_base0 != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_base0 = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of BaseIva. 
		/// </summary>
		public virtual decimal BaseIva
		{
			get
			{
				return _baseIva;
			}
			set
			{
				if (_baseIva != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_baseIva = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TotalDescuento. 
		/// </summary>
		public virtual decimal TotalDescuento
		{
			get
			{
				return _totalDescuento;
			}
			set
			{
				if (_totalDescuento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_totalDescuento = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of TotalSinImpuesto. 
		/// </summary>
		public virtual decimal TotalSinImpuesto
		{
			get
			{
				return _totalSinImpuesto;
			}
			set
			{
				if (_totalSinImpuesto != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_totalSinImpuesto = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TotalIce. 
		/// </summary>
		public virtual decimal TotalIce
		{
			get
			{
				return _totalIce;
			}
			set
			{
				if (_totalIce != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_totalIce = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TotalIva. 
		/// </summary>
		public virtual decimal TotalIva
		{
			get
			{
				return _totalIva;
			}
			set
			{
				if (_totalIva != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_totalIva = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Total. 
		/// </summary>
		public virtual decimal Total
		{
			get
			{
				return _total;
			}
			set
			{
				if (_total != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_total = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FormaPago. 
		/// </summary>
		public virtual string FormaPago
		{
			get
			{
				return _formaPago;
			}
			set
			{
				if (_formaPago != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_formaPago = value;
			}
		}

        /// <summary> 
        /// Get or sets a nulleable value of IdFormaPagoSri. 
        /// </summary>
        public virtual int IdFormaPagoSri
        {
            get
            {
                return _idFormaPagoSri;
            }
            set
            {
                if (_idFormaPagoSri != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _idFormaPagoSri = value;
            }
        }

        /// <summary> 
        /// Get or sets a obligatory value of Plazo. 
        /// </summary>
        public virtual int Plazo
		{
			get
			{
				return _plazo;
			}
			set
			{
				if (_plazo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_plazo = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UnidadTiempo. 
		/// </summary>
		public virtual string UnidadTiempo
		{
			get
			{
				return _unidadTiempo;
			}
			set
			{
				if (_unidadTiempo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_unidadTiempo = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}


		/// <summary> 
		/// Get or sets a obligatory value of PuntoEmision. 
		/// </summary>
		public virtual string PuntoEmision
		{
			get
			{
				return _puntoEmision;
			}
			set
			{
				if (_puntoEmision != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_puntoEmision = value;
			}
		}



		/// <summary> 
		/// Get or sets a obligatory value of establecimiento. 
		/// </summary>
		public virtual string Establecimiento
		{
			get
			{
				return _establecimiento;
			}
			set
			{
				if (_establecimiento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_establecimiento = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of ruc. 
		/// </summary>
		public virtual string RUC
		{
			get
			{
				return _ruc;
			}
			set
			{
				if (_ruc != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ruc = value;
			}
		}


		/// <summary> 
		/// Get or sets a obligatory value of establecimiento. 
		/// </summary>
		public virtual bool ConsumidorFinal
		{
			get
			{
				return _consumidorFinal;
			}
			set
			{
				if (_consumidorFinal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_consumidorFinal = value;
			}
		}


        /// <summary> 
        /// Get or sets a obligatory value of ruc. 
        /// </summary>
        public virtual long IdFacturaGo
        {
            get
            {
                return _idFacturaGo;
            }
            set
            {
                if (_idFacturaGo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _idFacturaGo = value;
            }
        }

        #endregion


        public DocumentoEntityBase ()
        {
            SetNewState();
        }


		internal DocumentoEntity CopyBase()
		{
			DocumentoEntity copy = new DocumentoEntity();
			copy.Id = this.Id;
			copy.Fecha = this.Fecha;
			copy.IdTipoDocumento = this.IdTipoDocumento;
			copy.IdEmpresa = this.IdEmpresa;
			copy.IdSalida = this.IdSalida;
			copy.IdEntidad = this.IdEntidad;
			copy.IdMoneda = this.IdMoneda;
			copy.Notas = this.Notas;
			copy.GuiaRemision = this.GuiaRemision;
			copy.NumeroDocumento = this.NumeroDocumento;
			copy.Base0 = this.Base0;
			copy.BaseIva = this.BaseIva;
			copy.TotalDescuento = this.TotalDescuento;
			copy.TotalSinImpuesto = this.TotalSinImpuesto;
			copy.TotalIce = this.TotalIce;
			copy.TotalIva = this.TotalIva;
			copy.Total = this.Total;
			copy.FormaPago = this.FormaPago;
			copy.IdFormaPagoSri = this.IdFormaPagoSri;
            copy.Plazo = this.Plazo;
			copy.UnidadTiempo = this.UnidadTiempo;
			copy.IpIngreso = this.IpIngreso;
			copy.UsuarioIngreso = this.UsuarioIngreso;
			copy.FechaIngreso = this.FechaIngreso;
			copy.IpModificacion = this.IpModificacion;
			copy.UsuarioModificacion = this.UsuarioModificacion;
			copy.FechaModificacion = this.FechaModificacion;
			copy.IdEstado = this.IdEstado;
			copy.RUC = this.RUC;
			copy.Establecimiento = this.Establecimiento;
			copy.PuntoEmision = this.PuntoEmision;
			copy.ConsumidorFinal = this.ConsumidorFinal;
            copy.IdFacturaGo = this.IdFacturaGo;

            if (this.IdTipoDocumentoAsTipoDocumento != null)
			{
				copy.IdTipoDocumentoAsTipoDocumento = this.IdTipoDocumentoAsTipoDocumento.Copy();
			}
			if (this.IdEntidadAsEntidad != null)
			{
				copy.IdEntidadAsEntidad = this.IdEntidadAsEntidad.Copy();
			}
			if (this.IdMonedaAsMoneda != null)
			{
				copy.IdMonedaAsMoneda = this.IdMonedaAsMoneda.Copy();
			}

			return copy;

		}
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdTipoDocumentoAsTipoDocumento != null )
			{
				if (_IdTipoDocumentoAsTipoDocumento.PreviousState != EntityStatesEnum.None)_IdTipoDocumentoAsTipoDocumento.RollBackState();
			}
			if( _IdEntidadAsEntidad != null )
			{
				if (_IdEntidadAsEntidad.PreviousState != EntityStatesEnum.None)_IdEntidadAsEntidad.RollBackState();
			}
			if( _IdMonedaAsMoneda != null )
			{
				if (_IdMonedaAsMoneda.PreviousState != EntityStatesEnum.None)_IdMonedaAsMoneda.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdTipoDocumentoAsTipoDocumento != null )
			{
				if (_IdTipoDocumentoAsTipoDocumento.CurrentState != state)_IdTipoDocumentoAsTipoDocumento.SetState(state);
			}
			if( _IdEntidadAsEntidad != null )
			{
				if (_IdEntidadAsEntidad.CurrentState != state)_IdEntidadAsEntidad.SetState(state);
			}
			if( _IdMonedaAsMoneda != null )
			{
				if (_IdMonedaAsMoneda.CurrentState != state)_IdMonedaAsMoneda.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

		private DetalleDocumentoEntityCollection _DetalleDocumentoFromIdDocumento;

		public virtual DetalleDocumentoEntityCollection DetalleDocumentoFromIdDocumento
		{
			get
			{
				return _DetalleDocumentoFromIdDocumento;
			}
			set
			{
				_DetalleDocumentoFromIdDocumento = value;
			}
		}

        
#endregion
        
        
        
    }
}

