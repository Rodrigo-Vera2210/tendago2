    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class DetalleCobroEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdCobroDebito_EntityColumn = "IdCobroDebito";
		public const string IdCobroDebitoAsCobroDebito_EntityColumn = "IdCobroDebitoAsCobroDebito";
		public const string IdCobroDebito_DisplayMember_EntityColumn = "IdCobroDebito_DisplayMember";
		public const string IdCuentaPorCobrar_EntityColumn = "IdCuentaPorCobrar";
		public const string IdCuentaPorCobrarAsCuentaPorCobrar_EntityColumn = "IdCuentaPorCobrarAsCuentaPorCobrar";
		public const string IdCuentaPorCobrar_DisplayMember_EntityColumn = "IdCuentaPorCobrar_DisplayMember";
		public const string IdMedioPago_EntityColumn = "IdMedioPago";
		public const string IdMedioPagoAsMedioPago_EntityColumn = "IdMedioPagoAsMedioPago";
		public const string IdMedioPago_DisplayMember_EntityColumn = "IdMedioPago_DisplayMember";
		public const string Valor_EntityColumn = "Valor";
		public const string Descripcion_EntityColumn = "Descripcion";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";
		public const string IdCierreCaja_EntityColumn = "IdCierreCaja";
        public const string IdLocal_EntityColumn = "IdLocal";

        #endregion


        #region << Atributtes >>

        private int _id;
		private string _idCobroDebito;
		private CobroDebitoEntity _IdCobroDebitoAsCobroDebito;
		private int _idCuentaPorCobrar;
		private CuentaPorCobrarEntity _IdCuentaPorCobrarAsCuentaPorCobrar;
		private int _idMedioPago;
		private MedioPagoEntity _IdMedioPagoAsMedioPago;
		private decimal _valor;
		private string _descripcion;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
		private string _idCierreCaja;
        private int _idLocal;

        #endregion

        #region << Properties >>

        /// <summary> 
        /// Get or sets a obligatory value of Id. 
        /// </summary>
        public virtual int Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdCobroDebito. 
		/// </summary>
		public virtual string IdCobroDebito
		{
			get
			{
				return _idCobroDebito;
			}
			set
			{
				if (_idCobroDebito != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idCobroDebito = value;
			}
		}

		public virtual CobroDebitoEntity IdCobroDebitoAsCobroDebito
		{
			get
			{
				return _IdCobroDebitoAsCobroDebito;
			}
			set
			{
				_IdCobroDebitoAsCobroDebito = value;
			}
		}

		public virtual string IdCobroDebito_DisplayMember
		{
			get
			{
				if(IdCobroDebitoAsCobroDebito!= null ) 
				{
					return IdCobroDebitoAsCobroDebito.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdCuentaPorCobrar. 
		/// </summary>
		public virtual int IdCuentaPorCobrar
		{
			get
			{
				return _idCuentaPorCobrar;
			}
			set
			{
				if (_idCuentaPorCobrar != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idCuentaPorCobrar = value;
			}
		}

		public virtual CuentaPorCobrarEntity IdCuentaPorCobrarAsCuentaPorCobrar
		{
			get
			{
				return _IdCuentaPorCobrarAsCuentaPorCobrar;
			}
			set
			{
				_IdCuentaPorCobrarAsCuentaPorCobrar = value;
			}
		}

		public virtual string IdCuentaPorCobrar_DisplayMember
		{
			get
			{
				if(IdCuentaPorCobrarAsCuentaPorCobrar!= null ) 
				{
					return IdCuentaPorCobrarAsCuentaPorCobrar.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IdMedioPago. 
		/// </summary>
		public virtual int IdMedioPago
		{
			get
			{
				return _idMedioPago;
			}
			set
			{
				if (_idMedioPago != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idMedioPago = value;
			}
		}

		public virtual MedioPagoEntity IdMedioPagoAsMedioPago
		{
			get
			{
				return _IdMedioPagoAsMedioPago;
			}
			set
			{
				_IdMedioPagoAsMedioPago = value;
			}
		}

		public virtual string IdMedioPago_DisplayMember
		{
			get
			{
				if(IdMedioPagoAsMedioPago!= null ) 
				{
					return IdMedioPagoAsMedioPago.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Valor. 
		/// </summary>
		public virtual decimal Valor
		{
			get
			{
				return _valor;
			}
			set
			{
				if (_valor != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_valor = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string Descripcion
		{
			get
			{
				return _descripcion;
			}
			set
			{
				if (_descripcion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_descripcion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

		public virtual string IdCierreCaja
		{
			get
			{
				return _idCierreCaja;
			}
			set
			{
				if (_idCierreCaja != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idCierreCaja = value;
			}
		}

        /// <summary> 
        /// Get or sets a value of IdLocal. 
        /// </summary>
        public virtual int IdLocal
        {
            get
            {
                return _idLocal;
            }
            set
            {
                if (_idLocal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _idLocal = value;
            }
        }

        #endregion


        public DetalleCobroEntityBase ()
        {
            SetNewState();
        }
        
        
        internal DetalleCobroEntity CopyBase()
        {
          DetalleCobroEntity copy = new DetalleCobroEntity();
          copy.Id = this.Id;
          copy.IdCobroDebito = this.IdCobroDebito;
          copy.IdCuentaPorCobrar = this.IdCuentaPorCobrar;
          copy.IdMedioPago = this.IdMedioPago;
          copy.Valor = this.Valor;
		  copy.Descripcion = this.Descripcion;
		  copy.IpIngreso = this.IpIngreso;
          copy.UsuarioIngreso = this.UsuarioIngreso;
          copy.FechaIngreso = this.FechaIngreso;
          copy.IpModificacion = this.IpModificacion;
          copy.UsuarioModificacion = this.UsuarioModificacion;
          copy.FechaModificacion = this.FechaModificacion;
          copy.IdEstado = this.IdEstado;
		  copy.IdCierreCaja = this.IdCierreCaja;
          copy.IdLocal = this.IdLocal;

            if ( this.IdCobroDebitoAsCobroDebito!=null)
			{
				copy.IdCobroDebitoAsCobroDebito = this.IdCobroDebitoAsCobroDebito.Copy(); 
			}
			if( this.IdCuentaPorCobrarAsCuentaPorCobrar!=null)
			{
				copy.IdCuentaPorCobrarAsCuentaPorCobrar = this.IdCuentaPorCobrarAsCuentaPorCobrar.Copy(); 
			}
			if( this.IdMedioPagoAsMedioPago!=null)
			{
				copy.IdMedioPagoAsMedioPago = this.IdMedioPagoAsMedioPago.Copy(); 
			}

          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdCobroDebitoAsCobroDebito != null )
			{
				if (_IdCobroDebitoAsCobroDebito.PreviousState != EntityStatesEnum.None)_IdCobroDebitoAsCobroDebito.RollBackState();
			}
			if( _IdCuentaPorCobrarAsCuentaPorCobrar != null )
			{
				if (_IdCuentaPorCobrarAsCuentaPorCobrar.PreviousState != EntityStatesEnum.None)_IdCuentaPorCobrarAsCuentaPorCobrar.RollBackState();
			}
			if( _IdMedioPagoAsMedioPago != null )
			{
				if (_IdMedioPagoAsMedioPago.PreviousState != EntityStatesEnum.None)_IdMedioPagoAsMedioPago.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdCobroDebitoAsCobroDebito != null )
			{
				if (_IdCobroDebitoAsCobroDebito.CurrentState != state)_IdCobroDebitoAsCobroDebito.SetState(state);
			}
			if( _IdCuentaPorCobrarAsCuentaPorCobrar != null )
			{
				if (_IdCuentaPorCobrarAsCuentaPorCobrar.CurrentState != state)_IdCuentaPorCobrarAsCuentaPorCobrar.SetState(state);
			}
			if( _IdMedioPagoAsMedioPago != null )
			{
				if (_IdMedioPagoAsMedioPago.CurrentState != state)_IdMedioPagoAsMedioPago.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }
        
        
#region << Children >>

        
#endregion
        
        
        
    }
}

