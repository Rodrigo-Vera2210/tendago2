    
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Amonsys Software Factory.
//     Template: Speed Developer FrameWork Version 1.0 (For Windows Applications)
//     Web Site: http://www.amonsys.com/SDF
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



using System;
using System.Collections.Generic;
using System.Text;

namespace ER.BE
{
    
    [System.Serializable] 
    public partial class DetalleEntradaEntityBase : EntityStatesManager
    
    {

        #region << Columns >>

		public const string Id_EntityColumn = "Id";
		public const string IdEmpresa_EntityColumn = "IdEmpresa";
		public const string Periodo_EntityColumn = "Periodo";
		public const string Fecha_EntityColumn = "Fecha";
		public const string TipoTransaccion_EntityColumn = "TipoTransaccion";
		public const string IdEntrada_EntityColumn = "IdEntrada";
		public const string IdEntradaAsEntrada_EntityColumn = "IdEntradaAsEntrada";
		public const string IdEntrada_DisplayMember_EntityColumn = "IdEntrada_DisplayMember";
		public const string IdProducto_EntityColumn = "IdProducto";
		public const string IdProductoAsProducto_EntityColumn = "IdProductoAsProducto";
		public const string IdProducto_DisplayMember_EntityColumn = "IdProducto_DisplayMember";
		public const string IdProveedor_EntityColumn = "IdProveedor";
		public const string IdProveedorAsEntidad_EntityColumn = "IdProveedorAsEntidad";
		public const string IdProveedor_DisplayMember_EntityColumn = "IdProveedor_DisplayMember";
		public const string IdLocal_EntityColumn = "IdLocal";
		public const string IdLocalAsLocalBodega_EntityColumn = "IdLocalAsLocalBodega";
		public const string IdLocal_DisplayMember_EntityColumn = "IdLocal_DisplayMember";
		public const string ValorFOB_EntityColumn = "ValorFOB";
		public const string FactorDistribucion_EntityColumn = "FactorDistribucion";
		public const string CostoUnitarioImportacion_EntityColumn = "CostoUnitarioImportacion";
		public const string Cantidad_EntityColumn = "Cantidad";
		public const string IdTipoUnidad_EntityColumn = "IdTipoUnidad";
		public const string CostoVenta_EntityColumn = "CostoVenta";
		public const string Descuento_EntityColumn = "Descuento";
		public const string ValorAdicional_EntityColumn = "ValorAdicional";
		public const string Subtotal_EntityColumn = "Subtotal";
		public const string FechaFabricacion_EntityColumn = "FechaFabricacion";
		public const string FechaExpiracion_EntityColumn = "FechaExpiracion";
		public const string Lote_EntityColumn = "Lote";
		public const string IpIngreso_EntityColumn = "IpIngreso";
		public const string UsuarioIngreso_EntityColumn = "UsuarioIngreso";
		public const string FechaIngreso_EntityColumn = "FechaIngreso";
		public const string IpModificacion_EntityColumn = "IpModificacion";
		public const string UsuarioModificacion_EntityColumn = "UsuarioModificacion";
		public const string FechaModificacion_EntityColumn = "FechaModificacion";
		public const string IdEstado_EntityColumn = "IdEstado";
		public const string Estado_EntityColumn = "Estado";

        #endregion

        
        #region << Atributtes >>

		private string _id;
		private int _idEmpresa;
		private string _periodo;
		private DateTime _fecha;
		private string _tipoTransaccion;
		private string _idEntrada;
		private EntradaEntity _IdEntradaAsEntrada;
		private int _idProducto;
		private ProductoEntity _IdProductoAsProducto;
		private int _idProveedor;
		private EntidadEntity _IdProveedorAsEntidad;
		private int _idLocal;
		private LocalBodegaEntity _IdLocalAsLocalBodega;
		private decimal _valorFOB;
		private decimal _factorDistribucion;
		private decimal _costoUnitarioImportacion;
		private decimal _cantidad;
		private int _idTipoUnidad;
		private decimal _costoVenta;
		private decimal _descuento;
		private decimal _valorAdicional;
		private decimal _subtotal;
		private DateTime? _fechaFabricacion;
		private DateTime? _fechaExpiracion;
		private string _lote;
		private string _ipIngreso;
		private string _usuarioIngreso;
		private DateTime _fechaIngreso;
		private string _ipModificacion;
		private string _usuarioModificacion;
		private DateTime? _fechaModificacion;
		private short _idEstado;
		private short _estado;

        #endregion

        #region << Properties >>

		/// <summary> 
		/// Get or sets a obligatory value of Id. 
		/// </summary>
		public virtual string Id
		{
			get
			{
				return _id;
			}
			set
			{
				if (_id != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_id = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEmpresa. 
		/// </summary>
		public virtual int IdEmpresa
		{
			get
			{
				return _idEmpresa;
			}
			set
			{
				if (_idEmpresa != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEmpresa = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Periodo. 
		/// </summary>
		public virtual string Periodo
		{
			get
			{
				return _periodo;
			}
			set
			{
				if (_periodo != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_periodo = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Fecha. 
		/// </summary>
		public virtual DateTime Fecha
		{
			get
			{
				return _fecha;
			}
			set
			{
				if (_fecha != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fecha = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of TipoTransaccion. 
		/// </summary>
		public virtual string TipoTransaccion
		{
			get
			{
				return _tipoTransaccion;
			}
			set
			{
				if (_tipoTransaccion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_tipoTransaccion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEntrada. 
		/// </summary>
		public virtual string IdEntrada
		{
			get
			{
				return _idEntrada;
			}
			set
			{
				if (_idEntrada != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEntrada = value;
			}
		}

		public virtual EntradaEntity IdEntradaAsEntrada
		{
			get
			{
				return _IdEntradaAsEntrada;
			}
			set
			{
				_IdEntradaAsEntrada = value;
			}
		}

		public virtual string IdEntrada_DisplayMember
		{
			get
			{
				if(IdEntradaAsEntrada!= null ) 
				{
					return IdEntradaAsEntrada.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProducto. 
		/// </summary>
		public virtual int IdProducto
		{
			get
			{
				return _idProducto;
			}
			set
			{
				if (_idProducto != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProducto = value;
			}
		}

		public virtual ProductoEntity IdProductoAsProducto
		{
			get
			{
				return _IdProductoAsProducto;
			}
			set
			{
				_IdProductoAsProducto = value;
			}
		}

		public virtual string IdProducto_DisplayMember
		{
			get
			{
				if(IdProductoAsProducto!= null ) 
				{
					return IdProductoAsProducto.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdProveedor. 
		/// </summary>
		public virtual int IdProveedor
		{
			get
			{
				return _idProveedor;
			}
			set
			{
				if (_idProveedor != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idProveedor = value;
			}
		}

		public virtual EntidadEntity IdProveedorAsEntidad
		{
			get
			{
				return _IdProveedorAsEntidad;
			}
			set
			{
				_IdProveedorAsEntidad = value;
			}
		}

		public virtual string IdProveedor_DisplayMember
		{
			get
			{
				if(IdProveedorAsEntidad!= null ) 
				{
					return IdProveedorAsEntidad.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdLocal. 
		/// </summary>
		public virtual int IdLocal
		{
			get
			{
				return _idLocal;
			}
			set
			{
				if (_idLocal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idLocal = value;
			}
		}

		public virtual LocalBodegaEntity IdLocalAsLocalBodega
		{
			get
			{
				return _IdLocalAsLocalBodega;
			}
			set
			{
				_IdLocalAsLocalBodega = value;
			}
		}

		public virtual string IdLocal_DisplayMember
		{
			get
			{
				if(IdLocalAsLocalBodega!= null ) 
				{
					return IdLocalAsLocalBodega.ToString();
				}
				return "";
			}
		}

		/// <summary> 
		/// Get or sets a optional value of ValorFOB. 
		/// </summary>
		public virtual decimal ValorFOB
		{
			get
			{
				return _valorFOB;
			}
			set
			{
				if (_valorFOB != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_valorFOB = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FactorDistribucion. 
		/// </summary>
		public virtual decimal FactorDistribucion
		{
			get
			{
				return _factorDistribucion;
			}
			set
			{
				if (_factorDistribucion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_factorDistribucion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of CostoUnitarioImportacion. 
		/// </summary>
		public virtual decimal CostoUnitarioImportacion
		{
			get
			{
				return _costoUnitarioImportacion;
			}
			set
			{
				if (_costoUnitarioImportacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_costoUnitarioImportacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of Cantidad. 
		/// </summary>
		public virtual decimal Cantidad
		{
			get
			{
				return _cantidad;
			}
			set
			{
				if (_cantidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_cantidad = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdTipoUnidad. 
		/// </summary>
		public virtual int IdTipoUnidad
		{
			get
			{
				return _idTipoUnidad;
			}
			set
			{
				if (_idTipoUnidad != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idTipoUnidad = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of CostoVenta. 
		/// </summary>
		public virtual decimal CostoVenta
		{
			get
			{
				return _costoVenta;
			}
			set
			{
				if (_costoVenta != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_costoVenta = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Descuento. 
		/// </summary>
		public virtual decimal Descuento
		{
			get
			{
				return _descuento;
			}
			set
			{
				if (_descuento != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_descuento = value;
			}
		} 

		/// <summary> 
		/// Get or sets a optional value of ValorAdicional. 
		/// </summary>
		public virtual decimal ValorAdicional
		{
			get
			{
				return _valorAdicional;
			}
			set
			{
				if (_valorAdicional != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_valorAdicional = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Subtotal. 
		/// </summary>
		public virtual decimal Subtotal
		{
			get
			{
				return _subtotal;
			}
			set
			{
				if (_subtotal != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_subtotal = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaFabricacion. 
		/// </summary>
		public virtual DateTime? FechaFabricacion
		{
			get
			{
				return _fechaFabricacion;
			}
			set
			{
				if (_fechaFabricacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaFabricacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaExpiracion. 
		/// </summary>
		public virtual DateTime? FechaExpiracion
		{
			get
			{
				return _fechaExpiracion;
			}
			set
			{
				if (_fechaExpiracion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaExpiracion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of Lote. 
		/// </summary>
		public virtual string Lote
		{
			get
			{
				return _lote;
			}
			set
			{
				if (_lote != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_lote = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IpIngreso. 
		/// </summary>
		public virtual string IpIngreso
		{
			get
			{
				return _ipIngreso;
			}
			set
			{
				if (_ipIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of UsuarioIngreso. 
		/// </summary>
		public virtual string UsuarioIngreso
		{
			get
			{
				return _usuarioIngreso;
			}
			set
			{
				if (_usuarioIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of FechaIngreso. 
		/// </summary>
		public virtual DateTime FechaIngreso
		{
			get
			{
				return _fechaIngreso;
			}
			set
			{
				if (_fechaIngreso != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaIngreso = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of IpModificacion. 
		/// </summary>
		public virtual string IpModificacion
		{
			get
			{
				return _ipModificacion;
			}
			set
			{
				if (_ipModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_ipModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of UsuarioModificacion. 
		/// </summary>
		public virtual string UsuarioModificacion
		{
			get
			{
				return _usuarioModificacion;
			}
			set
			{
				if (_usuarioModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_usuarioModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a optional value of FechaModificacion. 
		/// </summary>
		public virtual DateTime? FechaModificacion
		{
			get
			{
				return _fechaModificacion;
			}
			set
			{
				if (_fechaModificacion != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_fechaModificacion = value;
			}
		}

		/// <summary> 
		/// Get or sets a obligatory value of IdEstado. 
		/// </summary>
		public virtual short IdEstado
		{
			get
			{
				return _idEstado;
			}
			set
			{
				if (_idEstado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
				{
					CurrentState = EntityStatesEnum.Updated;
				}
				_idEstado = value;
			}
		}

        /// <summary> 
        /// Get or sets a value of Estado. 
        /// </summary>
        public virtual short Estado
        {
            get
            {
                return _estado;
            }
            set
            {
                if (_estado != value && CurrentState != EntityStatesEnum.New && CurrentState != EntityStatesEnum.Deleted)
                {
                    CurrentState = EntityStatesEnum.Updated;
                }
                _estado = value;
            }
        }


        #endregion


        public DetalleEntradaEntityBase ()
        {
            SetNewState();
        }
        
        
        internal DetalleEntradaEntity CopyBase()
        {
          DetalleEntradaEntity copy = new DetalleEntradaEntity();
          copy.Id = this.Id;
          copy.IdEmpresa = this.IdEmpresa;
          copy.Periodo = this.Periodo;
          copy.Fecha = this.Fecha;
          copy.TipoTransaccion = this.TipoTransaccion;
          copy.IdEntrada = this.IdEntrada;
          copy.IdProducto = this.IdProducto;
          copy.IdProveedor = this.IdProveedor;
          copy.IdLocal = this.IdLocal;
          copy.ValorFOB = this.ValorFOB;
          copy.FactorDistribucion = this.FactorDistribucion;
          copy.CostoUnitarioImportacion = this.CostoUnitarioImportacion;
          copy.Cantidad = this.Cantidad;
          copy.IdTipoUnidad = this.IdTipoUnidad;
          copy.CostoVenta = this.CostoVenta;
          copy.Descuento = this.Descuento;
          copy.ValorAdicional = this.ValorAdicional;
          copy.Subtotal = this.Subtotal;
          copy.FechaFabricacion = this.FechaFabricacion;
          copy.FechaExpiracion = this.FechaExpiracion;
          copy.Lote = this.Lote;
          copy.IpIngreso = this.IpIngreso;
          copy.UsuarioIngreso = this.UsuarioIngreso;
          copy.FechaIngreso = this.FechaIngreso;
          copy.IpModificacion = this.IpModificacion;
          copy.UsuarioModificacion = this.UsuarioModificacion;
          copy.FechaModificacion = this.FechaModificacion;
          copy.IdEstado = this.IdEstado;
          copy.Estado = this.Estado;
			if( this.IdEntradaAsEntrada!=null)
			{
				copy.IdEntradaAsEntrada = this.IdEntradaAsEntrada.Copy(); 
			}
			if( this.IdProductoAsProducto!=null)
			{
				copy.IdProductoAsProducto = this.IdProductoAsProducto.Copy(); 
			}
			if( this.IdProveedorAsEntidad!=null)
			{
				copy.IdProveedorAsEntidad = this.IdProveedorAsEntidad.Copy(); 
			}
			if( this.IdLocalAsLocalBodega!=null)
			{
				copy.IdLocalAsLocalBodega = this.IdLocalAsLocalBodega.Copy(); 
			}

          return copy;
          
        }
        
        #region << Entity State Methods >>
        public void RollBackChildrensState()
        {
			if( _IdEntradaAsEntrada != null )
			{
				if (_IdEntradaAsEntrada.PreviousState != EntityStatesEnum.None)_IdEntradaAsEntrada.RollBackState();
			}
			if( _IdProductoAsProducto != null )
			{
				if (_IdProductoAsProducto.PreviousState != EntityStatesEnum.None)_IdProductoAsProducto.RollBackState();
			}
			if( _IdProveedorAsEntidad != null )
			{
				if (_IdProveedorAsEntidad.PreviousState != EntityStatesEnum.None)_IdProveedorAsEntidad.RollBackState();
			}
			if( _IdLocalAsLocalBodega != null )
			{
				if (_IdLocalAsLocalBodega.PreviousState != EntityStatesEnum.None)_IdLocalAsLocalBodega.RollBackState();
			}
             
        }
        
        internal void SetStateBase(EntityStatesEnum state)
        {
			this.CurrentState=state;
			if( _IdEntradaAsEntrada != null )
			{
				if (_IdEntradaAsEntrada.CurrentState != state)_IdEntradaAsEntrada.SetState(state);
			}
			if( _IdProductoAsProducto != null )
			{
				if (_IdProductoAsProducto.CurrentState != state)_IdProductoAsProducto.SetState(state);
			}
			if( _IdProveedorAsEntidad != null )
			{
				if (_IdProveedorAsEntidad.CurrentState != state)_IdProveedorAsEntidad.SetState(state);
			}
			if( _IdLocalAsLocalBodega != null )
			{
				if (_IdLocalAsLocalBodega.CurrentState != state)_IdLocalAsLocalBodega.SetState(state);
			}
             
        }
        #endregion
        
        private bool __selected;

        public bool __Selected
        {
            get { return __selected; }
            set { __selected = value; }
        }


		#region << Children >>

		private SerieEntradaEntityCollection _SerieEntradaFromIdSalida;

		public virtual SerieEntradaEntityCollection SerieEntradaFromIdSalida
		{
			get
			{
				return _SerieEntradaFromIdSalida;
			}
			set
			{
				_SerieEntradaFromIdSalida = value;
			}
		}

		#endregion



	}
}

