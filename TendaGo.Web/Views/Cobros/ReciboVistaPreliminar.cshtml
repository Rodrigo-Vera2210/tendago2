@using TendaGo.Web.Models
@using TendaGo.Common
@using TendaGo.Web.ApplicationServices

@model CobroDebitoViewModel
@{
    var mediosPago = CatalogosAppService.ObtenerMediosPago();
    var totalPagos = 0M;
    var total = 0M;

}

<div class="invoice" id="ReciboModal">
    <div class="row">
        <div class="col-sm-6 invoice-left">

        </div>
        <div class="col-sm-6 invoice-right">
            <h3>
                RECIBO  No.
                @if (string.IsNullOrEmpty(Model.Id))
                {
                    <span> RECC-X-XXXXXXXX-X </span>
                }
                else
                {
                    @Model.Id
                }
            </h3>
            <span>@Model.FechaEmision.ToString("d' de ' MMMM' del 'yyyy", System.Globalization.CultureInfo.GetCultureInfo("es-ES"))</span>
        </div>
        <div style="padding: 10px;">
            <b>Observación:</b>
            <br>
            @Model.Observaciones
        </div>
    </div>
    <hr class="margin">
    <div class="row">
        <div class="col-sm-4 invoice-left">
            <h4>Cliente: <span>@Model.Identificacion</span></h4>

            @Model.RazonSocial
            <br>
            @((Model.Correo ?? "").ToLower())
            <br>
            Telefono: @Model.Telefono
        </div>
        <div class=" col-sm-4 invoice-right">
            <h4>&nbsp;</h4>
            @Html.Raw((string.IsNullOrEmpty(Model.Direccion) || (Model.Direccion == "null") ? "" : Model.Direccion).Replace("|", "<br>"))
        </div>
    </div>
    <div class="margin"></div>

    <table class="table datatable table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th class="text-center bold">Nota de Pedido No.</th>
                <th class="text-center bold">Cuota</th>
                <th class="text-center bold" style="max-width: 150px;">Valor</th>
                <th class="text-center bold" style="max-width: 100px;width: 150px;">Pago</th>
                <th class="text-center bold" style="max-width: 100px;width: 150px;">Metodo</th>
                <th class="text-center bold" style="max-width: 100px;">Saldo</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Pagos.Count > Model.Detalles.Count)
            {
                foreach (var item in Model.Pagos.Where(m => m.Valor > 0))
                {
                    total += item.Valor;
                    <tr>
                        <td class="text-center">@Model.Detalles[0].IdSalida</td>
                        <td class="text-center">@Model.Detalles[0].Numero</td>
                        <td class="text-right">$ @item.Valor.ToCustomFormatString()</td>
                        <td class="text-right">$ @item.Valor.ToCustomFormatString()</td>
                        <td class="text-right">@item.MedioPago</td>
                        <td class="text-right">$ 0</td>
                    </tr>
                }
            }
            else
            {
                foreach (var item in Model.Detalles.Where(m => m.Valor > 0))
                {
                    total += item.Valor;
                    <tr>
                        <td class="text-center">@item.IdSalida</td>
                        <td class="text-center">@item.Numero</td>
                        <td class="text-right">$ @item.Cuota.ToCustomFormatString()</td>
                        <td class="text-right">$ @item.Valor.ToCustomFormatString()</td>
                        <td class="text-right">@item.MetodoPago</td>
                        <td class="text-right">$ @((item.Cuota - item.Valor).ToCustomFormatString())</td>
                    </tr>
                }
            }


        </tbody>

    </table>
    <div class="margin"></div>
    <div class="row">
        <div class="col-sm-6">
            <div class="invoice-left">

            </div>
        </div>
        <div class="col-sm-6">
            <div class="invoice-right">

                @*<h4>Forma de Pago:</h4>
                    <ul class="list-unstyled">
                        @foreach (var pago in Model.Pagos)
                        {
                            var mpago = mediosPago.FirstOrDefault(m => m.Id == pago.IdMedioPago).MedioPago;
                            totalPagos += pago.Valor;
                            <li> <span>@mpago : $</span> @pago.Valor </li>
                        }
                    </ul>
                    <hr />*@
                @*<h4>TOTAL PAGADO: $ @totalPagos</h4>*@
                <h4>TOTAL PAGADO: $ @Model.Total</h4>


                @if (!string.IsNullOrEmpty(Model.Id))
                {

                    <div class="action-links" id="btnImprimir">

                        <button class="btn btn-primary btn-icon icon-left hidden-print" onclick="imprimirRecibo(event)" form="miFormulario">
                            Imprimir
                            <i class="entypo-doc-text"></i>
                        </button>
                        &nbsp;

                    </div>

                }
            </div>
        </div>
    </div>
</div>

<script>
    function imprimirRecibo(event) {

        event.preventDefault();//evita que se propague o se active el submit ya que existe dentro del mismo formulario (index en este caso)
        var contenidoDiv = $('#ReciboModal').html();
        var contenidoSinBoton = $('<div>').append($.parseHTML(contenidoDiv)).find('#btnImprimir').remove().end().html();
        var ventanaImpresion = window.open('', '_blank');
        ventanaImpresion.document.write(contenidoSinBoton);
        ventanaImpresion.document.write('</body></html>');
        ventanaImpresion.document.close();
        // Esperar un breve tiempo antes de imprimir
        setTimeout(function () {
            ventanaImpresion.print();
            ventanaImpresion.close();
        }, 200);
    }

</script>