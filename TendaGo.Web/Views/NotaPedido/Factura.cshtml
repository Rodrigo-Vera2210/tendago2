@using TendaGo.Common
@using TendaGo.Web.Models
@using TendaGo.Web.ApplicationServices
@model DocumentDto
@{
    ViewBag.Title = "FACTURA (Vista Preliminar)";
    var listaRUCs = RucsAppService.ObtenerRucs();
    var unidades = UnidadMedidaAppService.ObtenerUnidadesDeMedida();
    var ruc = listaRUCs.FirstOrDefault(m => m.Ruc == Model.RUC);
    if (ruc == null)
    {
        ruc = listaRUCs.FirstOrDefault();
    }

    var cliente = ClientesAppService.ObtenerClientePorId(Model.IdEntidad);
}

<div class="invoice">

    <div class="row">
        <div class="col-xs-6 invoice-left">
            <h3><b>FACTURA</b>  <span>No. @Model.NumeroDocumento</span></h3>

            <span>Fecha: @Model.Fecha.ToCustomFormatString()</span>
        </div>
        <div class="col-xs-6 invoice-right">
            <h4>
                @ruc.RazonSocial<br /> <small>@Model.RUC</small>
            </h4>
             
        </div>
    </div>
    <div class="divider"><hr /></div>

    <div class="row">
        <div class="col-sm-12">
            <h4>CLIENTE</h4>
        </div>

        <div class="col-sm-12">
            <b>Nombre/Razon Social:</b> @cliente.RazonSocial<br />
            <b>RUC o C&eacute;dula #:</b> @cliente.Identificacion
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 invoice-left">
            <b>Direccion:</b> @cliente.Direccion @cliente.Ciudad @cliente.Provincia <br />

            <b>Telefono:</b> @cliente.Celular
            @if (!string.IsNullOrEmpty(cliente.Celular) && !string.IsNullOrEmpty(cliente.Telefono))
            {
                <span>/</span>
            }
            @cliente.Telefono<br />

            <b>Correo:</b> @((cliente.Correo ?? "").ToLower()) <br />

        </div>

        <div class="col-md-6 invoice-right">
            <a href="@Url.Action("Factura", new { id=Model.Id, descargar=true})" target="_blank" class="btn btn-danger btn-icon icon-left hidden-print">
                Descargar PDF
                <i class="entypo-download"></i>
            </a>
        </div>
    </div>
    <div class="margin"></div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center">Cantidad</th>
                <th class="text-center">Unidad</th>
                <th width="40%">Producto</th>
                <th class="text-center">Preciosss</th>
                <th class="text-center">IVA</th>
                <th class="text-center">Subtotal</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Detalles != null)
            {
                foreach (var item in Model.Detalles)
                {
                    var producto = ProductosAppService.ObtenerProducto(item.IdProducto);
                    var unidad = unidades.FirstOrDefault(x => x.Id == producto.UnidadMedida);
                    var desUnidad = (unidad != null) ? unidad.UnidadMedida : "UNIDAD";

                    <tr>
                        <td class="text-center">@item.Cantidad</td>
                        <td class="text-center">@desUnidad</td>

                        <td>@producto.CodigoInterno - @producto.Producto @string.Format("{0}", producto.Descripcion).Replace(producto.Producto, "") </td>
                        <td class="text-right">$ @item.Precio.ToString("#,##0.0000")</td>
                        <td class="text-right">@item.Iva</td>
                        <td class="text-right">$ @item.SubtotalSinImpuesto.ToCustomFormatString()</td>
                    </tr>
                }
            }
        </tbody>
    </table>


    <div class="margin"></div>
    <div class="row">
        <div class="col-sm-6">
            <div class="invoice-left">


                @if (!string.IsNullOrEmpty(Model.Notas))
                {
                    <table class="table table-bordered margin-5-5" width="100%" border="1">
                        <thead>
                            <tr>
                                <th>
                                    Observaciones: <br />
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Model.Notas </td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>
        <div class="col-sm-6">
            <div class="invoice-right">
                <ul class="list-unstyled">
                    <li> Subtotal 0%: <strong>$ @Model.Base0.ToCustomFormatString()</strong> </li>
                    <li> Subtotal 15%: <strong>$ @Model.BaseIva.ToCustomFormatString()</strong> </li>
                    <li> _______________________________________________________________________ </li>
                    <li> Subtotal sin impuestos: <strong>$ @Model.TotalSinImpuesto.ToCustomFormatString()</strong> </li>
                    <li> Descuento: <strong>$ @Model.TotalDescuento.ToCustomFormatString()</strong> </li>
                    <li> ICE: <strong>$ @Model.TotalIce.ToCustomFormatString()</strong> </li>
                    <li> IVA 15%: <strong>$ @Model.TotalIva.ToCustomFormatString()</strong> </li>

                    <li> <h4> Total a Pagar: <strong>$ @Model.Total.ToCustomFormatString()</strong></h4> </li>
                </ul>

            </div>
        </div>
    </div>


    <div class="row hidden-print">
        <div class="col-sm-6 invoice-left">

            <a href="@Url.Action("resumen", new { id=Model.IdSalida })" class="btn btn-default btn-icon icon-left hidden-print">
                Regresar
                <i class="entypo-fast-backward"></i>
            </a>

        </div>
    </div>
</div>

<form id="downloadForm" action="@Url.Action("Descargar", new { id=Model.Id })" method="get" target="_download_@Model.Id">
    <input name="format" id="downloadFormat" type="hidden" value="PDF" />
</form>

@section scripts{
    <script>
        (function () {
            menu_settings.parentMenu = 'MnuNotaPedido';
            menu_settings.optionMenu = 'OpcCrear';
            SetActiveMenu();

            var descargarNotaPedido = function (format) {
                $("#downloadFormat").val(format);
                $("#downloadForm").submit();
            }

            $(".download-pdf").on("click", function () { descargarNotaPedido("PDF"); });
            $(".download-excel").on("click", function () { descargarNotaPedido("Excel"); });
            $(".download-word").on("click", function () { descargarNotaPedido("Word"); });

        })();

    </script>
}

@functions{

    string getTiempo(int plazo)
    {
        string tiempo = "dias";
        //Función que cambia a meses si pasa de 29 días o a años si pasa de 364, pero no cambia el valor del plazo
        //if (plazo > 29)
        //{
        //    if (plazo % 29 > 0)
        //    {
        //        if (plazo > 364)
        //        {
        //            tiempo = "año(s)";
        //        }
        //        else
        //        {
        //            tiempo = "meses";
        //        }
        //    }
        //    else
        //    {
        //        tiempo = "mes";
        //    }
        //}
        return tiempo;
    }
}